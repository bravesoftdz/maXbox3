<?xml version="1.0" encoding="utf-8"?>
<namespace name="IdGlobal_max">
  <const name="otUnknown" type="TIdOSType">
    <value>
      otUnknown
    </value>
  </const>
  <const name="otLinux" type="TIdOSType">
    <value>
      otLinux
    </value>
  </const>
  <const name="otWindows" type="TIdOSType">
    <value>
      otWindows
    </value>
  </const>
  <enum name="TIdOSType">
    <element name="otUnknown" />
    <element name="otLinux" />
    <element name="otWindows" />
  </enum>
  <array name="TBytes">
    <element type="Byte" />
  </array>
  <array name="TIdBytes">
    <element type="Byte" />
  </array>
  <const name="IdTimeoutDefault" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="IdTimeoutInfinite" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="IdFetchDelimDefault" type="Char">
    <value>
      $20
    </value>
  </const>
  <const name="IdFetchDeleteDefault" type="Boolean">
    <value>
      True
    </value>
  </const>
  <const name="IdFetchCaseSensitiveDefault" type="Boolean">
    <value>
      True
    </value>
  </const>
  <const name="gsIdProductName" type="string">
    <value>
      Indy
    </value>
  </const>
  <const name="gsIdVersion" type="string">
    <value>
      9.0.50
    </value>
  </const>
  <const name="POWER_1" type="Integer">
    <value>
      $FF
    </value>
  </const>
  <const name="POWER_2" type="Integer">
    <value>
      $FFFF
    </value>
  </const>
  <const name="POWER_3" type="Integer">
    <value>
      $FFFFFF
    </value>
  </const>
  <const name="POWER_4" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="UNIXSTARTDATE" type="TDateTime" visibility="public" />
  <const name="TIME_BASEDATE" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="CHAR0" type="Char">
    <value>
      $0
    </value>
  </const>
  <const name="BACKSPACE" type="Char">
    <value>
      $8
    </value>
  </const>
  <const name="LF" type="Char">
    <value>
      $A
    </value>
  </const>
  <const name="CR" type="Char">
    <value>
      $D
    </value>
  </const>
  <const name="EOL" type="string">
    <value>
      

    </value>
  </const>
  <const name="TAB" type="Char">
    <value>
      $9
    </value>
  </const>
  <const name="CHAR32" type="Char">
    <value>
      $20
    </value>
  </const>
  <const name="LWS" type="Set">
    <value>
      [#9,' ']
    </value>
  </const>
  <const name="wdays" visibility="public" />
  <const name="monthnames" visibility="public" />
  <const name="IdHexDigits" type="Array" visibility="public" />
  <const name="IdOctalDigits" type="Array" visibility="public" />
  <const name="HEXPREFIX" type="string">
    <value>
      0x
    </value>
  </const>
  <const name="GPathDelim" type="Char">
    <value>
      $5C
    </value>
  </const>
  <const name="GOSType" type="TIdOSType">
    <value>
      otWindows
    </value>
  </const>
  <const name="infinite" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <enum name="TIdThreadPriority" alias="TThreadPriority" namespace="Classes">
    <element name="tpIdle" />
    <element name="tpLowest" />
    <element name="tpLower" />
    <element name="tpNormal" />
    <element name="tpHigher" />
    <element name="tpHighest" />
    <element name="tpTimeCritical" />
  </enum>
  <const name="enDefault" type="TIdEncoding">
    <value>
      enDefault
    </value>
  </const>
  <const name="enANSI" type="TIdEncoding">
    <value>
      enANSI
    </value>
  </const>
  <const name="enUTF8" type="TIdEncoding">
    <value>
      enUTF8
    </value>
  </const>
  <enum name="TIdEncoding">
    <element name="enDefault" />
    <element name="enANSI" />
    <element name="enUTF8" />
  </enum>
  <array name="TIdIPv6Address" low="0" high="7">
    <element type="Word" />
  </array>
  <const name="maException" type="TIdMaxLineAction">
    <value>
      maException
    </value>
  </const>
  <const name="maSplit" type="TIdMaxLineAction">
    <value>
      maSplit
    </value>
  </const>
  <enum name="TIdMaxLineAction">
    <element name="maException" />
    <element name="maSplit" />
  </enum>
  <const name="rsOSDependent" type="TIdReuseSocket">
    <value>
      rsOSDependent
    </value>
  </const>
  <const name="rsTrue" type="TIdReuseSocket">
    <value>
      rsTrue
    </value>
  </const>
  <const name="rsFalse" type="TIdReuseSocket">
    <value>
      rsFalse
    </value>
  </const>
  <enum name="TIdReuseSocket">
    <element name="rsOSDependent" />
    <element name="rsTrue" />
    <element name="rsFalse" />
  </enum>
  <struct name="TIdCardinalBytes">
    <field name="Byte1" type="Byte" visibility="public" />
    <field name="Byte2" type="Byte" visibility="public" />
    <field name="Byte3" type="Byte" visibility="public" />
    <field name="Byte4" type="Byte" visibility="public" />
  </struct>
  <class name="TIdLocalEvent">
    <ancestor name="TEvent" namespace="SyncObjs">
      <methodref name="Create" visibility="public">
      </methodref>
      <methodref name="Create" visibility="public">
      </methodref>
      <methodref name="SetEvent" visibility="public">
      </methodref>
      <methodref name="ResetEvent" visibility="public">
      </methodref>
      <ancestor name="THandleObject" namespace="SyncObjs">
        <methodref name="Create" visibility="public">
        </methodref>
        <methodref name="Destroy" visibility="public">
        </methodref>
        <methodref name="WaitFor" visibility="public">
        </methodref>
        <propertyref name="LastError" visibility="public">
        </propertyref>
        <propertyref name="Handle" visibility="public">
        </propertyref>
        <ancestor name="TSynchroObject" namespace="SyncObjs">
          <methodref name="Acquire" visibility="public">
          </methodref>
          <methodref name="Release" visibility="public">
          </methodref>
          <ancestor name="TObject" namespace="System">
            <methodref name="Create" visibility="public">
            </methodref>
            <methodref name="Free" visibility="public">
            </methodref>
            <methodref name="InitInstance" visibility="public">
            </methodref>
            <methodref name="CleanupInstance" visibility="public">
            </methodref>
            <methodref name="ClassType" visibility="public">
            </methodref>
            <methodref name="ClassName" visibility="public">
            </methodref>
            <methodref name="ClassNameIs" visibility="public">
            </methodref>
            <methodref name="ClassParent" visibility="public">
            </methodref>
            <methodref name="ClassInfo" visibility="public">
            </methodref>
            <methodref name="InstanceSize" visibility="public">
            </methodref>
            <methodref name="InheritsFrom" visibility="public">
            </methodref>
            <methodref name="MethodAddress" visibility="public">
            </methodref>
            <methodref name="MethodName" visibility="public">
            </methodref>
            <methodref name="FieldAddress" visibility="public">
            </methodref>
            <methodref name="GetInterface" visibility="public">
            </methodref>
            <methodref name="GetInterfaceEntry" visibility="public">
            </methodref>
            <methodref name="GetInterfaceTable" visibility="public">
            </methodref>
            <methodref name="SafeCallException" visibility="public">
            </methodref>
            <methodref name="AfterConstruction" visibility="public">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public">
            </methodref>
            <methodref name="Dispatch" visibility="public">
            </methodref>
            <methodref name="DefaultHandler" visibility="public">
            </methodref>
            <methodref name="NewInstance" visibility="public">
            </methodref>
            <methodref name="FreeInstance" visibility="public">
            </methodref>
            <methodref name="Destroy" visibility="public">
            </methodref>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="AInitialState" type="Boolean" paramflags="const">
            <value>
              False
            </value>
          </parameter>
          <parameter name="AManualReset" type="Boolean" paramflags="const">
            <value>
              False
            </value>
          </parameter>
        </parameters>
      </constructor>
      <function name="WaitFor" visibility="public" procflags="overload">
        <parameters>
          <retval type="TWaitResult" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="TIdMimeTable">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="InitInstance" visibility="public">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public">
      </methodref>
      <methodref name="ClassName" visibility="public">
      </methodref>
      <methodref name="ClassNameIs" visibility="public">
      </methodref>
      <methodref name="ClassParent" visibility="public">
      </methodref>
      <methodref name="ClassInfo" visibility="public">
      </methodref>
      <methodref name="InstanceSize" visibility="public">
      </methodref>
      <methodref name="InheritsFrom" visibility="public">
      </methodref>
      <methodref name="MethodAddress" visibility="public">
      </methodref>
      <methodref name="MethodName" visibility="public">
      </methodref>
      <methodref name="FieldAddress" visibility="public">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public">
      </methodref>
      <methodref name="SafeCallException" visibility="public">
      </methodref>
      <methodref name="AfterConstruction" visibility="public">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public">
      </methodref>
      <methodref name="Dispatch" visibility="public">
      </methodref>
      <methodref name="DefaultHandler" visibility="public">
      </methodref>
      <methodref name="NewInstance" visibility="public">
      </methodref>
      <methodref name="FreeInstance" visibility="public">
      </methodref>
      <methodref name="Destroy" visibility="public">
      </methodref>
    </ancestor>
    <members>
      <field name="FOnBuildCache" type="TNotifyEvent" visibility="protected" />
      <field name="FMIMEList" type="TStringList" visibility="protected" />
      <field name="FFileExt" type="TStringList" visibility="protected" />
      <procedure name="BuildDefaultCache" visibility="public" procflags="virtual">
      </procedure>
      <procedure name="BuildCache" visibility="public" procflags="virtual">
      </procedure>
      <procedure name="AddMimeType" visibility="public">
        <parameters>
          <parameter name="Ext" type="string" paramflags="const" />
          <parameter name="MIMEType" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <function name="GetFileMIMEType" visibility="public">
        <parameters>
          <parameter name="AFileName" type="string" paramflags="const" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="GetDefaultFileExt" visibility="public">
        <parameters>
          <parameter name="MIMEType" type="string" paramflags="const" />
          <retval type="string" />
        </parameters>
      </function>
      <procedure name="LoadFromStrings" visibility="public">
        <parameters>
          <parameter name="AStrings" type="TStrings" />
          <parameter name="MimeSeparator" type="Char" paramflags="const">
            <value>
              $3D
            </value>
          </parameter>
        </parameters>
      </procedure>
      <procedure name="SaveToStrings" visibility="public">
        <parameters>
          <parameter name="AStrings" type="TStrings" />
          <parameter name="MimeSeparator" type="Char" paramflags="const">
            <value>
              $3D
            </value>
          </parameter>
        </parameters>
      </procedure>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="Autofill" type="Boolean">
            <value>
              True
            </value>
          </parameter>
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <event name="OnBuildCache" visibility="public" read="FOnBuildCache" write="FOnBuildCache" type="TNotifyEvent" />
    </members>
  </class>
  <class name="TIdReadMemoryStream">
    <ancestor name="TCustomMemoryStream" namespace="Classes">
      <methodref name="SetPointer" visibility="protected">
      </methodref>
      <methodref name="Read" visibility="public">
      </methodref>
      <methodref name="Seek" visibility="public">
      </methodref>
      <methodref name="SaveToStream" visibility="public">
      </methodref>
      <methodref name="SaveToFile" visibility="public">
      </methodref>
      <propertyref name="Memory" visibility="public">
      </propertyref>
      <ancestor name="TStream" namespace="Classes">
        <methodref name="GetPosition" visibility="private">
        </methodref>
        <methodref name="SetPosition" visibility="private">
        </methodref>
        <methodref name="SetSize64" visibility="private">
        </methodref>
        <methodref name="GetSize" visibility="public">
        </methodref>
        <methodref name="SetSize" visibility="public">
        </methodref>
        <methodref name="SetSize" visibility="public">
        </methodref>
        <methodref name="Read" visibility="public">
        </methodref>
        <methodref name="Write" visibility="public">
        </methodref>
        <methodref name="Seek" visibility="public">
        </methodref>
        <methodref name="Seek" visibility="public">
        </methodref>
        <methodref name="ReadBuffer" visibility="public">
        </methodref>
        <methodref name="WriteBuffer" visibility="public">
        </methodref>
        <methodref name="CopyFrom" visibility="public">
        </methodref>
        <methodref name="ReadComponent" visibility="public">
        </methodref>
        <methodref name="ReadComponentRes" visibility="public">
        </methodref>
        <methodref name="WriteComponent" visibility="public">
        </methodref>
        <methodref name="WriteComponentRes" visibility="public">
        </methodref>
        <methodref name="WriteDescendent" visibility="public">
        </methodref>
        <methodref name="WriteDescendentRes" visibility="public">
        </methodref>
        <methodref name="WriteResourceHeader" visibility="public">
        </methodref>
        <methodref name="FixupResourceHeader" visibility="public">
        </methodref>
        <methodref name="ReadResHeader" visibility="public">
        </methodref>
        <propertyref name="Position" visibility="public">
        </propertyref>
        <propertyref name="Size" visibility="public">
        </propertyref>
        <ancestor name="TObject" namespace="System">
          <methodref name="Create" visibility="public">
          </methodref>
          <methodref name="Free" visibility="public">
          </methodref>
          <methodref name="InitInstance" visibility="public">
          </methodref>
          <methodref name="CleanupInstance" visibility="public">
          </methodref>
          <methodref name="ClassType" visibility="public">
          </methodref>
          <methodref name="ClassName" visibility="public">
          </methodref>
          <methodref name="ClassNameIs" visibility="public">
          </methodref>
          <methodref name="ClassParent" visibility="public">
          </methodref>
          <methodref name="ClassInfo" visibility="public">
          </methodref>
          <methodref name="InstanceSize" visibility="public">
          </methodref>
          <methodref name="InheritsFrom" visibility="public">
          </methodref>
          <methodref name="MethodAddress" visibility="public">
          </methodref>
          <methodref name="MethodName" visibility="public">
          </methodref>
          <methodref name="FieldAddress" visibility="public">
          </methodref>
          <methodref name="GetInterface" visibility="public">
          </methodref>
          <methodref name="GetInterfaceEntry" visibility="public">
          </methodref>
          <methodref name="GetInterfaceTable" visibility="public">
          </methodref>
          <methodref name="SafeCallException" visibility="public">
          </methodref>
          <methodref name="AfterConstruction" visibility="public">
          </methodref>
          <methodref name="BeforeDestruction" visibility="public">
          </methodref>
          <methodref name="Dispatch" visibility="public">
          </methodref>
          <methodref name="DefaultHandler" visibility="public">
          </methodref>
          <methodref name="NewInstance" visibility="public">
          </methodref>
          <methodref name="FreeInstance" visibility="public">
          </methodref>
          <methodref name="Destroy" visibility="public">
          </methodref>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <procedure name="SetPointer" visibility="public">
        <parameters>
          <parameter name="Ptr" type="Pointer" />
          <parameter name="Size" type="Integer" />
        </parameters>
      </procedure>
      <function name="Write" visibility="public" procflags="override">
        <parameters>
          <parameter name="Buffer" paramflags="const" />
          <parameter name="Count" type="Integer" />
          <retval type="Integer" />
        </parameters>
      </function>
    </members>
  </class>
  <const name="csGB2312" type="TIdCharSet">
    <value>
      csGB2312
    </value>
  </const>
  <const name="csBig5" type="TIdCharSet">
    <value>
      csBig5
    </value>
  </const>
  <const name="csIso2022jp" type="TIdCharSet">
    <value>
      csIso2022jp
    </value>
  </const>
  <const name="csEucKR" type="TIdCharSet">
    <value>
      csEucKR
    </value>
  </const>
  <const name="csIso88591" type="TIdCharSet">
    <value>
      csIso88591
    </value>
  </const>
  <enum name="TIdCharSet">
    <element name="csGB2312" />
    <element name="csBig5" />
    <element name="csIso2022jp" />
    <element name="csEucKR" />
    <element name="csIso88591" />
  </enum>
  <const name="Win32s" type="TIdWin32Type">
    <value>
      Win32s
    </value>
  </const>
  <const name="WindowsNT40PreSP6Workstation" type="TIdWin32Type">
    <value>
      WindowsNT40PreSP6Workstation
    </value>
  </const>
  <const name="WindowsNT40PreSP6Server" type="TIdWin32Type">
    <value>
      WindowsNT40PreSP6Server
    </value>
  </const>
  <const name="WindowsNT40PreSP6AdvancedServer" type="TIdWin32Type">
    <value>
      WindowsNT40PreSP6AdvancedServer
    </value>
  </const>
  <const name="WindowsNT40Workstation" type="TIdWin32Type">
    <value>
      WindowsNT40Workstation
    </value>
  </const>
  <const name="WindowsNT40Server" type="TIdWin32Type">
    <value>
      WindowsNT40Server
    </value>
  </const>
  <const name="WindowsNT40AdvancedServer" type="TIdWin32Type">
    <value>
      WindowsNT40AdvancedServer
    </value>
  </const>
  <const name="Windows95" type="TIdWin32Type">
    <value>
      Windows95
    </value>
  </const>
  <const name="Windows95OSR2" type="TIdWin32Type">
    <value>
      Windows95OSR2
    </value>
  </const>
  <const name="Windows98" type="TIdWin32Type">
    <value>
      Windows98
    </value>
  </const>
  <const name="Windows98SE" type="TIdWin32Type">
    <value>
      Windows98SE
    </value>
  </const>
  <const name="Windows2000Pro" type="TIdWin32Type">
    <value>
      Windows2000Pro
    </value>
  </const>
  <const name="Windows2000Server" type="TIdWin32Type">
    <value>
      Windows2000Server
    </value>
  </const>
  <const name="Windows2000AdvancedServer" type="TIdWin32Type">
    <value>
      Windows2000AdvancedServer
    </value>
  </const>
  <const name="WindowsMe" type="TIdWin32Type">
    <value>
      WindowsMe
    </value>
  </const>
  <const name="WindowsXPPro" type="TIdWin32Type">
    <value>
      WindowsXPPro
    </value>
  </const>
  <const name="Windows2003Server" type="TIdWin32Type">
    <value>
      Windows2003Server
    </value>
  </const>
  <const name="Windows2003AdvancedServer" type="TIdWin32Type">
    <value>
      Windows2003AdvancedServer
    </value>
  </const>
  <enum name="TIdWin32Type">
    <element name="Win32s" />
    <element name="WindowsNT40PreSP6Workstation" />
    <element name="WindowsNT40PreSP6Server" />
    <element name="WindowsNT40PreSP6AdvancedServer" />
    <element name="WindowsNT40Workstation" />
    <element name="WindowsNT40Server" />
    <element name="WindowsNT40AdvancedServer" />
    <element name="Windows95" />
    <element name="Windows95OSR2" />
    <element name="Windows98" />
    <element name="Windows98SE" />
    <element name="Windows2000Pro" />
    <element name="Windows2000Server" />
    <element name="Windows2000AdvancedServer" />
    <element name="WindowsMe" />
    <element name="WindowsXPPro" />
    <element name="Windows2003Server" />
    <element name="Windows2003AdvancedServer" />
  </enum>
  <class name="EIdFailedToRetreiveTimeZoneInfo">
    <ancestor name="EIdException" namespace="IdException">
      <ancestor name="Exception" namespace="SysUtils">
        <methodref name="Create" visibility="public">
        </methodref>
        <methodref name="CreateFmt" visibility="public">
        </methodref>
        <methodref name="CreateRes" visibility="public">
        </methodref>
        <methodref name="CreateRes" visibility="public">
        </methodref>
        <methodref name="CreateResFmt" visibility="public">
        </methodref>
        <methodref name="CreateResFmt" visibility="public">
        </methodref>
        <methodref name="CreateHelp" visibility="public">
        </methodref>
        <methodref name="CreateFmtHelp" visibility="public">
        </methodref>
        <methodref name="CreateResHelp" visibility="public">
        </methodref>
        <methodref name="CreateResHelp" visibility="public">
        </methodref>
        <methodref name="CreateResFmtHelp" visibility="public">
        </methodref>
        <methodref name="CreateResFmtHelp" visibility="public">
        </methodref>
        <propertyref name="HelpContext" visibility="public">
        </propertyref>
        <propertyref name="Message" visibility="public">
        </propertyref>
        <ancestor name="TObject" namespace="System">
          <methodref name="Create" visibility="public">
          </methodref>
          <methodref name="Free" visibility="public">
          </methodref>
          <methodref name="InitInstance" visibility="public">
          </methodref>
          <methodref name="CleanupInstance" visibility="public">
          </methodref>
          <methodref name="ClassType" visibility="public">
          </methodref>
          <methodref name="ClassName" visibility="public">
          </methodref>
          <methodref name="ClassNameIs" visibility="public">
          </methodref>
          <methodref name="ClassParent" visibility="public">
          </methodref>
          <methodref name="ClassInfo" visibility="public">
          </methodref>
          <methodref name="InstanceSize" visibility="public">
          </methodref>
          <methodref name="InheritsFrom" visibility="public">
          </methodref>
          <methodref name="MethodAddress" visibility="public">
          </methodref>
          <methodref name="MethodName" visibility="public">
          </methodref>
          <methodref name="FieldAddress" visibility="public">
          </methodref>
          <methodref name="GetInterface" visibility="public">
          </methodref>
          <methodref name="GetInterfaceEntry" visibility="public">
          </methodref>
          <methodref name="GetInterfaceTable" visibility="public">
          </methodref>
          <methodref name="SafeCallException" visibility="public">
          </methodref>
          <methodref name="AfterConstruction" visibility="public">
          </methodref>
          <methodref name="BeforeDestruction" visibility="public">
          </methodref>
          <methodref name="Dispatch" visibility="public">
          </methodref>
          <methodref name="DefaultHandler" visibility="public">
          </methodref>
          <methodref name="NewInstance" visibility="public">
          </methodref>
          <methodref name="FreeInstance" visibility="public">
          </methodref>
          <methodref name="Destroy" visibility="public">
          </methodref>
        </ancestor>
      </ancestor>
    </ancestor>
  </class>
  <class name="EIdCorruptServicesFile">
    <ancestor name="EIdException" namespace="IdException">
      <ancestor name="Exception" namespace="SysUtils">
        <methodref name="Create" visibility="public">
        </methodref>
        <methodref name="CreateFmt" visibility="public">
        </methodref>
        <methodref name="CreateRes" visibility="public">
        </methodref>
        <methodref name="CreateRes" visibility="public">
        </methodref>
        <methodref name="CreateResFmt" visibility="public">
        </methodref>
        <methodref name="CreateResFmt" visibility="public">
        </methodref>
        <methodref name="CreateHelp" visibility="public">
        </methodref>
        <methodref name="CreateFmtHelp" visibility="public">
        </methodref>
        <methodref name="CreateResHelp" visibility="public">
        </methodref>
        <methodref name="CreateResHelp" visibility="public">
        </methodref>
        <methodref name="CreateResFmtHelp" visibility="public">
        </methodref>
        <methodref name="CreateResFmtHelp" visibility="public">
        </methodref>
        <propertyref name="HelpContext" visibility="public">
        </propertyref>
        <propertyref name="Message" visibility="public">
        </propertyref>
        <ancestor name="TObject" namespace="System">
          <methodref name="Create" visibility="public">
          </methodref>
          <methodref name="Free" visibility="public">
          </methodref>
          <methodref name="InitInstance" visibility="public">
          </methodref>
          <methodref name="CleanupInstance" visibility="public">
          </methodref>
          <methodref name="ClassType" visibility="public">
          </methodref>
          <methodref name="ClassName" visibility="public">
          </methodref>
          <methodref name="ClassNameIs" visibility="public">
          </methodref>
          <methodref name="ClassParent" visibility="public">
          </methodref>
          <methodref name="ClassInfo" visibility="public">
          </methodref>
          <methodref name="InstanceSize" visibility="public">
          </methodref>
          <methodref name="InheritsFrom" visibility="public">
          </methodref>
          <methodref name="MethodAddress" visibility="public">
          </methodref>
          <methodref name="MethodName" visibility="public">
          </methodref>
          <methodref name="FieldAddress" visibility="public">
          </methodref>
          <methodref name="GetInterface" visibility="public">
          </methodref>
          <methodref name="GetInterfaceEntry" visibility="public">
          </methodref>
          <methodref name="GetInterfaceTable" visibility="public">
          </methodref>
          <methodref name="SafeCallException" visibility="public">
          </methodref>
          <methodref name="AfterConstruction" visibility="public">
          </methodref>
          <methodref name="BeforeDestruction" visibility="public">
          </methodref>
          <methodref name="Dispatch" visibility="public">
          </methodref>
          <methodref name="DefaultHandler" visibility="public">
          </methodref>
          <methodref name="NewInstance" visibility="public">
          </methodref>
          <methodref name="FreeInstance" visibility="public">
          </methodref>
          <methodref name="Destroy" visibility="public">
          </methodref>
        </ancestor>
      </ancestor>
    </ancestor>
  </class>
  <class name="EIdExtensionAlreadyExists">
    <ancestor name="EIdException" namespace="IdException">
      <ancestor name="Exception" namespace="SysUtils">
        <methodref name="Create" visibility="public">
        </methodref>
        <methodref name="CreateFmt" visibility="public">
        </methodref>
        <methodref name="CreateRes" visibility="public">
        </methodref>
        <methodref name="CreateRes" visibility="public">
        </methodref>
        <methodref name="CreateResFmt" visibility="public">
        </methodref>
        <methodref name="CreateResFmt" visibility="public">
        </methodref>
        <methodref name="CreateHelp" visibility="public">
        </methodref>
        <methodref name="CreateFmtHelp" visibility="public">
        </methodref>
        <methodref name="CreateResHelp" visibility="public">
        </methodref>
        <methodref name="CreateResHelp" visibility="public">
        </methodref>
        <methodref name="CreateResFmtHelp" visibility="public">
        </methodref>
        <methodref name="CreateResFmtHelp" visibility="public">
        </methodref>
        <propertyref name="HelpContext" visibility="public">
        </propertyref>
        <propertyref name="Message" visibility="public">
        </propertyref>
        <ancestor name="TObject" namespace="System">
          <methodref name="Create" visibility="public">
          </methodref>
          <methodref name="Free" visibility="public">
          </methodref>
          <methodref name="InitInstance" visibility="public">
          </methodref>
          <methodref name="CleanupInstance" visibility="public">
          </methodref>
          <methodref name="ClassType" visibility="public">
          </methodref>
          <methodref name="ClassName" visibility="public">
          </methodref>
          <methodref name="ClassNameIs" visibility="public">
          </methodref>
          <methodref name="ClassParent" visibility="public">
          </methodref>
          <methodref name="ClassInfo" visibility="public">
          </methodref>
          <methodref name="InstanceSize" visibility="public">
          </methodref>
          <methodref name="InheritsFrom" visibility="public">
          </methodref>
          <methodref name="MethodAddress" visibility="public">
          </methodref>
          <methodref name="MethodName" visibility="public">
          </methodref>
          <methodref name="FieldAddress" visibility="public">
          </methodref>
          <methodref name="GetInterface" visibility="public">
          </methodref>
          <methodref name="GetInterfaceEntry" visibility="public">
          </methodref>
          <methodref name="GetInterfaceTable" visibility="public">
          </methodref>
          <methodref name="SafeCallException" visibility="public">
          </methodref>
          <methodref name="AfterConstruction" visibility="public">
          </methodref>
          <methodref name="BeforeDestruction" visibility="public">
          </methodref>
          <methodref name="Dispatch" visibility="public">
          </methodref>
          <methodref name="DefaultHandler" visibility="public">
          </methodref>
          <methodref name="NewInstance" visibility="public">
          </methodref>
          <methodref name="FreeInstance" visibility="public">
          </methodref>
          <methodref name="Destroy" visibility="public">
          </methodref>
        </ancestor>
      </ancestor>
    </ancestor>
  </class>
  <variable name="IndyPos" type="TPosProc" visibility="public" />
  <variable name="IndyFalseBoolStrs" type=".9" />
  <variable name="IndyTrueBoolStrs" type=".01" />
  <function name="Win32Type" visibility="public">
    <parameters>
      <retval type="TIdWin32Type" />
    </parameters>
  </function>
  <function name="GetIPHostByName" visibility="public">
    <parameters>
      <parameter name="AComputerName" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <procedure name="FillBytes" visibility="public">
    <parameters>
      <parameter name="VBytes" type="TBytes" paramflags="var" />
      <parameter name="ACount" type="Integer" paramflags="const" />
      <parameter name="AValue" type="Byte" paramflags="const" />
    </parameters>
  </procedure>
  <function name="CurrentThreadId" visibility="public">
    <parameters>
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="GetThreadHandle" visibility="public">
    <parameters>
      <parameter name="AThread" type="TThread" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="IncludeTrailingSlash" visibility="public">
    <parameters>
      <parameter name="APath" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="Max" visibility="public">
    <parameters>
      <parameter name="AValueOne" type="Integer" />
      <parameter name="AValueTwo" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="Max64" visibility="public">
    <parameters>
      <parameter name="AValueOne" type="Int64" paramflags="const" />
      <parameter name="AValueTwo" type="Int64" paramflags="const" />
      <retval type="Int64" />
    </parameters>
  </function>
  <function name="Min64" visibility="public">
    <parameters>
      <parameter name="AValueOne" type="Int64" paramflags="const" />
      <parameter name="AValueTwo" type="Int64" paramflags="const" />
      <retval type="Int64" />
    </parameters>
  </function>
  <function name="Min" visibility="public">
    <parameters>
      <parameter name="AValueOne" type="Integer" />
      <parameter name="AValueTwo" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <procedure name="MoveChars" visibility="public">
    <parameters>
      <parameter name="ASource" type="string" paramflags="const" />
      <parameter name="ASourceStart" type="Integer" />
      <parameter name="ADest" type="string" paramflags="var" />
      <parameter name="ADestStart" type="Integer" />
      <parameter name="ALen" type="Integer" />
    </parameters>
  </procedure>
  <function name="DateTimeGMTToHttpStr" visibility="public">
    <parameters>
      <parameter name="GMTValue" type="TDateTime" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="DateTimeToInternetStr" visibility="public">
    <parameters>
      <parameter name="Value" type="TDateTime" paramflags="const" />
      <parameter name="AIsGMT" type="Boolean" paramflags="const">
        <value>
          False
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="StrInternetToDateTime" visibility="public">
    <parameters>
      <parameter name="Value" type="string" />
      <retval type="TDateTime" />
    </parameters>
  </function>
  <function name="GetInternetFormattedFileTimeStamp" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetFileCreationTime" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="TDateTime" />
    </parameters>
  </function>
  <function name="BreakApart" visibility="public">
    <parameters>
      <parameter name="BaseString" type="string" />
      <parameter name="BreakString" type="string" />
      <parameter name="StringList" type="TStrings" />
      <retval type="TStrings" />
    </parameters>
  </function>
  <procedure name="CommaSeparatedToStringList" visibility="public">
    <parameters>
      <parameter name="AList" type="TStrings" />
      <parameter name="Value" type="string" paramflags="const" />
    </parameters>
  </procedure>
  <function name="CompareDateTime" visibility="public">
    <parameters>
      <parameter name="ADateTime1" type="TDateTime" paramflags="const" />
      <parameter name="ADateTime2" type="TDateTime" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CopyFileTo" visibility="public">
    <parameters>
      <parameter name="Source" type="string" paramflags="const" />
      <parameter name="Destination" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="MakeTempFilename" visibility="public">
    <parameters>
      <parameter name="APath" type="string" paramflags="const">
        <value>
          
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="RPos" visibility="public">
    <parameters>
      <parameter name="ASub" type="string" paramflags="const" />
      <parameter name="AIn" type="string" paramflags="const" />
      <parameter name="AStart" type="Integer">
        <value>
          $FFFFFFFF
        </value>
      </parameter>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetSystemLocale" visibility="public">
    <parameters>
      <retval type="TIdCharSet" />
    </parameters>
  </function>
  <function name="FileSizeByName" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="Int64" />
    </parameters>
  </function>
  <function name="RightStr" visibility="public">
    <parameters>
      <parameter name="AStr" type="string" paramflags="const" />
      <parameter name="Len" type="Integer" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="OffsetFromUTC" visibility="public">
    <parameters>
      <retval type="TDateTime" />
    </parameters>
  </function>
  <function name="StrToCard" visibility="public">
    <parameters>
      <parameter name="AStr" type="string" paramflags="const" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="TimeZoneBias" visibility="public">
    <parameters>
      <retval type="TDateTime" />
    </parameters>
  </function>
  <function name="GetTickCount" visibility="public">
    <parameters>
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="GetTickDiff" visibility="public">
    <parameters>
      <parameter name="AOldTickCount" type="Cardinal" paramflags="const" />
      <parameter name="ANewTickCount" type="Cardinal" paramflags="const" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="IndyStrToBool" visibility="public">
    <parameters>
      <parameter name="AString" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="SetLocalTime" visibility="public">
    <parameters>
      <parameter name="Value" type="TDateTime" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="ServicesFilePath" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="IdPorts" visibility="public">
    <parameters>
      <retval type="TList" />
    </parameters>
  </function>
  <function name="IdPorts2" visibility="public">
    <parameters>
      <retval type="TStringList" />
    </parameters>
  </function>
  <function name="FetchCaseInsensitive" visibility="public">
    <parameters>
      <parameter name="AInput" type="string" paramflags="var" />
      <parameter name="ADelim" type="string" paramflags="const">
        <value>
           
        </value>
      </parameter>
      <parameter name="ADelete" type="Boolean" paramflags="const">
        <value>
          True
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="Fetch" visibility="public">
    <parameters>
      <parameter name="AInput" type="string" paramflags="var" />
      <parameter name="ADelim" type="string" paramflags="const">
        <value>
           
        </value>
      </parameter>
      <parameter name="ADelete" type="Boolean" paramflags="const">
        <value>
          True
        </value>
      </parameter>
      <parameter name="ACaseSensitive" type="Boolean" paramflags="const">
        <value>
          True
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="PosInStrArray" visibility="public">
    <parameters>
      <parameter name="SearchStr" type="string" paramflags="const" />
      <parameter name="Contents">
        <array name="Contents">
          <element type="string" />
        </array>
      </parameter>
      <parameter name="CaseSensitive" type="Boolean" paramflags="const">
        <value>
          True
        </value>
      </parameter>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="IsCurrentThread" visibility="public">
    <parameters>
      <parameter name="AThread" type="TThread" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsNumeric" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AChar" type="Char" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsNumeric" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AString" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="StrToDay" visibility="public">
    <parameters>
      <parameter name="ADay" type="string" paramflags="const" />
      <retval type="Byte" />
    </parameters>
  </function>
  <function name="StrToMonth" visibility="public">
    <parameters>
      <parameter name="AMonth" type="string" paramflags="const" />
      <retval type="Byte" />
    </parameters>
  </function>
  <function name="UpCaseFirst" visibility="public">
    <parameters>
      <parameter name="AStr" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="StartsWith" visibility="public">
    <parameters>
      <parameter name="ANSIStr" type="string" paramflags="const" />
      <parameter name="APattern" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="DateTimeToGmtOffSetStr" visibility="public">
    <parameters>
      <parameter name="ADateTime" type="TDateTime" />
      <parameter name="SubGMT" type="Boolean" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetMIMETypeFromFile" visibility="public">
    <parameters>
      <parameter name="AFile" type="TFileName" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="GmtOffsetStrToDateTime" visibility="public">
    <parameters>
      <parameter name="S" type="string" />
      <retval type="TDateTime" />
    </parameters>
  </function>
  <function name="GMTToLocalDateTime" visibility="public">
    <parameters>
      <parameter name="S" type="string" />
      <retval type="TDateTime" />
    </parameters>
  </function>
  <procedure name="Sleep" visibility="public">
    <parameters>
      <parameter name="ATime" type="Cardinal" />
    </parameters>
  </procedure>
  <function name="IntToBin" visibility="public">
    <parameters>
      <parameter name="Value" type="Cardinal" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ByteToBin" visibility="public">
    <parameters>
      <parameter name="Int" type="Byte" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="BinToByte" visibility="public">
    <parameters>
      <parameter name="Binary" type="string" />
      <retval type="Byte" />
    </parameters>
  </function>
  <function name="CurrentProcessId" visibility="public">
    <parameters>
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="FTPMLSToGMTDateTime" visibility="public">
    <parameters>
      <parameter name="ATimeStamp" type="string" paramflags="const" />
      <retval type="TDateTime" />
    </parameters>
  </function>
  <function name="FTPMLSToLocalDateTime" visibility="public">
    <parameters>
      <parameter name="ATimeStamp" type="string" paramflags="const" />
      <retval type="TDateTime" />
    </parameters>
  </function>
  <function name="FTPGMTDateTimeToMLS" visibility="public">
    <parameters>
      <parameter name="ATimeStamp" type="TDateTime" paramflags="const" />
      <parameter name="AIncludeMSecs" type="Boolean" paramflags="const">
        <value>
          True
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="FTPLocalDateTimeToMLS" visibility="public">
    <parameters>
      <parameter name="ATimeStamp" type="TDateTime" paramflags="const" />
      <parameter name="AIncludeMSecs" type="Boolean" paramflags="const">
        <value>
          True
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetGMTDateByName" visibility="public">
    <parameters>
      <parameter name="AFileName" type="string" paramflags="const" />
      <retval type="TDateTime" />
    </parameters>
  </function>
  <function name="UnixDateTimeToDelphiDateTime" visibility="public">
    <parameters>
      <parameter name="UnixDateTime" type="Cardinal" />
      <retval type="TDateTime" />
    </parameters>
  </function>
  <function name="GetClockValue" visibility="public">
    <parameters>
      <retval type="Int64" />
    </parameters>
  </function>
  <function name="GetCurrentThreadHandle" visibility="public">
    <parameters>
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="ROL" visibility="public">
    <parameters>
      <parameter name="AVal" type="Cardinal" />
      <parameter name="AShift" type="Byte" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="ROR" visibility="public">
    <parameters>
      <parameter name="AVal" type="Cardinal" />
      <parameter name="AShift" type="Byte" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <procedure name="DebugOutput" visibility="public">
    <parameters>
      <parameter name="AText" type="string" paramflags="const" />
    </parameters>
  </procedure>
  <function name="InMainThread" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
  <procedure name="SetThreadPriority" visibility="public">
    <parameters>
      <parameter name="AThread" type="TThread" />
      <parameter name="APriority" type="TThreadPriority" paramflags="const" />
      <parameter name="APolicy" type="Integer" paramflags="const">
        <value>
          $80000001
        </value>
      </parameter>
    </parameters>
  </procedure>
  <function name="MemoryPos" visibility="public">
    <parameters>
      <parameter name="ASubStr" type="string" paramflags="const" />
      <parameter name="MemBuff" type="PAnsiChar" />
      <parameter name="MemorySize" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="IndyInterlockedIncrement" visibility="public">
    <parameters>
      <parameter name="I" type="Integer" paramflags="var" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="IndyInterlockedDecrement" visibility="public">
    <parameters>
      <parameter name="I" type="Integer" paramflags="var" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="IndyInterlockedExchange" visibility="public">
    <parameters>
      <parameter name="A" type="Integer" paramflags="var" />
      <parameter name="B" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="IndyInterlockedExchangeAdd" visibility="public">
    <parameters>
      <parameter name="A" type="Integer" paramflags="var" />
      <parameter name="B" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="IndyGetHostName" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="IsValidIP" visibility="public">
    <parameters>
      <parameter name="S" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsLeadChar" visibility="public">
    <parameters>
      <parameter name="ACh" type="Char" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsHostname" visibility="public">
    <parameters>
      <parameter name="S" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsTopDomain" visibility="public">
    <parameters>
      <parameter name="AStr" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsDomain" visibility="public">
    <parameters>
      <parameter name="S" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="DomainName" visibility="public">
    <parameters>
      <parameter name="AHost" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="IsFQDN" visibility="public">
    <parameters>
      <parameter name="S" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="ProcessPath" visibility="public">
    <parameters>
      <parameter name="ABasePath" type="string" paramflags="const" />
      <parameter name="APath" type="string" paramflags="const" />
      <parameter name="APathDelim" type="string" paramflags="const">
        <value>
          /
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="ProcessPath2" visibility="public">
    <parameters>
      <parameter name="ABasePath" type="string" paramflags="const" />
      <parameter name="APath" type="string" paramflags="const" />
      <parameter name="APathDelim" type="string" paramflags="const">
        <value>
          /
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="iif" visibility="public" procflags="overload">
    <parameters>
      <parameter name="ATest" type="Boolean" />
      <parameter name="ATrue" type="Integer" paramflags="const" />
      <parameter name="AFalse" type="Integer" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="iif" visibility="public" procflags="overload">
    <parameters>
      <parameter name="ATest" type="Boolean" />
      <parameter name="ATrue" type="string" paramflags="const" />
      <parameter name="AFalse" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="iif" visibility="public" procflags="overload">
    <parameters>
      <parameter name="ATest" type="Boolean" />
      <parameter name="ATrue" type="Boolean" paramflags="const" />
      <parameter name="AFalse" type="Boolean" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="AnsiPosIdx" visibility="public">
    <parameters>
      <parameter name="ASubStr" type="string" paramflags="const" />
      <parameter name="AStr" type="string" paramflags="const" />
      <parameter name="AStartPos" type="Cardinal">
        <value>
          $0
        </value>
      </parameter>
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="AnsiMemoryPos" visibility="public">
    <parameters>
      <parameter name="ASubStr" type="string" paramflags="const" />
      <parameter name="MemBuff" type="PAnsiChar" />
      <parameter name="MemorySize" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="PosIdx" visibility="public">
    <parameters>
      <parameter name="ASubStr" type="string" paramflags="const" />
      <parameter name="AStr" type="string" paramflags="const" />
      <parameter name="AStartPos" type="Cardinal">
        <value>
          $0
        </value>
      </parameter>
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="MakeMethod" visibility="public">
    <parameters>
      <parameter name="DataSelf" type="Pointer" />
      <parameter name="Code" type="Pointer" />
      <retval type="TMethod" />
    </parameters>
  </function>
  <function name="EnsureMsgIDBrackets" visibility="public">
    <parameters>
      <parameter name="AMsgID" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="IsHex" visibility="public">
    <parameters>
      <parameter name="AChar" type="Char" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsBinary" visibility="public">
    <parameters>
      <parameter name="AChar" type="Char" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <procedure name="IdDelete" visibility="public">
    <parameters>
      <parameter name="s" type="string" paramflags="var" />
      <parameter name="AOffset" type="Integer" />
      <parameter name="ACount" type="Integer" />
    </parameters>
  </procedure>
  <procedure name="IdInsert" visibility="public">
    <parameters>
      <parameter name="Source" type="string" paramflags="const" />
      <parameter name="S" type="string" paramflags="var" />
      <parameter name="Index" type="Integer" />
    </parameters>
  </procedure>
  <function name="BinStrToInt" visibility="public">
    <parameters>
      <parameter name="ABinary" type="string" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CharRange" visibility="public">
    <parameters>
      <parameter name="AMin" type="Char" paramflags="const" />
      <parameter name="AMax" type="Char" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="CharToHex" visibility="public">
    <parameters>
      <parameter name="APrefix" type="string" paramflags="const" />
      <parameter name="c" type="Char" paramflags="const" />
      <retval type="ShortString" />
    </parameters>
  </function>
  <procedure name="CopyTIdByteArray" visibility="public">
    <parameters>
      <parameter name="ASource" paramflags="const">
        <array name="ASource">
          <element type="Byte" />
        </array>
      </parameter>
      <parameter name="ASourceIndex" type="Integer" paramflags="const" />
      <parameter name="VDest" paramflags="var">
        <array name="VDest">
          <element type="Byte" />
        </array>
      </parameter>
      <parameter name="ADestIndex" type="Integer" paramflags="const" />
      <parameter name="ALength" type="Integer" paramflags="const" />
    </parameters>
  </procedure>
  <procedure name="CopyTIdBytes" visibility="public">
    <parameters>
      <parameter name="ASource" type="TBytes" paramflags="const" />
      <parameter name="ASourceIndex" type="Integer" paramflags="const" />
      <parameter name="VDest" type="TBytes" paramflags="var" />
      <parameter name="ADestIndex" type="Integer" paramflags="const" />
      <parameter name="ALength" type="Integer" paramflags="const" />
    </parameters>
  </procedure>
  <procedure name="CopyTIdWord" visibility="public">
    <parameters>
      <parameter name="ASource" type="Word" paramflags="const" />
      <parameter name="VDest" type="TBytes" paramflags="var" />
      <parameter name="ADestIndex" type="Integer" paramflags="const" />
    </parameters>
  </procedure>
  <procedure name="CopyTIdString" visibility="public">
    <parameters>
      <parameter name="ASource" type="string" paramflags="const" />
      <parameter name="VDest" type="TBytes" paramflags="var" />
      <parameter name="ADestIndex" type="Integer" paramflags="const" />
      <parameter name="ALength" type="Integer">
        <value>
          $FFFFFFFF
        </value>
      </parameter>
    </parameters>
  </procedure>
  <function name="BytesToWord" visibility="public">
    <parameters>
      <parameter name="AValue" type="TBytes" paramflags="const" />
      <parameter name="AIndex" type="Integer" paramflags="const">
        <value>
          $0
        </value>
      </parameter>
      <retval type="Word" />
    </parameters>
  </function>
  <function name="BytesToCardinal" visibility="public">
    <parameters>
      <parameter name="AValue" type="TBytes" paramflags="const" />
      <parameter name="AIndex" type="Integer" paramflags="const">
        <value>
          $0
        </value>
      </parameter>
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="GetMIMEDefaultFileExt" visibility="public">
    <parameters>
      <parameter name="MIMEType" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetUniqueFileName" visibility="public">
    <parameters>
      <parameter name="APath" type="string" paramflags="const" />
      <parameter name="APrefix" type="string" paramflags="const" />
      <parameter name="AExt" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="CharIsInSet" visibility="public">
    <parameters>
      <parameter name="AString" type="string" paramflags="const" />
      <parameter name="ACharPos" type="Integer" paramflags="const" />
      <parameter name="ASet" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CharIsInEOF" visibility="public">
    <parameters>
      <parameter name="AString" type="string" paramflags="const" />
      <parameter name="ACharPos" type="Integer" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <procedure name="CopyBytesToHostWord" visibility="public">
    <parameters>
      <parameter name="ASource" type="TBytes" paramflags="const" />
      <parameter name="ASourceIndex" type="Integer" paramflags="const" />
      <parameter name="VDest" type="Word" paramflags="var" />
    </parameters>
  </procedure>
  <procedure name="CopyBytesToHostCardinal" visibility="public">
    <parameters>
      <parameter name="ASource" type="TBytes" paramflags="const" />
      <parameter name="ASourceIndex" type="Integer" paramflags="const" />
      <parameter name="VDest" type="Cardinal" paramflags="var" />
    </parameters>
  </procedure>
  <procedure name="CopyTIdNetworkWord" visibility="public">
    <parameters>
      <parameter name="ASource" type="Word" paramflags="const" />
      <parameter name="VDest" type="TBytes" paramflags="var" />
      <parameter name="ADestIndex" type="Integer" paramflags="const" />
    </parameters>
  </procedure>
  <procedure name="CopyTIdNetworkCardinal" visibility="public">
    <parameters>
      <parameter name="ASource" type="Cardinal" paramflags="const" />
      <parameter name="VDest" type="TBytes" paramflags="var" />
      <parameter name="ADestIndex" type="Integer" paramflags="const" />
    </parameters>
  </procedure>
  <procedure name="CopyTIdLongWord" visibility="public">
    <parameters>
      <parameter name="ASource" type="Cardinal" paramflags="const" />
      <parameter name="VDest" type="TBytes" paramflags="var" />
      <parameter name="ADestIndex" type="Integer" paramflags="const" />
    </parameters>
  </procedure>
  <procedure name="CopyTIdInt64" visibility="public">
    <parameters>
      <parameter name="ASource" type="Int64" paramflags="const" />
      <parameter name="VDest" type="TBytes" paramflags="var" />
      <parameter name="ADestIndex" type="Integer" paramflags="const" />
    </parameters>
  </procedure>
  <procedure name="CopyTIdIPV6Address" visibility="public">
    <parameters>
      <parameter name="ASource" type="TIdIPv6Address" paramflags="const" />
      <parameter name="VDest" type="TBytes" paramflags="var" />
      <parameter name="ADestIndex" type="Integer" paramflags="const" />
    </parameters>
  </procedure>
  <procedure name="CopyTIdCardinal" visibility="public">
    <parameters>
      <parameter name="ASource" type="Cardinal" paramflags="const" />
      <parameter name="VDest" type="TBytes" paramflags="var" />
      <parameter name="ADestIndex" type="Integer" paramflags="const" />
    </parameters>
  </procedure>
  <procedure name="AppendBytes" visibility="public">
    <parameters>
      <parameter name="VBytes" type="TBytes" paramflags="var" />
      <parameter name="AAdd" type="TBytes" />
    </parameters>
  </procedure>
  <procedure name="AppendByte" visibility="public">
    <parameters>
      <parameter name="VBytes" type="TBytes" paramflags="var" />
      <parameter name="AByte" type="Byte" />
    </parameters>
  </procedure>
  <procedure name="AppendString" visibility="public">
    <parameters>
      <parameter name="VBytes" type="TBytes" paramflags="var" />
      <parameter name="AStr" type="string" paramflags="const" />
      <parameter name="ALength" type="Integer">
        <value>
          $FFFFFFFF
        </value>
      </parameter>
    </parameters>
  </procedure>
  <function name="TwoByteToWord" visibility="public">
    <parameters>
      <parameter name="AByte1" type="Byte" />
      <parameter name="AByte2" type="Byte" />
      <retval type="Word" />
    </parameters>
  </function>
  <function name="TwoCharToWord" visibility="public">
    <parameters>
      <parameter name="AChar1" type="Char" />
      <parameter name="AChar2" type="Char" />
      <retval type="Word" />
    </parameters>
  </function>
  <procedure name="WordToTwoBytes" visibility="public">
    <parameters>
      <parameter name="AWord" type="Word" />
      <parameter name="ByteArray" type="TBytes" />
      <parameter name="Index" type="Integer" />
    </parameters>
  </procedure>
  <function name="StartsWithACE" visibility="public">
    <parameters>
      <parameter name="ABytes" type="TBytes" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="TextIsSame" visibility="public">
    <parameters>
      <parameter name="A1" type="string" paramflags="const" />
      <parameter name="A2" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="TextStartsWith" visibility="public">
    <parameters>
      <parameter name="S" type="string" paramflags="const" />
      <parameter name="SubS" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IndyLowerCase" visibility="public">
    <parameters>
      <parameter name="A1" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="IndyUpperCase" visibility="public">
    <parameters>
      <parameter name="A1" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="IndyCompareStr" visibility="public">
    <parameters>
      <parameter name="A1" type="string" paramflags="const" />
      <parameter name="A2" type="string" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="Ticks" visibility="public">
    <parameters>
      <retval type="Cardinal" />
    </parameters>
  </function>
  <procedure name="ToDo" visibility="public">
  </procedure>
  <function name="StrToWord" visibility="public">
    <parameters>
      <parameter name="Value" type="string" paramflags="const" />
      <retval type="Word" />
    </parameters>
  </function>
  <function name="WordToStr" visibility="public">
    <parameters>
      <parameter name="Value" type="Word" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="IsASCII" visibility="public">
    <parameters>
      <parameter name="AByte" type="Byte" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsASCIILDH" visibility="public">
    <parameters>
      <parameter name="AByte" type="Byte" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="PosInSmallIntArray" visibility="public">
    <parameters>
      <parameter name="ASearchInt" type="Smallint" paramflags="const" />
      <parameter name="AArray">
        <array name="AArray">
          <element type="Smallint" />
        </array>
      </parameter>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="IPv6AddressToStr" visibility="public">
    <parameters>
      <parameter name="AValue" type="TIdIPv6Address" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="IPv4MakeCardInRange" visibility="public">
    <parameters>
      <parameter name="AInt" type="Int64" paramflags="const" />
      <parameter name="A256Power" type="Integer" paramflags="const" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="OctalToInt64" visibility="public">
    <parameters>
      <parameter name="AValue" type="string" paramflags="const" />
      <retval type="Int64" />
    </parameters>
  </function>
  <function name="IPv4ToDWord" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AIPAddress" type="string" paramflags="const" />
      <parameter name="VErr" type="Boolean" paramflags="var" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="IPv4ToDWord" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AIPAddress" type="string" paramflags="const" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="MakeDWordIntoIPv4Address" visibility="public">
    <parameters>
      <parameter name="ADWord" type="Cardinal" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="MakeCanonicalIPv4Address" visibility="public">
    <parameters>
      <parameter name="AAddr" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="IsHexidecimal" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AChar" type="Char" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsHexidecimalString" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AString" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsOctal" visibility="public">
    <parameters>
      <parameter name="AChar" type="Char" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsOctalString" visibility="public">
    <parameters>
      <parameter name="AString" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="OrdFourByteToCardinal" visibility="public">
    <parameters>
      <parameter name="AByte1" type="Byte" />
      <parameter name="AByte2" type="Byte" />
      <parameter name="AByte3" type="Byte" />
      <parameter name="AByte4" type="Byte" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="BytesToChar" visibility="public">
    <parameters>
      <parameter name="AValue" type="TBytes" paramflags="const" />
      <parameter name="AIndex" type="Integer" paramflags="const">
        <value>
          $0
        </value>
      </parameter>
      <retval type="Char" />
    </parameters>
  </function>
  <function name="BytesToInteger" visibility="public">
    <parameters>
      <parameter name="AValue" type="TBytes" paramflags="const" />
      <parameter name="AIndex" type="Integer" paramflags="const">
        <value>
          $0
        </value>
      </parameter>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="BytesToInt64" visibility="public">
    <parameters>
      <parameter name="AValue" type="TBytes" paramflags="const" />
      <parameter name="AIndex" type="Integer" paramflags="const">
        <value>
          $0
        </value>
      </parameter>
      <retval type="Int64" />
    </parameters>
  </function>
  <function name="BytesToShort" visibility="public">
    <parameters>
      <parameter name="AValue" type="TBytes" paramflags="const" />
      <parameter name="AIndex" type="Integer" paramflags="const">
        <value>
          $0
        </value>
      </parameter>
      <retval type="Smallint" />
    </parameters>
  </function>
  <function name="BytesToIPv6" visibility="public">
    <parameters>
      <parameter name="AValue" type="TBytes" paramflags="const" />
      <parameter name="AIndex" type="Integer" paramflags="const">
        <value>
          $0
        </value>
      </parameter>
      <retval type="TIdIPv6Address" />
    </parameters>
  </function>
  <function name="ByteToHex" visibility="public">
    <parameters>
      <parameter name="AByte" type="Byte" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ByteToOctal" visibility="public">
    <parameters>
      <parameter name="AByte" type="Byte" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="BytesToString" visibility="public" procflags="overload">
    <parameters>
      <parameter name="ABytes" type="TBytes" />
      <parameter name="AStartIndex" type="Integer">
        <value>
          $0
        </value>
      </parameter>
      <parameter name="AMaxCount" type="Integer">
        <value>
          $7FFFFFFF
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="ToBytes" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AValue" type="string" paramflags="const" />
      <parameter name="AEncoding" type="TIdEncoding" paramflags="const">
        <value>
          enANSI
        </value>
      </parameter>
      <retval type="TBytes" />
    </parameters>
  </function>
  <function name="ToBytes" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AValue" type="Char" paramflags="const" />
      <retval type="TBytes" />
    </parameters>
  </function>
  <function name="ToBytes" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AValue" type="Int64" paramflags="const" />
      <retval type="TBytes" />
    </parameters>
  </function>
  <function name="ToBytes" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AValue" type="Integer" paramflags="const" />
      <retval type="TBytes" />
    </parameters>
  </function>
  <function name="ToBytes" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AValue" type="Cardinal" paramflags="const" />
      <retval type="TBytes" />
    </parameters>
  </function>
  <function name="ToBytes" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AValue" type="Smallint" paramflags="const" />
      <retval type="TBytes" />
    </parameters>
  </function>
  <function name="ToBytes" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AValue" type="Word" paramflags="const" />
      <retval type="TBytes" />
    </parameters>
  </function>
  <function name="ToBytes" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AValue" type="Byte" paramflags="const" />
      <retval type="TBytes" />
    </parameters>
  </function>
  <function name="ToBytes" visibility="public" procflags="overload">
    <parameters>
      <parameter name="AValue" type="TBytes" paramflags="const" />
      <parameter name="ASize" type="Integer" paramflags="const" />
      <retval type="TBytes" />
    </parameters>
  </function>
  <function name="CardinalToFourChar" visibility="public">
    <parameters>
      <parameter name="ACardinal" type="Cardinal" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="RawToBytes" visibility="public">
    <parameters>
      <parameter name="AValue" paramflags="const" />
      <parameter name="ASize" type="Integer" paramflags="const" />
      <retval type="TBytes" />
    </parameters>
  </function>
  <function name="ABNFToText" visibility="public">
    <parameters>
      <parameter name="AText" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
</namespace>
