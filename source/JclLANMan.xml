<?xml version="1.0" encoding="utf-8"?>
<namespace name="JclLANMan">
  <const name="ufAccountDisable" type="TNetUserFlag">
    <value>
      ufAccountDisable
    </value>
  </const>
  <const name="ufHomedirRequired" type="TNetUserFlag">
    <value>
      ufHomedirRequired
    </value>
  </const>
  <const name="ufLockout" type="TNetUserFlag">
    <value>
      ufLockout
    </value>
  </const>
  <const name="ufPasswordNotRequired" type="TNetUserFlag">
    <value>
      ufPasswordNotRequired
    </value>
  </const>
  <const name="ufPasswordCantChange" type="TNetUserFlag">
    <value>
      ufPasswordCantChange
    </value>
  </const>
  <const name="ufDontExpirePassword" type="TNetUserFlag">
    <value>
      ufDontExpirePassword
    </value>
  </const>
  <const name="ufMNSLogonAccount" type="TNetUserFlag">
    <value>
      ufMNSLogonAccount
    </value>
  </const>
  <enum name="TNetUserFlag">
    <element name="ufAccountDisable" />
    <element name="ufHomedirRequired" />
    <element name="ufLockout" />
    <element name="ufPasswordNotRequired" />
    <element name="ufPasswordCantChange" />
    <element name="ufDontExpirePassword" />
    <element name="ufMNSLogonAccount" />
  </enum>
  <set name="TNetUserFlags" type="TNetUserFlag">
    <element name="ufAccountDisable" />
    <element name="ufHomedirRequired" />
    <element name="ufLockout" />
    <element name="ufPasswordNotRequired" />
    <element name="ufPasswordCantChange" />
    <element name="ufDontExpirePassword" />
    <element name="ufMNSLogonAccount" />
  </set>
  <const name="uifScript" type="TNetUserInfoFlag">
    <value>
      uifScript
    </value>
  </const>
  <const name="uifTempDuplicateAccount" type="TNetUserInfoFlag">
    <value>
      uifTempDuplicateAccount
    </value>
  </const>
  <const name="uifNormalAccount" type="TNetUserInfoFlag">
    <value>
      uifNormalAccount
    </value>
  </const>
  <const name="uifInterdomainTrustAccount" type="TNetUserInfoFlag">
    <value>
      uifInterdomainTrustAccount
    </value>
  </const>
  <const name="uifWorkstationTrustAccount" type="TNetUserInfoFlag">
    <value>
      uifWorkstationTrustAccount
    </value>
  </const>
  <const name="uifServerTrustAccount" type="TNetUserInfoFlag">
    <value>
      uifServerTrustAccount
    </value>
  </const>
  <enum name="TNetUserInfoFlag">
    <element name="uifScript" />
    <element name="uifTempDuplicateAccount" />
    <element name="uifNormalAccount" />
    <element name="uifInterdomainTrustAccount" />
    <element name="uifWorkstationTrustAccount" />
    <element name="uifServerTrustAccount" />
  </enum>
  <set name="TNetUserInfoFlags" type="TNetUserInfoFlag">
    <element name="uifScript" />
    <element name="uifTempDuplicateAccount" />
    <element name="uifNormalAccount" />
    <element name="uifInterdomainTrustAccount" />
    <element name="uifWorkstationTrustAccount" />
    <element name="uifServerTrustAccount" />
  </set>
  <const name="upUnknown" type="TNetUserPriv">
    <value>
      upUnknown
    </value>
  </const>
  <const name="upGuest" type="TNetUserPriv">
    <value>
      upGuest
    </value>
  </const>
  <const name="upUser" type="TNetUserPriv">
    <value>
      upUser
    </value>
  </const>
  <const name="upAdmin" type="TNetUserPriv">
    <value>
      upAdmin
    </value>
  </const>
  <enum name="TNetUserPriv">
    <element name="upUnknown" />
    <element name="upGuest" />
    <element name="upUser" />
    <element name="upAdmin" />
  </enum>
  <const name="afOpPrint" type="TNetUserAuthFlag">
    <value>
      afOpPrint
    </value>
  </const>
  <const name="afOpComm" type="TNetUserAuthFlag">
    <value>
      afOpComm
    </value>
  </const>
  <const name="afOpServer" type="TNetUserAuthFlag">
    <value>
      afOpServer
    </value>
  </const>
  <const name="afOpAccounts" type="TNetUserAuthFlag">
    <value>
      afOpAccounts
    </value>
  </const>
  <enum name="TNetUserAuthFlag">
    <element name="afOpPrint" />
    <element name="afOpComm" />
    <element name="afOpServer" />
    <element name="afOpAccounts" />
  </enum>
  <set name="TNetUserAuthFlags" type="TNetUserAuthFlag">
    <element name="afOpPrint" />
    <element name="afOpComm" />
    <element name="afOpServer" />
    <element name="afOpAccounts" />
  </set>
  <const name="wkrAdmins" type="TNetWellKnownRID">
    <value>
      wkrAdmins
    </value>
  </const>
  <const name="wkrUsers" type="TNetWellKnownRID">
    <value>
      wkrUsers
    </value>
  </const>
  <const name="wkrGuests" type="TNetWellKnownRID">
    <value>
      wkrGuests
    </value>
  </const>
  <const name="wkrPowerUsers" type="TNetWellKnownRID">
    <value>
      wkrPowerUsers
    </value>
  </const>
  <const name="wkrBackupOPs" type="TNetWellKnownRID">
    <value>
      wkrBackupOPs
    </value>
  </const>
  <const name="wkrReplicator" type="TNetWellKnownRID">
    <value>
      wkrReplicator
    </value>
  </const>
  <const name="wkrEveryone" type="TNetWellKnownRID">
    <value>
      wkrEveryone
    </value>
  </const>
  <enum name="TNetWellKnownRID">
    <element name="wkrAdmins" />
    <element name="wkrUsers" />
    <element name="wkrGuests" />
    <element name="wkrPowerUsers" />
    <element name="wkrBackupOPs" />
    <element name="wkrReplicator" />
    <element name="wkrEveryone" />
  </enum>
  <function name="CreateAccount" visibility="public">
    <parameters>
      <parameter name="Server" type="string" paramflags="const" />
      <parameter name="Username" type="string" paramflags="const" />
      <parameter name="Fullname" type="string" paramflags="const" />
      <parameter name="Password" type="string" paramflags="const" />
      <parameter name="Description" type="string" paramflags="const" />
      <parameter name="Homedir" type="string" paramflags="const" />
      <parameter name="Script" type="string" paramflags="const" />
      <parameter name="PasswordNeverExpires" type="Boolean" paramflags="const">
        <value>
          True
        </value>
      </parameter>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CreateLocalAccount" visibility="public">
    <parameters>
      <parameter name="Username" type="string" paramflags="const" />
      <parameter name="Fullname" type="string" paramflags="const" />
      <parameter name="Password" type="string" paramflags="const" />
      <parameter name="Description" type="string" paramflags="const" />
      <parameter name="Homedir" type="string" paramflags="const" />
      <parameter name="Script" type="string" paramflags="const" />
      <parameter name="PasswordNeverExpires" type="Boolean" paramflags="const">
        <value>
          True
        </value>
      </parameter>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="DeleteAccount" visibility="public">
    <parameters>
      <parameter name="Servername" type="string" paramflags="const" />
      <parameter name="Username" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="DeleteLocalAccount" visibility="public">
    <parameters>
      <parameter name="Username" type="string" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CreateGlobalGroup" visibility="public">
    <parameters>
      <parameter name="Server" type="string" paramflags="const" />
      <parameter name="Groupname" type="string" paramflags="const" />
      <parameter name="Description" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CreateLocalGroup" visibility="public">
    <parameters>
      <parameter name="Server" type="string" paramflags="const" />
      <parameter name="Groupname" type="string" paramflags="const" />
      <parameter name="Description" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="DeleteLocalGroup" visibility="public">
    <parameters>
      <parameter name="Server" type="string" paramflags="const" />
      <parameter name="Groupname" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetLocalGroups" visibility="public">
    <parameters>
      <parameter name="Server" type="string" paramflags="const" />
      <parameter name="Groups" type="TStrings" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetGlobalGroups" visibility="public">
    <parameters>
      <parameter name="Server" type="string" paramflags="const" />
      <parameter name="Groups" type="TStrings" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="LocalGroupExists" visibility="public">
    <parameters>
      <parameter name="Group" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GlobalGroupExists" visibility="public">
    <parameters>
      <parameter name="Server" type="string" paramflags="const" />
      <parameter name="Group" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="AddAccountToLocalGroup" visibility="public">
    <parameters>
      <parameter name="Accountname" type="string" paramflags="const" />
      <parameter name="Groupname" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="LookupGroupName" visibility="public">
    <parameters>
      <parameter name="Server" type="string" paramflags="const" />
      <parameter name="RID" type="TNetWellKnownRID" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <procedure name="ParseAccountName" visibility="public">
    <parameters>
      <parameter name="QualifiedName" type="string" paramflags="const" />
      <parameter name="Domain" type="string" paramflags="var" />
      <parameter name="UserName" type="string" paramflags="var" />
    </parameters>
  </procedure>
  <function name="IsLocalAccount" visibility="public">
    <parameters>
      <parameter name="AccountName" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
</namespace>
