<?xml version="1.0" encoding="utf-8"?>
<namespace name="cTimers">
  <class name="ETimers">
    <ancestor name="Exception" namespace="SysUtils">
      <methodref name="Create" visibility="public">
      </methodref>
      <methodref name="CreateFmt" visibility="public">
      </methodref>
      <methodref name="CreateRes" visibility="public">
      </methodref>
      <methodref name="CreateRes" visibility="public">
      </methodref>
      <methodref name="CreateResFmt" visibility="public">
      </methodref>
      <methodref name="CreateResFmt" visibility="public">
      </methodref>
      <methodref name="CreateHelp" visibility="public">
      </methodref>
      <methodref name="CreateFmtHelp" visibility="public">
      </methodref>
      <methodref name="CreateResHelp" visibility="public">
      </methodref>
      <methodref name="CreateResHelp" visibility="public">
      </methodref>
      <methodref name="CreateResFmtHelp" visibility="public">
      </methodref>
      <methodref name="CreateResFmtHelp" visibility="public">
      </methodref>
      <propertyref name="HelpContext" visibility="public">
      </propertyref>
      <propertyref name="Message" visibility="public">
      </propertyref>
      <ancestor name="TObject" namespace="System">
        <methodref name="Create" visibility="public">
        </methodref>
        <methodref name="Free" visibility="public">
        </methodref>
        <methodref name="InitInstance" visibility="public">
        </methodref>
        <methodref name="CleanupInstance" visibility="public">
        </methodref>
        <methodref name="ClassType" visibility="public">
        </methodref>
        <methodref name="ClassName" visibility="public">
        </methodref>
        <methodref name="ClassNameIs" visibility="public">
        </methodref>
        <methodref name="ClassParent" visibility="public">
        </methodref>
        <methodref name="ClassInfo" visibility="public">
        </methodref>
        <methodref name="InstanceSize" visibility="public">
        </methodref>
        <methodref name="InheritsFrom" visibility="public">
        </methodref>
        <methodref name="MethodAddress" visibility="public">
        </methodref>
        <methodref name="MethodName" visibility="public">
        </methodref>
        <methodref name="FieldAddress" visibility="public">
        </methodref>
        <methodref name="GetInterface" visibility="public">
        </methodref>
        <methodref name="GetInterfaceEntry" visibility="public">
        </methodref>
        <methodref name="GetInterfaceTable" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public">
        </methodref>
        <methodref name="AfterConstruction" visibility="public">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public">
        </methodref>
        <methodref name="Dispatch" visibility="public">
        </methodref>
        <methodref name="DefaultHandler" visibility="public">
        </methodref>
        <methodref name="NewInstance" visibility="public">
        </methodref>
        <methodref name="FreeInstance" visibility="public">
        </methodref>
        <methodref name="Destroy" visibility="public">
        </methodref>
      </ancestor>
    </ancestor>
  </class>
  <const name="TickFrequency" type="Integer">
    <value>
      $3E8
    </value>
  </const>
  <type name="THPTimer" type="Int64" />
  <function name="GetTick" visibility="public">
    <parameters>
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="TickDelta" visibility="public">
    <parameters>
      <parameter name="D1" type="Cardinal" paramflags="const" />
      <parameter name="D2" type="Cardinal" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="TickDeltaW" visibility="public">
    <parameters>
      <parameter name="D1" type="Cardinal" paramflags="const" />
      <parameter name="D2" type="Cardinal" paramflags="const" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="CPUClockFrequency" visibility="public">
    <parameters>
      <retval type="Int64" />
    </parameters>
  </function>
  <procedure name="StartTimer" visibility="public">
    <parameters>
      <parameter name="Timer" type="Int64" paramflags="var" />
    </parameters>
  </procedure>
  <procedure name="StopTimer" visibility="public">
    <parameters>
      <parameter name="Timer" type="Int64" paramflags="var" />
    </parameters>
  </procedure>
  <procedure name="ResumeTimer" visibility="public">
    <parameters>
      <parameter name="StoppedTimer" type="Int64" paramflags="var" />
    </parameters>
  </procedure>
  <procedure name="InitStoppedTimer" visibility="public">
    <parameters>
      <parameter name="Timer" type="Int64" paramflags="var" />
    </parameters>
  </procedure>
  <procedure name="InitElapsedTimer" visibility="public">
    <parameters>
      <parameter name="Timer" type="Int64" paramflags="var" />
      <parameter name="Milliseconds" type="Integer" paramflags="const" />
    </parameters>
  </procedure>
  <function name="MillisecondsElapsed" visibility="public">
    <parameters>
      <parameter name="Timer" type="Int64" paramflags="const" />
      <parameter name="TimerRunning" type="Boolean" paramflags="const">
        <value>
          True
        </value>
      </parameter>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="MicrosecondsElapsed" visibility="public">
    <parameters>
      <parameter name="Timer" type="Int64" paramflags="const" />
      <parameter name="TimerRunning" type="Boolean" paramflags="const">
        <value>
          True
        </value>
      </parameter>
      <retval type="Int64" />
    </parameters>
  </function>
  <procedure name="WaitMicroseconds" visibility="public">
    <parameters>
      <parameter name="MicroSeconds" type="Integer" paramflags="const" />
    </parameters>
  </procedure>
  <function name="GetHighPrecisionFrequency" visibility="public">
    <parameters>
      <retval type="Int64" />
    </parameters>
  </function>
  <function name="GetHighPrecisionTimerOverhead" visibility="public">
    <parameters>
      <retval type="Int64" />
    </parameters>
  </function>
  <procedure name="AdjustTimerForOverhead" visibility="public">
    <parameters>
      <parameter name="StoppedTimer" type="Int64" paramflags="var" />
      <parameter name="Overhead" type="Int64" paramflags="const">
        <value>
          $0
        </value>
      </parameter>
    </parameters>
  </procedure>
  <procedure name="SelfTest" visibility="public">
  </procedure>
</namespace>
