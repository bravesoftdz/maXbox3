<?xml version="1.0" encoding="utf-8"?>
<namespace name="niRegularExpression">
  <const name="psStates" type="TniRegularExpressionParserState">
    <value>
      psStates
    </value>
  </const>
  <const name="psCharRange" type="TniRegularExpressionParserState">
    <value>
      psCharRange
    </value>
  </const>
  <enum name="TniRegularExpressionParserState">
    <element name="psStates" />
    <element name="psCharRange" />
  </enum>
  <const name="pfEscaped" type="TniRegularExpressionParserFlag">
    <value>
      pfEscaped
    </value>
  </const>
  <enum name="TniRegularExpressionParserFlag">
    <element name="pfEscaped" />
  </enum>
  <set name="TniRegularExpressionParserFlags" type="TniRegularExpressionParserFlag">
    <element name="pfEscaped" />
  </set>
  <const name="stNormal" type="TniRegularExpressionStateType">
    <value>
      stNormal
    </value>
  </const>
  <const name="stGroupStart" type="TniRegularExpressionStateType">
    <value>
      stGroupStart
    </value>
  </const>
  <const name="stGroupFinish" type="TniRegularExpressionStateType">
    <value>
      stGroupFinish
    </value>
  </const>
  <enum name="TniRegularExpressionStateType">
    <element name="stNormal" />
    <element name="stGroupStart" />
    <element name="stGroupFinish" />
  </enum>
  <const name="mfStartOnly" type="TniRegularExpressionMatchFlag">
    <value>
      mfStartOnly
    </value>
  </const>
  <const name="mfFinishOnly" type="TniRegularExpressionMatchFlag">
    <value>
      mfFinishOnly
    </value>
  </const>
  <const name="mfCaseInsensitive" type="TniRegularExpressionMatchFlag">
    <value>
      mfCaseInsensitive
    </value>
  </const>
  <const name="mfLongMatches" type="TniRegularExpressionMatchFlag">
    <value>
      mfLongMatches
    </value>
  </const>
  <const name="mfShortMatches" type="TniRegularExpressionMatchFlag">
    <value>
      mfShortMatches
    </value>
  </const>
  <const name="mfMultipleMatches" type="TniRegularExpressionMatchFlag">
    <value>
      mfMultipleMatches
    </value>
  </const>
  <const name="mfOverlapMatches" type="TniRegularExpressionMatchFlag">
    <value>
      mfOverlapMatches
    </value>
  </const>
  <enum name="TniRegularExpressionMatchFlag">
    <element name="mfStartOnly" />
    <element name="mfFinishOnly" />
    <element name="mfCaseInsensitive" />
    <element name="mfLongMatches" />
    <element name="mfShortMatches" />
    <element name="mfMultipleMatches" />
    <element name="mfOverlapMatches" />
  </enum>
  <set name="TniRegularExpressionMatchFlags" type="TniRegularExpressionMatchFlag">
    <element name="mfStartOnly" />
    <element name="mfFinishOnly" />
    <element name="mfCaseInsensitive" />
    <element name="mfLongMatches" />
    <element name="mfShortMatches" />
    <element name="mfMultipleMatches" />
    <element name="mfOverlapMatches" />
  </set>
  <const name="mrNone" type="TniRegularExpressionMatchResult">
    <value>
      mrNone
    </value>
  </const>
  <const name="mrFail" type="TniRegularExpressionMatchResult">
    <value>
      mrFail
    </value>
  </const>
  <const name="mrMatch" type="TniRegularExpressionMatchResult">
    <value>
      mrMatch
    </value>
  </const>
  <const name="mrInsufficient" type="TniRegularExpressionMatchResult">
    <value>
      mrInsufficient
    </value>
  </const>
  <enum name="TniRegularExpressionMatchResult">
    <element name="mrNone" />
    <element name="mrFail" />
    <element name="mrMatch" />
    <element name="mrInsufficient" />
  </enum>
  <class name="EniRegularExpressionError">
    <ancestor name="Exception" namespace="SysUtils">
      <methodref name="Create" visibility="public">
      </methodref>
      <methodref name="CreateFmt" visibility="public">
      </methodref>
      <methodref name="CreateRes" visibility="public">
      </methodref>
      <methodref name="CreateRes" visibility="public">
      </methodref>
      <methodref name="CreateResFmt" visibility="public">
      </methodref>
      <methodref name="CreateResFmt" visibility="public">
      </methodref>
      <methodref name="CreateHelp" visibility="public">
      </methodref>
      <methodref name="CreateFmtHelp" visibility="public">
      </methodref>
      <methodref name="CreateResHelp" visibility="public">
      </methodref>
      <methodref name="CreateResHelp" visibility="public">
      </methodref>
      <methodref name="CreateResFmtHelp" visibility="public">
      </methodref>
      <methodref name="CreateResFmtHelp" visibility="public">
      </methodref>
      <propertyref name="HelpContext" visibility="public">
      </propertyref>
      <propertyref name="Message" visibility="public">
      </propertyref>
      <ancestor name="TObject" namespace="System">
        <methodref name="Create" visibility="public">
        </methodref>
        <methodref name="Free" visibility="public">
        </methodref>
        <methodref name="InitInstance" visibility="public">
        </methodref>
        <methodref name="CleanupInstance" visibility="public">
        </methodref>
        <methodref name="ClassType" visibility="public">
        </methodref>
        <methodref name="ClassName" visibility="public">
        </methodref>
        <methodref name="ClassNameIs" visibility="public">
        </methodref>
        <methodref name="ClassParent" visibility="public">
        </methodref>
        <methodref name="ClassInfo" visibility="public">
        </methodref>
        <methodref name="InstanceSize" visibility="public">
        </methodref>
        <methodref name="InheritsFrom" visibility="public">
        </methodref>
        <methodref name="MethodAddress" visibility="public">
        </methodref>
        <methodref name="MethodName" visibility="public">
        </methodref>
        <methodref name="FieldAddress" visibility="public">
        </methodref>
        <methodref name="GetInterface" visibility="public">
        </methodref>
        <methodref name="GetInterfaceEntry" visibility="public">
        </methodref>
        <methodref name="GetInterfaceTable" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public">
        </methodref>
        <methodref name="AfterConstruction" visibility="public">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public">
        </methodref>
        <methodref name="Dispatch" visibility="public">
        </methodref>
        <methodref name="DefaultHandler" visibility="public">
        </methodref>
        <methodref name="NewInstance" visibility="public">
        </methodref>
        <methodref name="FreeInstance" visibility="public">
        </methodref>
        <methodref name="Destroy" visibility="public">
        </methodref>
      </ancestor>
    </ancestor>
  </class>
  <class name="TniRegularExpression">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="InitInstance" visibility="public">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public">
      </methodref>
      <methodref name="ClassName" visibility="public">
      </methodref>
      <methodref name="ClassNameIs" visibility="public">
      </methodref>
      <methodref name="ClassParent" visibility="public">
      </methodref>
      <methodref name="ClassInfo" visibility="public">
      </methodref>
      <methodref name="InstanceSize" visibility="public">
      </methodref>
      <methodref name="InheritsFrom" visibility="public">
      </methodref>
      <methodref name="MethodAddress" visibility="public">
      </methodref>
      <methodref name="MethodName" visibility="public">
      </methodref>
      <methodref name="FieldAddress" visibility="public">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public">
      </methodref>
      <methodref name="SafeCallException" visibility="public">
      </methodref>
      <methodref name="AfterConstruction" visibility="public">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public">
      </methodref>
      <methodref name="Dispatch" visibility="public">
      </methodref>
      <methodref name="DefaultHandler" visibility="public">
      </methodref>
      <methodref name="NewInstance" visibility="public">
      </methodref>
      <methodref name="FreeInstance" visibility="public">
      </methodref>
      <methodref name="Destroy" visibility="public">
      </methodref>
    </ancestor>
    <members>
      <field name="FoStates" type="TObjectList" visibility="private" />
      <field name="FeState" type="TniRegularExpressionParserState" visibility="private" />
      <field name="FxFlags" type="TniRegularExpressionMatchFlags" visibility="private" />
      <field name="FoCurrentState" type="TniRegularExpressionState" visibility="private" />
      <field name="FxCharRange" type="TCharset" visibility="private" />
      <field name="FbInvertedSet" type="Boolean" visibility="private" />
      <field name="FsPartialChars" type="string" visibility="private" />
      <field name="FbIsRange" type="Boolean" visibility="private" />
      <field name="FaoStartStack" type=".3" visibility="private" />
      <field name="FaoFinishStack" type=".4" visibility="private" />
      <field name="FiStack" type="Integer" visibility="private" />
      <field name="FoMatches" type="TObjectList" visibility="private" />
      <field name="FoStartState" type="TniRegularExpressionState" visibility="private" />
      <field name="FsExpression" type="string" visibility="private" />
      <procedure name="ParseExpression" visibility="private">
        <parameters>
          <parameter name="sRule" type="string" />
        </parameters>
      </procedure>
      <function name="PreprocessedExpression" visibility="private">
        <parameters>
          <parameter name="sRule" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <procedure name="ParseForState" visibility="private">
        <parameters>
          <parameter name="cCharacter" type="Char" />
          <parameter name="xFlags" type="TniRegularExpressionParserFlags" />
        </parameters>
      </procedure>
      <procedure name="ParseForRange" visibility="private">
        <parameters>
          <parameter name="cCharacter" type="Char" />
          <parameter name="xFlags" type="TniRegularExpressionParserFlags" />
        </parameters>
      </procedure>
      <function name="AddTransition" visibility="private">
        <parameters>
          <parameter name="oNewState" type="TniRegularExpressionState" />
          <parameter name="xCharacters" type="TCharset" />
          <retval type="TniRegularExpressionState" />
        </parameters>
      </function>
      <procedure name="BeginGroup" visibility="private">
      </procedure>
      <procedure name="FinishGroup" visibility="private">
      </procedure>
      <procedure name="AddBranch" visibility="private">
      </procedure>
      <procedure name="AddRepetition" visibility="private">
      </procedure>
      <procedure name="AddOptional" visibility="private">
      </procedure>
      <procedure name="StartRange" visibility="private">
      </procedure>
      <procedure name="Optimize" visibility="private">
      </procedure>
      <procedure name="MakeCaseInsensitive" visibility="private">
      </procedure>
      <procedure name="Simplify" visibility="private">
      </procedure>
      <procedure name="MakeDeterministic" visibility="private">
      </procedure>
      <procedure name="PropagateAcceptedFlags" visibility="private">
      </procedure>
      <procedure name="RemoveRedundantStates" visibility="private">
        <parameters>
          <parameter name="oStart" type="TniRegularExpressionState" />
        </parameters>
      </procedure>
      <procedure name="CollapseIdenticalStates" visibility="private">
      </procedure>
      <procedure name="RemoveLambdaTransitions" visibility="private">
      </procedure>
      <procedure name="CalculateFirstSets" visibility="private">
      </procedure>
      <procedure name="AddMatch" visibility="private">
        <parameters>
          <parameter name="iStart" type="Integer" paramflags="const" />
          <parameter name="sText" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="ClearMatches" visibility="private">
      </procedure>
      <function name="GetStateCount" visibility="private">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="GetStateByIndex" visibility="private">
        <parameters>
          <parameter name="iIndex" type="Integer" />
          <retval type="TniRegularExpressionState" />
        </parameters>
      </function>
      <function name="GetMatchCount" visibility="private">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="GetMatchByIndex" visibility="private">
        <parameters>
          <parameter name="iIndex" type="Integer" />
          <retval type="TniRegularExpressionMatch" />
        </parameters>
      </function>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="sRule" type="string" paramflags="const" />
          <parameter name="xFlags" type="TniRegularExpressionMatchFlags" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <function name="CreateGlobber" visibility="public" procflags="class">
        <parameters>
          <parameter name="sFilespec" type="string" />
          <retval type="TniRegularExpression" />
        </parameters>
      </function>
      <function name="Match" visibility="public" procflags="overload">
        <parameters>
          <parameter name="sString" type="string" paramflags="const" />
          <retval type="TniRegularExpressionMatchResult" />
        </parameters>
      </function>
      <function name="Match" visibility="public" procflags="overload">
        <parameters>
          <parameter name="sString" type="string" paramflags="const" />
          <parameter name="iStart" type="Integer" />
          <retval type="TniRegularExpressionMatchResult" />
        </parameters>
      </function>
      <procedure name="DumpStateTable" visibility="public">
        <parameters>
          <parameter name="oStrings" type="TStrings" />
        </parameters>
      </procedure>
      <function name="NewState" visibility="public">
        <parameters>
          <parameter name="eType" type="TniRegularExpressionStateType" />
          <retval type="TniRegularExpressionState" />
        </parameters>
      </function>
      <function name="GetDFAState" visibility="public">
        <parameters>
          <parameter name="oStates" type="TList" />
          <retval type="TniRegularExpressionState" />
        </parameters>
      </function>
      <function name="CalculateDFAFingerprint" visibility="public">
        <parameters>
          <parameter name="oStates" type="TList" />
          <retval type="Integer" />
        </parameters>
      </function>
      <property name="Expression" visibility="public" read="FsExpression" type="string" />
      <property name="StateCount" visibility="public" read="GetStateCount" type="Integer" />
      <property name="States" visibility="public" read="GetStateByIndex" type="TniRegularExpressionState" />
      <property name="MatchCount" visibility="public" read="GetMatchCount" type="Integer" />
      <property name="Matches" visibility="public" read="GetMatchByIndex" type="TniRegularExpressionMatch" />
      <property name="StartState" visibility="public" read="FoStartState" type="TniRegularExpressionState" />
    </members>
  </class>
  <class name="TniRegularExpressionMatcher">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="InitInstance" visibility="public">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public">
      </methodref>
      <methodref name="ClassName" visibility="public">
      </methodref>
      <methodref name="ClassNameIs" visibility="public">
      </methodref>
      <methodref name="ClassParent" visibility="public">
      </methodref>
      <methodref name="ClassInfo" visibility="public">
      </methodref>
      <methodref name="InstanceSize" visibility="public">
      </methodref>
      <methodref name="InheritsFrom" visibility="public">
      </methodref>
      <methodref name="MethodAddress" visibility="public">
      </methodref>
      <methodref name="MethodName" visibility="public">
      </methodref>
      <methodref name="FieldAddress" visibility="public">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public">
      </methodref>
      <methodref name="SafeCallException" visibility="public">
      </methodref>
      <methodref name="AfterConstruction" visibility="public">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public">
      </methodref>
      <methodref name="Dispatch" visibility="public">
      </methodref>
      <methodref name="DefaultHandler" visibility="public">
      </methodref>
      <methodref name="NewInstance" visibility="public">
      </methodref>
      <methodref name="FreeInstance" visibility="public">
      </methodref>
      <methodref name="Destroy" visibility="public">
      </methodref>
    </ancestor>
    <members>
      <field name="FoExpression" type="TniRegularExpression" visibility="private" />
      <field name="FabFirstSet" visibility="private">
        <array name="FabFirstSet">
          <element type="Boolean" />
        </array>
      </field>
      <field name="FxCallback" type="TniRegularExpressionMatchFoundEvent" visibility="private" />
      <field name="FiMatchStart" type="Integer" visibility="private" />
      <field name="FiMatchLength" type="Integer" visibility="private" />
      <field name="FeStatus" type="TniRegularExpressionMatchResult" visibility="private" />
      <field name="FiStart" type="Integer" visibility="private" />
      <field name="FiFinish" type="Integer" visibility="private" />
      <field name="FxFlags" type="TniRegularExpressionMatchFlags" visibility="private" />
      <function name="MatchExpression" visibility="private">
        <parameters>
          <parameter name="sString" type="string" paramflags="const" />
          <parameter name="iStart" type="Integer" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <procedure name="MatchFound" visibility="private">
        <parameters>
          <parameter name="iStart" type="Integer" paramflags="const" />
          <parameter name="sText" type="string" paramflags="const" />
          <parameter name="bContinue" type="Boolean" paramflags="var" />
        </parameters>
      </procedure>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="oOwner" type="TniRegularExpression" />
          <parameter name="xFlags" type="TniRegularExpressionMatchFlags" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="FindMatches" visibility="public" procflags="overload">
        <parameters>
          <parameter name="sString" type="string" paramflags="const" />
          <parameter name="xNotify" type="TniRegularExpressionMatchFoundEvent" />
        </parameters>
      </procedure>
      <procedure name="FindMatches" visibility="public" procflags="overload">
        <parameters>
          <parameter name="sString" type="string" paramflags="const" />
          <parameter name="iStart" type="Integer" />
          <parameter name="xNotify" type="TniRegularExpressionMatchFoundEvent" />
        </parameters>
      </procedure>
      <property name="Status" visibility="public" read="FeStatus" type="TniRegularExpressionMatchResult" />
      <property name="Start" visibility="public" read="FiStart" type="Integer" />
      <property name="Finish" visibility="public" read="FiFinish" type="Integer" />
      <property name="Flags" visibility="public" read="FxFlags" write="FxFlags" type="TniRegularExpressionMatchFlags" />
    </members>
  </class>
  <class name="TniRegularExpressionMatch">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="InitInstance" visibility="public">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public">
      </methodref>
      <methodref name="ClassName" visibility="public">
      </methodref>
      <methodref name="ClassNameIs" visibility="public">
      </methodref>
      <methodref name="ClassParent" visibility="public">
      </methodref>
      <methodref name="ClassInfo" visibility="public">
      </methodref>
      <methodref name="InstanceSize" visibility="public">
      </methodref>
      <methodref name="InheritsFrom" visibility="public">
      </methodref>
      <methodref name="MethodAddress" visibility="public">
      </methodref>
      <methodref name="MethodName" visibility="public">
      </methodref>
      <methodref name="FieldAddress" visibility="public">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public">
      </methodref>
      <methodref name="SafeCallException" visibility="public">
      </methodref>
      <methodref name="AfterConstruction" visibility="public">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public">
      </methodref>
      <methodref name="Dispatch" visibility="public">
      </methodref>
      <methodref name="DefaultHandler" visibility="public">
      </methodref>
      <methodref name="NewInstance" visibility="public">
      </methodref>
      <methodref name="FreeInstance" visibility="public">
      </methodref>
      <methodref name="Destroy" visibility="public">
      </methodref>
    </ancestor>
    <members>
      <field name="FiStart" type="Integer" visibility="private" />
      <field name="FiLength" type="Integer" visibility="private" />
      <field name="FsText" type="string" visibility="private" />
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="iStart" type="Integer" />
          <parameter name="sText" type="string" />
        </parameters>
      </constructor>
      <property name="Start" visibility="public" read="FiStart" type="Integer" />
      <property name="Length" visibility="public" read="FiLength" type="Integer" />
      <property name="Text" visibility="public" read="FsText" type="string" />
    </members>
  </class>
  <class name="TniRegularExpressionState">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="InitInstance" visibility="public">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public">
      </methodref>
      <methodref name="ClassName" visibility="public">
      </methodref>
      <methodref name="ClassNameIs" visibility="public">
      </methodref>
      <methodref name="ClassParent" visibility="public">
      </methodref>
      <methodref name="ClassInfo" visibility="public">
      </methodref>
      <methodref name="InstanceSize" visibility="public">
      </methodref>
      <methodref name="InheritsFrom" visibility="public">
      </methodref>
      <methodref name="MethodAddress" visibility="public">
      </methodref>
      <methodref name="MethodName" visibility="public">
      </methodref>
      <methodref name="FieldAddress" visibility="public">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public">
      </methodref>
      <methodref name="SafeCallException" visibility="public">
      </methodref>
      <methodref name="AfterConstruction" visibility="public">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public">
      </methodref>
      <methodref name="Dispatch" visibility="public">
      </methodref>
      <methodref name="DefaultHandler" visibility="public">
      </methodref>
      <methodref name="NewInstance" visibility="public">
      </methodref>
      <methodref name="FreeInstance" visibility="public">
      </methodref>
      <methodref name="Destroy" visibility="public">
      </methodref>
    </ancestor>
    <members>
      <field name="FoTransitions" type="TObjectList" visibility="private" />
      <field name="FbFindingTransitions" type="Boolean" visibility="private" />
      <field name="FoPriorStates" type="TObjectList" visibility="private" />
      <field name="FabFirstSet" visibility="private">
        <array name="FabFirstSet">
          <element type="Boolean" />
        </array>
      </field>
      <field name="FaoSuccessor" visibility="private">
        <array name="FaoSuccessor">
          <element type="TniRegularExpressionState" />
        </array>
      </field>
      <field name="FoExpression" type="TObject" visibility="private" />
      <field name="FoStates" type="TObjectList" visibility="private" />
      <field name="FeStateType" type="TniRegularExpressionStateType" visibility="private" />
      <field name="FoGroupStart" type="TniRegularExpressionState" visibility="private" />
      <field name="FoGroupFinish" type="TniRegularExpressionState" visibility="private" />
      <field name="FiStateNumber" type="Integer" visibility="private" />
      <field name="FbAccept" type="Boolean" visibility="private" />
      <field name="FbModified" type="Boolean" visibility="private" />
      <field name="FbReachable" type="Boolean" visibility="private" />
      <field name="FbMarked" type="Boolean" visibility="private" />
      <field name="FiFingerPrint" type="Integer" visibility="private" />
      <procedure name="SetGroupStart" visibility="protected">
        <parameters>
          <parameter name="oGroupStart" type="TniRegularExpressionState" />
        </parameters>
      </procedure>
      <procedure name="SetGroupFinish" visibility="protected">
        <parameters>
          <parameter name="oGroupFinish" type="TniRegularExpressionState" />
        </parameters>
      </procedure>
      <function name="GetPriorState" visibility="protected">
        <parameters>
          <parameter name="iIndex" type="Integer" />
          <retval type="TniRegularExpressionState" />
        </parameters>
      </function>
      <function name="GetPriorStateCount" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="GetTransitionCount" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="GetTransitionByIndex" visibility="protected">
        <parameters>
          <parameter name="iIndex" type="Integer" />
          <retval type="TniRegularExpressionTransition" />
        </parameters>
      </function>
      <function name="GetStateCount" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="ConstructTransition" visibility="protected">
        <parameters>
          <parameter name="xSet" type="TCharset" />
        </parameters>
      </procedure>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="oExpression" type="TniRegularExpression" />
          <parameter name="eType" type="TniRegularExpressionStateType">
            <value>
              stNormal
            </value>
          </parameter>
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="AddTransitionTo" visibility="public">
        <parameters>
          <parameter name="oState" type="TniRegularExpressionState" />
          <parameter name="xCharacters" type="TCharset" />
        </parameters>
      </procedure>
      <procedure name="AddLambdaTransitionTo" visibility="public">
        <parameters>
          <parameter name="oState" type="TniRegularExpressionState" />
        </parameters>
      </procedure>
      <procedure name="RemoveTransitionTo" visibility="public" procflags="overload">
        <parameters>
          <parameter name="oState" type="TniRegularExpressionState" />
          <parameter name="xCharacters" type="TCharset" />
        </parameters>
      </procedure>
      <procedure name="RemoveTransitionTo" visibility="public" procflags="overload">
        <parameters>
          <parameter name="oState" type="TniRegularExpressionState" />
        </parameters>
      </procedure>
      <procedure name="GetTransitionsOn" visibility="public">
        <parameters>
          <parameter name="cChar" type="Char" />
          <parameter name="oStateList" type="TList" />
        </parameters>
      </procedure>
      <function name="GetOnlyTransitionOn" visibility="public">
        <parameters>
          <parameter name="cChar" type="Char" />
          <retval type="TniRegularExpressionState" />
        </parameters>
      </function>
      <function name="FindImmediateTransitionOn" visibility="public">
        <parameters>
          <parameter name="cChar" type="Char" />
          <retval type="TniRegularExpressionState" />
        </parameters>
      </function>
      <procedure name="MakeCaseInsensitive" visibility="public">
      </procedure>
      <procedure name="CheckIfAccept" visibility="public">
      </procedure>
      <procedure name="RemoveLambdaTransitions" visibility="public">
        <parameters>
          <parameter name="bChanged" type="Boolean" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="MakeDeterministic" visibility="public">
        <parameters>
          <parameter name="bChanged" type="Boolean" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="MarkReachable" visibility="public">
      </procedure>
      <function name="EqualState" visibility="public">
        <parameters>
          <parameter name="oState" type="TniRegularExpressionState" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="ContainsTransition" visibility="public">
        <parameters>
          <parameter name="oTransition" type="TniRegularExpressionTransition" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <procedure name="ChangeEntryTransitions" visibility="public">
        <parameters>
          <parameter name="oNewState" type="TniRegularExpressionState" />
        </parameters>
      </procedure>
      <procedure name="RedirectTransition" visibility="public">
        <parameters>
          <parameter name="oOldState" type="TniRegularExpressionState" />
          <parameter name="oNewState" type="TniRegularExpressionState" />
        </parameters>
      </procedure>
      <procedure name="CalculateFirstSet" visibility="public">
      </procedure>
      <function name="IsDFAState" visibility="public">
        <parameters>
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="GetSuccessor" visibility="public">
        <parameters>
          <parameter name="cChar" type="Char" />
          <retval type="TniRegularExpressionState" />
        </parameters>
      </function>
      <function name="CanStart" visibility="public">
        <parameters>
          <parameter name="cChar" type="Char" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="Name" visibility="public">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
      <procedure name="DumpDescription" visibility="public">
        <parameters>
          <parameter name="oStrings" type="TStrings" />
        </parameters>
      </procedure>
      <procedure name="AddState" visibility="public">
        <parameters>
          <parameter name="oState" type="TniRegularExpressionState" />
        </parameters>
      </procedure>
      <procedure name="Closure" visibility="public">
      </procedure>
      <function name="ContainsState" visibility="public">
        <parameters>
          <parameter name="oState" type="TniRegularExpressionState" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <property name="StateType" visibility="public" read="FeStateType" type="TniRegularExpressionStateType" />
      <property name="GroupStart" visibility="public" read="FoGroupStart" write="SetGroupStart" type="TniRegularExpressionState" />
      <property name="GroupFinish" visibility="public" read="FoGroupFinish" write="SetGroupFinish" type="TniRegularExpressionState" />
      <property name="StateNumber" visibility="public" read="FiStateNumber" type="Integer" />
      <property name="PriorStateCount" visibility="public" read="GetPriorStateCount" type="Integer" />
      <property name="PriorStates" visibility="public" read="GetPriorState" type="TniRegularExpressionState" />
      <property name="Accept" visibility="public" read="FbAccept" write="FbAccept" type="Boolean" />
      <property name="Modified" visibility="public" read="FbModified" write="FbModified" type="Boolean" />
      <property name="Reachable" visibility="public" read="FbReachable" write="FbReachable" type="Boolean" />
      <property name="TransitionCount" visibility="public" read="GetTransitionCount" type="Integer" />
      <property name="Transitions" visibility="public" read="GetTransitionByIndex" type="TniRegularExpressionTransition" />
      <property name="Marked" visibility="public" read="FbMarked" write="FbMarked" type="Boolean" />
      <property name="FingerPrint" visibility="public" read="FiFingerPrint" write="FiFingerPrint" type="Integer" />
      <property name="StateCount" visibility="public" read="GetStateCount" type="Integer" />
    </members>
  </class>
  <class name="TniRegularExpressionTransition">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="InitInstance" visibility="public">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public">
      </methodref>
      <methodref name="ClassName" visibility="public">
      </methodref>
      <methodref name="ClassNameIs" visibility="public">
      </methodref>
      <methodref name="ClassParent" visibility="public">
      </methodref>
      <methodref name="ClassInfo" visibility="public">
      </methodref>
      <methodref name="InstanceSize" visibility="public">
      </methodref>
      <methodref name="InheritsFrom" visibility="public">
      </methodref>
      <methodref name="MethodAddress" visibility="public">
      </methodref>
      <methodref name="MethodName" visibility="public">
      </methodref>
      <methodref name="FieldAddress" visibility="public">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public">
      </methodref>
      <methodref name="SafeCallException" visibility="public">
      </methodref>
      <methodref name="AfterConstruction" visibility="public">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public">
      </methodref>
      <methodref name="Dispatch" visibility="public">
      </methodref>
      <methodref name="DefaultHandler" visibility="public">
      </methodref>
      <methodref name="NewInstance" visibility="public">
      </methodref>
      <methodref name="FreeInstance" visibility="public">
      </methodref>
      <methodref name="Destroy" visibility="public">
      </methodref>
    </ancestor>
    <members>
      <field name="FoSource" type="TniRegularExpressionState" visibility="private" />
      <field name="FoDestination" type="TniRegularExpressionState" visibility="private" />
      <field name="FxCharSet" type="TCharset" visibility="private" />
      <field name="FbLambda" type="Boolean" visibility="private" />
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="oSource" type="TniRegularExpressionState" />
          <parameter name="oDestination" type="TniRegularExpressionState" />
          <parameter name="xCharacters" type="TCharset" />
          <parameter name="bLambda" type="Boolean" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="AddCharacters" visibility="public">
        <parameters>
          <parameter name="xCharacters" type="TCharset" />
        </parameters>
      </procedure>
      <function name="Description" visibility="public">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
      <property name="Source" visibility="public" read="FoSource" type="TniRegularExpressionState" />
      <property name="Destination" visibility="public" read="FoDestination" type="TniRegularExpressionState" />
      <property name="Characters" visibility="public" read="FxCharSet" write="FxCharSet" type="TCharset" />
      <property name="Lambda" visibility="public" read="FbLambda" write="FbLambda" type="Boolean" />
    </members>
  </class>
  <class name="TniTestRegularExpression">
    <ancestor name="TniTestCase" namespace="niTestCase">
      <methodref name="GetTestCaseCount" visibility="protected" />
      <methodref name="GetTestCaseByIndex" visibility="protected" />
      <methodref name="GetResultCount" visibility="protected" />
      <methodref name="GetResultByIndex" visibility="protected" />
      <methodref name="Setup" visibility="public" />
      <methodref name="RunTest" visibility="public" />
      <methodref name="Cleanup" visibility="public" />
      <methodref name="ConnectTestCase" visibility="protected" />
      <methodref name="DisconnectTestCase" visibility="protected" />
      <methodref name="Fail" visibility="protected" />
      <methodref name="Fail" visibility="protected" />
      <methodref name="Pass" visibility="protected" />
      <methodref name="Pass" visibility="protected" />
      <methodref name="Checkpoint" visibility="protected" />
      <methodref name="Checkpoint" visibility="protected" />
      <methodref name="CheckInvariants" visibility="protected" />
      <methodref name="TestSequence" visibility="protected" />
      <methodref name="VerifyInvariants" visibility="public" />
      <methodref name="Verify" visibility="protected" />
      <methodref name="VerifyEquals" visibility="protected" />
      <methodref name="VerifyEquals" visibility="protected" />
      <methodref name="VerifyEquals" visibility="protected" />
      <methodref name="VerifyNil" visibility="protected" />
      <methodref name="VerifyNil" visibility="protected" />
      <methodref name="VerifyAssigned" visibility="protected" />
      <methodref name="VerifyAssigned" visibility="protected" />
      <methodref name="VerifyException" visibility="protected" />
      <methodref name="VerifyObject" visibility="protected" />
      <methodref name="VerifyObject" visibility="protected" />
      <methodref name="Create" visibility="public" />
      <methodref name="Create" visibility="public" />
      <methodref name="Destroy" visibility="public" />
      <methodref name="Test" visibility="public" />
      <propertyref name="Name" visibility="public" />
      <propertyref name="TestCaseCount" visibility="public" />
      <propertyref name="TestCases" visibility="public" />
      <propertyref name="ResultCount" visibility="public" />
      <propertyref name="Results" visibility="public" />
      <propertyref name="PassCount" visibility="public" />
      <propertyref name="FailCount" visibility="public" />
      <propertyref name="Checkpoints" visibility="public" />
      <ancestor name="TObject" namespace="System">
        <methodref name="Create" visibility="public">
        </methodref>
        <methodref name="Free" visibility="public">
        </methodref>
        <methodref name="InitInstance" visibility="public">
        </methodref>
        <methodref name="CleanupInstance" visibility="public">
        </methodref>
        <methodref name="ClassType" visibility="public">
        </methodref>
        <methodref name="ClassName" visibility="public">
        </methodref>
        <methodref name="ClassNameIs" visibility="public">
        </methodref>
        <methodref name="ClassParent" visibility="public">
        </methodref>
        <methodref name="ClassInfo" visibility="public">
        </methodref>
        <methodref name="InstanceSize" visibility="public">
        </methodref>
        <methodref name="InheritsFrom" visibility="public">
        </methodref>
        <methodref name="MethodAddress" visibility="public">
        </methodref>
        <methodref name="MethodName" visibility="public">
        </methodref>
        <methodref name="FieldAddress" visibility="public">
        </methodref>
        <methodref name="GetInterface" visibility="public">
        </methodref>
        <methodref name="GetInterfaceEntry" visibility="public">
        </methodref>
        <methodref name="GetInterfaceTable" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public">
        </methodref>
        <methodref name="AfterConstruction" visibility="public">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public">
        </methodref>
        <methodref name="Dispatch" visibility="public">
        </methodref>
        <methodref name="DefaultHandler" visibility="public">
        </methodref>
        <methodref name="NewInstance" visibility="public">
        </methodref>
        <methodref name="FreeInstance" visibility="public">
        </methodref>
        <methodref name="Destroy" visibility="public">
        </methodref>
      </ancestor>
    </ancestor>
    <members>
      <field name="FsExpression" type="string" visibility="private" />
      <field name="FsOptions" type="string" visibility="private" />
      <procedure name="IsRegularExpression" visibility="private">
        <parameters>
          <parameter name="sParam" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="MatchesRegularExpression" visibility="private">
        <parameters>
          <parameter name="sParam" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="Setup" visibility="public" procflags="override">
      </procedure>
      <procedure name="RunTest" visibility="public" procflags="override">
      </procedure>
      <procedure name="Cleanup" visibility="public" procflags="override">
      </procedure>
    </members>
  </class>
</namespace>
