<?xml version="1.0" encoding="utf-8"?>
<namespace name="FileUtil">
  <const name="UTF8FileHeader" type="string">
    <value>
      ﻿
    </value>
  </const>
  <const name="FilenamesCaseSensitive" type="Boolean">
    <value>
      True
    </value>
  </const>
  <const name="FilenamesLiteral" type="Boolean">
    <value>
      True
    </value>
  </const>
  <const name="AllFilesMask" type="Char">
    <value>
      $2A
    </value>
  </const>
  <const name="PascalFileExt" visibility="public" />
  <const name="sffDontSearchInBasePath" type="TSearchFileInPathFlag">
    <value>
      sffDontSearchInBasePath
    </value>
  </const>
  <const name="sffSearchLoUpCase" type="TSearchFileInPathFlag">
    <value>
      sffSearchLoUpCase
    </value>
  </const>
  <enum name="TSearchFileInPathFlag">
    <element name="sffDontSearchInBasePath" />
    <element name="sffSearchLoUpCase" />
  </enum>
  <set name="TSearchFileInPathFlags" type="TSearchFileInPathFlag">
    <element name="sffDontSearchInBasePath" />
    <element name="sffSearchLoUpCase" />
  </set>
  <const name="AllDirectoryEntriesMask" type="Char">
    <value>
      $2A
    </value>
  </const>
  <class name="TFileIterator">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="InitInstance" visibility="public">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public">
      </methodref>
      <methodref name="ClassName" visibility="public">
      </methodref>
      <methodref name="ClassNameIs" visibility="public">
      </methodref>
      <methodref name="ClassParent" visibility="public">
      </methodref>
      <methodref name="ClassInfo" visibility="public">
      </methodref>
      <methodref name="InstanceSize" visibility="public">
      </methodref>
      <methodref name="InheritsFrom" visibility="public">
      </methodref>
      <methodref name="MethodAddress" visibility="public">
      </methodref>
      <methodref name="MethodName" visibility="public">
      </methodref>
      <methodref name="FieldAddress" visibility="public">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public">
      </methodref>
      <methodref name="SafeCallException" visibility="public">
      </methodref>
      <methodref name="AfterConstruction" visibility="public">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public">
      </methodref>
      <methodref name="Dispatch" visibility="public">
      </methodref>
      <methodref name="DefaultHandler" visibility="public">
      </methodref>
      <methodref name="NewInstance" visibility="public">
      </methodref>
      <methodref name="FreeInstance" visibility="public">
      </methodref>
      <methodref name="Destroy" visibility="public">
      </methodref>
    </ancestor>
    <members>
      <field name="FPath" type="string" visibility="private" />
      <field name="FLevel" type="Integer" visibility="private" />
      <field name="FFileInfo" type="TSearchRec" visibility="private" />
      <field name="FSearching" type="Boolean" visibility="private" />
      <function name="GetFileName" visibility="private">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
      <procedure name="Stop" visibility="public">
      </procedure>
      <function name="IsDirectory" visibility="public">
        <parameters>
          <retval type="Boolean" />
        </parameters>
      </function>
      <property name="FileName" visibility="public" read="GetFileName" type="string" />
      <property name="FileInfo" visibility="public" read="FFileInfo" type="TSearchRec" />
      <property name="Level" visibility="public" read="FLevel" type="Integer" />
      <property name="Path" visibility="public" read="FPath" type="string" />
      <property name="Searching" visibility="public" read="FSearching" type="Boolean" />
    </members>
  </class>
  <class name="TFileSearcher">
    <ancestor name="TFileIterator" namespace="FileUtil">
      <methodref name="GetFileName" visibility="private" />
      <methodref name="Stop" visibility="public" />
      <methodref name="IsDirectory" visibility="public" />
      <propertyref name="FileName" visibility="public" />
      <propertyref name="FileInfo" visibility="public" />
      <propertyref name="Level" visibility="public" />
      <propertyref name="Path" visibility="public" />
      <propertyref name="Searching" visibility="public" />
      <ancestor name="TObject" namespace="System">
        <methodref name="Create" visibility="public">
        </methodref>
        <methodref name="Free" visibility="public">
        </methodref>
        <methodref name="InitInstance" visibility="public">
        </methodref>
        <methodref name="CleanupInstance" visibility="public">
        </methodref>
        <methodref name="ClassType" visibility="public">
        </methodref>
        <methodref name="ClassName" visibility="public">
        </methodref>
        <methodref name="ClassNameIs" visibility="public">
        </methodref>
        <methodref name="ClassParent" visibility="public">
        </methodref>
        <methodref name="ClassInfo" visibility="public">
        </methodref>
        <methodref name="InstanceSize" visibility="public">
        </methodref>
        <methodref name="InheritsFrom" visibility="public">
        </methodref>
        <methodref name="MethodAddress" visibility="public">
        </methodref>
        <methodref name="MethodName" visibility="public">
        </methodref>
        <methodref name="FieldAddress" visibility="public">
        </methodref>
        <methodref name="GetInterface" visibility="public">
        </methodref>
        <methodref name="GetInterfaceEntry" visibility="public">
        </methodref>
        <methodref name="GetInterfaceTable" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public">
        </methodref>
        <methodref name="AfterConstruction" visibility="public">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public">
        </methodref>
        <methodref name="Dispatch" visibility="public">
        </methodref>
        <methodref name="DefaultHandler" visibility="public">
        </methodref>
        <methodref name="NewInstance" visibility="public">
        </methodref>
        <methodref name="FreeInstance" visibility="public">
        </methodref>
        <methodref name="Destroy" visibility="public">
        </methodref>
      </ancestor>
    </ancestor>
    <members>
      <field name="FMaskSeparator" type="Char" visibility="private" />
      <field name="FFollowSymLink" type="Boolean" visibility="private" />
      <field name="FOnFileFound" type="TFileFoundEvent" visibility="private" />
      <field name="FOnDirectoryFound" type="TDirectoryFoundEvent" visibility="private" />
      <field name="FOnDirectoryEnter" type="TDirectoryEnterEvent" visibility="private" />
      <field name="FFileAttribute" type="Word" visibility="private" />
      <field name="FDirectoryAttribute" type="Word" visibility="private" />
      <procedure name="RaiseSearchingError" visibility="private">
      </procedure>
      <procedure name="DoDirectoryEnter" visibility="public" procflags="virtual">
      </procedure>
      <procedure name="DoDirectoryFound" visibility="public" procflags="virtual">
      </procedure>
      <procedure name="DoFileFound" visibility="public" procflags="virtual">
      </procedure>
      <constructor name="Create" visibility="public">
        <parameters>
        </parameters>
      </constructor>
      <procedure name="Search" visibility="public">
        <parameters>
          <parameter name="ASearchPath" type="string" paramflags="const" />
          <parameter name="ASearchMask" type="string">
            <value>
              
            </value>
          </parameter>
          <parameter name="ASearchSubDirs" type="Boolean">
            <value>
              True
            </value>
          </parameter>
          <parameter name="CaseSensitive" type="Boolean">
            <value>
              False
            </value>
          </parameter>
        </parameters>
      </procedure>
      <property name="MaskSeparator" visibility="public" read="FMaskSeparator" write="FMaskSeparator" type="Char" />
      <property name="FollowSymLink" visibility="public" read="FFollowSymLink" write="FFollowSymLink" type="Boolean" />
      <property name="FileAttribute" visibility="public" read="FFileAttribute" write="FFileAttribute" type="Word" default="63" />
      <property name="DirectoryAttribute" visibility="public" read="FDirectoryAttribute" write="FDirectoryAttribute" type="Word" default="16" />
      <event name="OnDirectoryFound" visibility="public" read="FOnDirectoryFound" write="FOnDirectoryFound" type="TDirectoryFoundEvent" />
      <event name="OnFileFound" visibility="public" read="FOnFileFound" write="FOnFileFound" type="TFileFoundEvent" />
      <event name="OnDirectoryEnter" visibility="public" read="FOnDirectoryEnter" write="FOnDirectoryEnter" type="TDirectoryEnterEvent" />
    </members>
  </class>
  <class name="TListFileSearcher">
    <ancestor name="TFileSearcher" namespace="FileUtil">
      <methodref name="RaiseSearchingError" visibility="private" />
      <methodref name="DoDirectoryEnter" visibility="public" />
      <methodref name="DoDirectoryFound" visibility="public" />
      <methodref name="DoFileFound" visibility="public" />
      <methodref name="Create" visibility="public" />
      <methodref name="Search" visibility="public" />
      <propertyref name="MaskSeparator" visibility="public" />
      <propertyref name="FollowSymLink" visibility="public" />
      <propertyref name="FileAttribute" visibility="public" />
      <propertyref name="DirectoryAttribute" visibility="public" />
      <eventref name="OnDirectoryFound" visibility="public" />
      <eventref name="OnFileFound" visibility="public" />
      <eventref name="OnDirectoryEnter" visibility="public" />
      <ancestor name="TFileIterator" namespace="FileUtil">
        <methodref name="GetFileName" visibility="private" />
        <methodref name="Stop" visibility="public" />
        <methodref name="IsDirectory" visibility="public" />
        <propertyref name="FileName" visibility="public" />
        <propertyref name="FileInfo" visibility="public" />
        <propertyref name="Level" visibility="public" />
        <propertyref name="Path" visibility="public" />
        <propertyref name="Searching" visibility="public" />
        <ancestor name="TObject" namespace="System">
          <methodref name="Create" visibility="public">
          </methodref>
          <methodref name="Free" visibility="public">
          </methodref>
          <methodref name="InitInstance" visibility="public">
          </methodref>
          <methodref name="CleanupInstance" visibility="public">
          </methodref>
          <methodref name="ClassType" visibility="public">
          </methodref>
          <methodref name="ClassName" visibility="public">
          </methodref>
          <methodref name="ClassNameIs" visibility="public">
          </methodref>
          <methodref name="ClassParent" visibility="public">
          </methodref>
          <methodref name="ClassInfo" visibility="public">
          </methodref>
          <methodref name="InstanceSize" visibility="public">
          </methodref>
          <methodref name="InheritsFrom" visibility="public">
          </methodref>
          <methodref name="MethodAddress" visibility="public">
          </methodref>
          <methodref name="MethodName" visibility="public">
          </methodref>
          <methodref name="FieldAddress" visibility="public">
          </methodref>
          <methodref name="GetInterface" visibility="public">
          </methodref>
          <methodref name="GetInterfaceEntry" visibility="public">
          </methodref>
          <methodref name="GetInterfaceTable" visibility="public">
          </methodref>
          <methodref name="SafeCallException" visibility="public">
          </methodref>
          <methodref name="AfterConstruction" visibility="public">
          </methodref>
          <methodref name="BeforeDestruction" visibility="public">
          </methodref>
          <methodref name="Dispatch" visibility="public">
          </methodref>
          <methodref name="DefaultHandler" visibility="public">
          </methodref>
          <methodref name="NewInstance" visibility="public">
          </methodref>
          <methodref name="FreeInstance" visibility="public">
          </methodref>
          <methodref name="Destroy" visibility="public">
          </methodref>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FList" type="TStrings" visibility="private" />
      <procedure name="DoFileFound" visibility="public" procflags="override">
      </procedure>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="AList" type="TStrings" />
        </parameters>
      </constructor>
    </members>
  </class>
  <class name="TListDirectoriesSearcher">
    <ancestor name="TFileSearcher" namespace="FileUtil">
      <methodref name="RaiseSearchingError" visibility="private" />
      <methodref name="DoDirectoryEnter" visibility="public" />
      <methodref name="DoDirectoryFound" visibility="public" />
      <methodref name="DoFileFound" visibility="public" />
      <methodref name="Create" visibility="public" />
      <methodref name="Search" visibility="public" />
      <propertyref name="MaskSeparator" visibility="public" />
      <propertyref name="FollowSymLink" visibility="public" />
      <propertyref name="FileAttribute" visibility="public" />
      <propertyref name="DirectoryAttribute" visibility="public" />
      <eventref name="OnDirectoryFound" visibility="public" />
      <eventref name="OnFileFound" visibility="public" />
      <eventref name="OnDirectoryEnter" visibility="public" />
      <ancestor name="TFileIterator" namespace="FileUtil">
        <methodref name="GetFileName" visibility="private" />
        <methodref name="Stop" visibility="public" />
        <methodref name="IsDirectory" visibility="public" />
        <propertyref name="FileName" visibility="public" />
        <propertyref name="FileInfo" visibility="public" />
        <propertyref name="Level" visibility="public" />
        <propertyref name="Path" visibility="public" />
        <propertyref name="Searching" visibility="public" />
        <ancestor name="TObject" namespace="System">
          <methodref name="Create" visibility="public">
          </methodref>
          <methodref name="Free" visibility="public">
          </methodref>
          <methodref name="InitInstance" visibility="public">
          </methodref>
          <methodref name="CleanupInstance" visibility="public">
          </methodref>
          <methodref name="ClassType" visibility="public">
          </methodref>
          <methodref name="ClassName" visibility="public">
          </methodref>
          <methodref name="ClassNameIs" visibility="public">
          </methodref>
          <methodref name="ClassParent" visibility="public">
          </methodref>
          <methodref name="ClassInfo" visibility="public">
          </methodref>
          <methodref name="InstanceSize" visibility="public">
          </methodref>
          <methodref name="InheritsFrom" visibility="public">
          </methodref>
          <methodref name="MethodAddress" visibility="public">
          </methodref>
          <methodref name="MethodName" visibility="public">
          </methodref>
          <methodref name="FieldAddress" visibility="public">
          </methodref>
          <methodref name="GetInterface" visibility="public">
          </methodref>
          <methodref name="GetInterfaceEntry" visibility="public">
          </methodref>
          <methodref name="GetInterfaceTable" visibility="public">
          </methodref>
          <methodref name="SafeCallException" visibility="public">
          </methodref>
          <methodref name="AfterConstruction" visibility="public">
          </methodref>
          <methodref name="BeforeDestruction" visibility="public">
          </methodref>
          <methodref name="Dispatch" visibility="public">
          </methodref>
          <methodref name="DefaultHandler" visibility="public">
          </methodref>
          <methodref name="NewInstance" visibility="public">
          </methodref>
          <methodref name="FreeInstance" visibility="public">
          </methodref>
          <methodref name="Destroy" visibility="public">
          </methodref>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FDirectoriesList" type="TStrings" visibility="private" />
      <procedure name="DoDirectoryFound" visibility="public" procflags="override">
      </procedure>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="AList" type="TStrings" />
        </parameters>
      </constructor>
    </members>
  </class>
  <const name="cffOverwriteFile" type="TCopyFileFlag">
    <value>
      cffOverwriteFile
    </value>
  </const>
  <const name="cffCreateDestDirectory" type="TCopyFileFlag">
    <value>
      cffCreateDestDirectory
    </value>
  </const>
  <const name="cffPreserveTime" type="TCopyFileFlag">
    <value>
      cffPreserveTime
    </value>
  </const>
  <enum name="TCopyFileFlag">
    <element name="cffOverwriteFile" />
    <element name="cffCreateDestDirectory" />
    <element name="cffPreserveTime" />
  </enum>
  <set name="TCopyFileFlags" type="TCopyFileFlag">
    <element name="cffOverwriteFile" />
    <element name="cffCreateDestDirectory" />
    <element name="cffPreserveTime" />
  </set>
  <class name="TCopyDirTree">
    <ancestor name="TFileSearcher" namespace="FileUtil">
      <methodref name="RaiseSearchingError" visibility="private" />
      <methodref name="DoDirectoryEnter" visibility="public" />
      <methodref name="DoDirectoryFound" visibility="public" />
      <methodref name="DoFileFound" visibility="public" />
      <methodref name="Create" visibility="public" />
      <methodref name="Search" visibility="public" />
      <propertyref name="MaskSeparator" visibility="public" />
      <propertyref name="FollowSymLink" visibility="public" />
      <propertyref name="FileAttribute" visibility="public" />
      <propertyref name="DirectoryAttribute" visibility="public" />
      <eventref name="OnDirectoryFound" visibility="public" />
      <eventref name="OnFileFound" visibility="public" />
      <eventref name="OnDirectoryEnter" visibility="public" />
      <ancestor name="TFileIterator" namespace="FileUtil">
        <methodref name="GetFileName" visibility="private" />
        <methodref name="Stop" visibility="public" />
        <methodref name="IsDirectory" visibility="public" />
        <propertyref name="FileName" visibility="public" />
        <propertyref name="FileInfo" visibility="public" />
        <propertyref name="Level" visibility="public" />
        <propertyref name="Path" visibility="public" />
        <propertyref name="Searching" visibility="public" />
        <ancestor name="TObject" namespace="System">
          <methodref name="Create" visibility="public">
          </methodref>
          <methodref name="Free" visibility="public">
          </methodref>
          <methodref name="InitInstance" visibility="public">
          </methodref>
          <methodref name="CleanupInstance" visibility="public">
          </methodref>
          <methodref name="ClassType" visibility="public">
          </methodref>
          <methodref name="ClassName" visibility="public">
          </methodref>
          <methodref name="ClassNameIs" visibility="public">
          </methodref>
          <methodref name="ClassParent" visibility="public">
          </methodref>
          <methodref name="ClassInfo" visibility="public">
          </methodref>
          <methodref name="InstanceSize" visibility="public">
          </methodref>
          <methodref name="InheritsFrom" visibility="public">
          </methodref>
          <methodref name="MethodAddress" visibility="public">
          </methodref>
          <methodref name="MethodName" visibility="public">
          </methodref>
          <methodref name="FieldAddress" visibility="public">
          </methodref>
          <methodref name="GetInterface" visibility="public">
          </methodref>
          <methodref name="GetInterfaceEntry" visibility="public">
          </methodref>
          <methodref name="GetInterfaceTable" visibility="public">
          </methodref>
          <methodref name="SafeCallException" visibility="public">
          </methodref>
          <methodref name="AfterConstruction" visibility="public">
          </methodref>
          <methodref name="BeforeDestruction" visibility="public">
          </methodref>
          <methodref name="Dispatch" visibility="public">
          </methodref>
          <methodref name="DefaultHandler" visibility="public">
          </methodref>
          <methodref name="NewInstance" visibility="public">
          </methodref>
          <methodref name="FreeInstance" visibility="public">
          </methodref>
          <methodref name="Destroy" visibility="public">
          </methodref>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FSourceDir" type="string" visibility="public" />
      <field name="FTargetDir" type="string" visibility="public" />
      <field name="FFlags" type="TCopyFileFlags" visibility="public" />
      <field name="FCopyFailedCount" type="Integer" visibility="public" />
      <procedure name="DoFileFound" visibility="public" procflags="override">
      </procedure>
      <procedure name="DoDirectoryFound" visibility="public" procflags="override">
      </procedure>
    </members>
  </class>
  <function name="FileGetAttrUTF8" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="FileSetAttrUTF8" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="Attr" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="FileExistsUTF8" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="DirectoryExistsUTF8" visibility="public">
    <parameters>
      <parameter name="Directory" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FileAgeUTF8" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="FileSetDateUTF8" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <parameter name="Age" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="FileSize" visibility="public" procflags="overload">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="Int64" />
    </parameters>
  </function>
  <function name="GetFileDescription" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExpandFileNameUTF8" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExpandUNCFileNameUTF8" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="FileOpenUTF8" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <parameter name="Mode" type="Integer" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="FileCreateUTF8" visibility="public" procflags="overload">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="FileCreateUTF8" visibility="public" procflags="overload">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <parameter name="Rights" type="Cardinal" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="FindFirstUTF8" visibility="public">
    <parameters>
      <parameter name="Path" type="string" paramflags="const" />
      <parameter name="Attr" type="Integer" />
      <parameter name="Rslt" type="TSearchRec" paramflags="out" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="FindNextUTF8" visibility="public">
    <parameters>
      <parameter name="Rslt" type="TSearchRec" paramflags="var" />
      <retval type="Integer" />
    </parameters>
  </function>
  <procedure name="FindCloseUTF8" visibility="public">
    <parameters>
      <parameter name="F" type="TSearchRec" paramflags="var" />
    </parameters>
  </procedure>
  <function name="DeleteFileUTF8" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="RenameFileUTF8" visibility="public">
    <parameters>
      <parameter name="OldName" type="string" paramflags="const" />
      <parameter name="NewName" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetCurrentDirUTF8" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="SetCurrentDirUTF8" visibility="public">
    <parameters>
      <parameter name="NewDir" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CreateDirUTF8" visibility="public">
    <parameters>
      <parameter name="NewDir" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="RemoveDirUTF8" visibility="public">
    <parameters>
      <parameter name="Dir" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetAppConfigDirUTF8" visibility="public">
    <parameters>
      <parameter name="Global" type="Boolean" />
      <parameter name="Create" type="Boolean">
        <value>
          False
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetAppConfigFileUTF8" visibility="public">
    <parameters>
      <parameter name="Global" type="Boolean" />
      <parameter name="SubDir" type="Boolean">
        <value>
          False
        </value>
      </parameter>
      <parameter name="CreateDir" type="Boolean">
        <value>
          False
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="SysErrorMessageUTF8" visibility="public">
    <parameters>
      <parameter name="ErrorCode" type="Integer" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="DirPathExists" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CompareFilenames" visibility="public">
    <parameters>
      <parameter name="Filename1" type="string" paramflags="const" />
      <parameter name="Filename2" type="string" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CompareFilenamesIgnoreCase" visibility="public">
    <parameters>
      <parameter name="Filename1" type="string" paramflags="const" />
      <parameter name="Filename2" type="string" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CompareFilenames2" visibility="public">
    <parameters>
      <parameter name="Filename1" type="string" paramflags="const" />
      <parameter name="Filename2" type="string" paramflags="const" />
      <parameter name="ResolveLinks" type="Boolean" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CompareFilenamesP" visibility="public">
    <parameters>
      <parameter name="Filename1" type="PAnsiChar" />
      <parameter name="Len1" type="Integer" />
      <parameter name="Filename2" type="PAnsiChar" />
      <parameter name="Len2" type="Integer" />
      <parameter name="ResolveLinks" type="Boolean" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="FilenameIsAbsolute" visibility="public">
    <parameters>
      <parameter name="TheFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FilenameIsWinAbsolute" visibility="public">
    <parameters>
      <parameter name="TheFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FilenameIsUnixAbsolute" visibility="public">
    <parameters>
      <parameter name="TheFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FilenameIsPascalUnit" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="AppendPathDelim" visibility="public">
    <parameters>
      <parameter name="Path" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="TrimFilename" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExtractFileNameWithoutExt" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="CompareFileExt" visibility="public" procflags="overload">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="Ext" type="string" paramflags="const" />
      <parameter name="CaseSensitive" type="Boolean" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="ChompPathDelim" visibility="public">
    <parameters>
      <parameter name="Path" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="FileIsText" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FileIsText2" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <parameter name="FileReadable" type="Boolean" paramflags="out" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FileIsExecutable" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <procedure name="CheckIfFileIsExecutable" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
    </parameters>
  </procedure>
  <function name="FileIsSymlink" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <procedure name="CheckIfFileIsSymlink" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
    </parameters>
  </procedure>
  <function name="FileIsHardLink" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FileIsReadable" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FileIsWritable" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="TryReadAllLinks" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExtractFileNameOnly" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ForceDirectory" visibility="public">
    <parameters>
      <parameter name="DirectoryName" type="string" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="DeleteDirectory" visibility="public">
    <parameters>
      <parameter name="DirectoryName" type="string" paramflags="const" />
      <parameter name="OnlyChildren" type="Boolean" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="ProgramDirectory" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="DirectoryIsWritable" visibility="public">
    <parameters>
      <parameter name="DirectoryName" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CleanAndExpandFilename" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="CleanAndExpandDirectory" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="CreateAbsoluteSearchPath" visibility="public">
    <parameters>
      <parameter name="SearchPath" type="string" paramflags="const" />
      <parameter name="BaseDirectory" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="CreateRelativePath" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="BaseDirectory" type="string" paramflags="const" />
      <parameter name="UsePointDirectory" type="Boolean">
        <value>
          False
        </value>
      </parameter>
      <parameter name="AlwaysRequireSharedBaseFolder" type="Boolean">
        <value>
          True
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="CreateAbsolutePath" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="BaseDirectory" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="FileIsInPath" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="Path" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FileIsInDirectory" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="Directory" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CopyFile" visibility="public">
    <parameters>
      <parameter name="SrcFilename" type="string" paramflags="const" />
      <parameter name="DestFilename" type="string" paramflags="const" />
      <parameter name="Flags" type="TCopyFileFlags">
        <value>
          [cffOverwriteFile]
        </value>
      </parameter>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CopyFile2" visibility="public">
    <parameters>
      <parameter name="SrcFilename" type="string" paramflags="const" />
      <parameter name="DestFilename" type="string" paramflags="const" />
      <parameter name="PreserveTime" type="Boolean" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CopyDirTree" visibility="public">
    <parameters>
      <parameter name="SourceDir" type="string" paramflags="const" />
      <parameter name="TargetDir" type="string" paramflags="const" />
      <parameter name="Flags" type="TCopyFileFlags">
        <value>
          []
        </value>
      </parameter>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetTempFilename" visibility="public">
    <parameters>
      <parameter name="Directory" type="string" paramflags="const" />
      <parameter name="Prefix" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="SearchFileInPath" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="BasePath" type="string" paramflags="const" />
      <parameter name="SearchPath" type="string" paramflags="const" />
      <parameter name="Delimiter" type="string" paramflags="const" />
      <parameter name="Flags" type="TSearchFileInPathFlags" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="SearchAllFilesInPath" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="BasePath" type="string" paramflags="const" />
      <parameter name="SearchPath" type="string" paramflags="const" />
      <parameter name="Delimiter" type="string" paramflags="const" />
      <parameter name="Flags" type="TSearchFileInPathFlags" />
      <retval type="TStrings" />
    </parameters>
  </function>
  <function name="FindDiskFilename" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="FindDiskFileCaseInsensitive" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="FindDefaultExecutablePath" visibility="public">
    <parameters>
      <parameter name="Executable" type="string" paramflags="const" />
      <parameter name="BaseDir" type="string" paramflags="const">
        <value>
          
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="FindAllFiles" visibility="public">
    <parameters>
      <parameter name="SearchPath" type="string" paramflags="const" />
      <parameter name="SearchMask" type="string">
        <value>
          
        </value>
      </parameter>
      <parameter name="SearchSubDirs" type="Boolean">
        <value>
          True
        </value>
      </parameter>
      <retval type="TStringList" />
    </parameters>
  </function>
  <function name="FindAllDirectories" visibility="public">
    <parameters>
      <parameter name="SearchPath" type="string" paramflags="const" />
      <parameter name="SearchSubDirs" type="Boolean">
        <value>
          True
        </value>
      </parameter>
      <retval type="TStringList" />
    </parameters>
  </function>
  <function name="GetAllFilesMask" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetExeExt" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="ReadFileToString" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="FileSearchUTF8" visibility="public">
    <parameters>
      <parameter name="Name" type="string" paramflags="const" />
      <parameter name="DirList" type="string" paramflags="const" />
      <parameter name="ImplicitCurrentDir" type="Boolean">
        <value>
          True
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="ForceDirectoriesUTF8" visibility="public">
    <parameters>
      <parameter name="Dir" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FileIsReadOnlyUTF8" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
</namespace>
