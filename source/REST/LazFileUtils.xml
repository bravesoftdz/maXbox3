<?xml version="1.0" encoding="utf-8"?>
<namespace name="LazFileUtils">
  <const name="AllowDirectorySeparators" type="Set">
    <value>
      ['/','\']
    </value>
  </const>
  <const name="PathSeparator" type="Char">
    <value>
      $3A
    </value>
  </const>
  <const name="lrsModified" type="string" resourcestring="true">
    <value>
        modified 
    </value>
  </const>
  <const name="lrsInvalidCharSet" type="string" resourcestring="true">
    <value>
      The char set in mask &quot;%%s&quot; is not valid!
    </value>
  </const>
  <const name="lrsSize" type="string" resourcestring="true">
    <value>
        size 
    </value>
  </const>
  <const name="lrsFileDoesNotExist" type="string" resourcestring="true">
    <value>
      file &quot;%%s&quot; does not exist
    </value>
  </const>
  <const name="lrsFileIsADirectoryAndNotAnExecutable" type="string" resourcestring="true">
    <value>
      file &quot;%%s&quot; is a directory and not an executable
    </value>
  </const>
  <const name="lrsReadAccessDeniedFor" type="string" resourcestring="true">
    <value>
      read access denied for %%s
    </value>
  </const>
  <const name="lrsADirectoryComponentInDoesNotExistOrIsADanglingSyml2" type="string" resourcestring="true">
    <value>
      a directory component in %%s does not exist or is a dangling symlink
    </value>
  </const>
  <const name="lrsADirectoryComponentInIsNotADirectory2" type="string" resourcestring="true">
    <value>
      a directory component in %%s is not a directory
    </value>
  </const>
  <const name="lrsADirectoryComponentInDoesNotExistOrIsADanglingSyml" type="string" resourcestring="true">
    <value>
      a directory component in %%s does not exist or is a dangling symlink
    </value>
  </const>
  <const name="lrsADirectoryComponentInIsNotADirectory" type="string" resourcestring="true">
    <value>
      a directory component in %%s is not a directory
    </value>
  </const>
  <const name="lrsInsufficientMemory" type="string" resourcestring="true">
    <value>
      insufficient memory
    </value>
  </const>
  <const name="lrsHasACircularSymbolicLink" type="string" resourcestring="true">
    <value>
      %%s has a circular symbolic link
    </value>
  </const>
  <const name="lrsIsNotASymbolicLink" type="string" resourcestring="true">
    <value>
      %%s is not a symbolic link
    </value>
  </const>
  <const name="lrsIsNotExecutable" type="string" resourcestring="true">
    <value>
      %%s is not executable
    </value>
  </const>
  <const name="lrsUnableToCreateConfigDirectoryS" type="string" resourcestring="true">
    <value>
      Unable to create config directory &quot;%%s&quot;
    </value>
  </const>
  <const name="lrsProgramFileNotFound" type="string" resourcestring="true">
    <value>
      program file not found %%s
    </value>
  </const>
  <const name="lrsCanNotExecute" type="string" resourcestring="true">
    <value>
      can not execute %%s
    </value>
  </const>
  <const name="lrsNodeSet" type="string" resourcestring="true">
    <value>
      node set
    </value>
  </const>
  <const name="lrsBoolean" type="string" resourcestring="true">
    <value>
      boolean
    </value>
  </const>
  <const name="lrsNumber" type="string" resourcestring="true">
    <value>
      number
    </value>
  </const>
  <const name="lrsString" type="string" resourcestring="true">
    <value>
      string
    </value>
  </const>
  <const name="lrsVarNoConversion" type="string" resourcestring="true">
    <value>
      Conversion from %%s to %%s not possible
    </value>
  </const>
  <const name="lrsScannerUnclosedString" type="string" resourcestring="true">
    <value>
      String literal was not closed
    </value>
  </const>
  <const name="lrsScannerInvalidChar" type="string" resourcestring="true">
    <value>
      Invalid character
    </value>
  </const>
  <const name="lrsScannerMalformedQName" type="string" resourcestring="true">
    <value>
      Expected &quot;*&quot; or local part after colon
    </value>
  </const>
  <const name="lrsScannerExpectedVarName" type="string" resourcestring="true">
    <value>
      Expected variable name after &quot;$&quot;
    </value>
  </const>
  <const name="lrsParserExpectedLeftBracket" type="string" resourcestring="true">
    <value>
      Expected &quot;(&quot;
    </value>
  </const>
  <const name="lrsParserExpectedRightBracket" type="string" resourcestring="true">
    <value>
      Expected &quot;)&quot;
    </value>
  </const>
  <const name="lrsParserBadAxisName" type="string" resourcestring="true">
    <value>
      Invalid axis name
    </value>
  </const>
  <const name="lrsParserBadNodeType" type="string" resourcestring="true">
    <value>
      Invalid node type
    </value>
  </const>
  <const name="lrsParserExpectedRightSquareBracket" type="string" resourcestring="true">
    <value>
      Expected &quot;]&quot; after predicate
    </value>
  </const>
  <const name="lrsParserInvalidPrimExpr" type="string" resourcestring="true">
    <value>
      Invalid primary expression
    </value>
  </const>
  <const name="lrsParserGarbageAfterExpression" type="string" resourcestring="true">
    <value>
      Unrecognized input after expression
    </value>
  </const>
  <const name="lrsParserInvalidNodeTest" type="string" resourcestring="true">
    <value>
      Invalid node test (syntax error)
    </value>
  </const>
  <const name="lrsEvalUnknownFunction" type="string" resourcestring="true">
    <value>
      Unknown function: &quot;%%s&quot;
    </value>
  </const>
  <const name="lrsEvalUnknownVariable" type="string" resourcestring="true">
    <value>
      Unknown variable: &quot;%%s&quot;
    </value>
  </const>
  <const name="lrsEvalInvalidArgCount" type="string" resourcestring="true">
    <value>
      Invalid number of function arguments
    </value>
  </const>
  <variable name="OnInvalidateFileStateCache" type="TInvalidateFileStateCacheEvent" visibility="public" />
  <const name="fmDefault" type="TFmode">
    <value>
      fmDefault
    </value>
  </const>
  <const name="fmR" type="TFmode">
    <value>
      fmR
    </value>
  </const>
  <const name="fmRW" type="TFmode">
    <value>
      fmRW
    </value>
  </const>
  <enum name="TFmode">
    <element name="fmDefault" />
    <element name="fmR" />
    <element name="fmRW" />
  </enum>
  <type name="astr" type="AnsiString" />
  <function name="FindAllFiles" visibility="public">
    <parameters>
      <parameter name="SearchPath" type="string" paramflags="const" />
      <parameter name="SearchMask" type="string">
        <value>
          
        </value>
      </parameter>
      <parameter name="SearchSubDirs" type="Boolean">
        <value>
          True
        </value>
      </parameter>
      <retval type="TStringList" />
    </parameters>
  </function>
  <function name="FindAllDirectories" visibility="public">
    <parameters>
      <parameter name="SearchPath" type="string" paramflags="const" />
      <parameter name="SearchSubDirs" type="Boolean">
        <value>
          True
        </value>
      </parameter>
      <retval type="TStringList" />
    </parameters>
  </function>
  <function name="ReadFileToString" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="CopyDirTree" visibility="public">
    <parameters>
      <parameter name="SourceDir" type="string" paramflags="const" />
      <parameter name="TargetDir" type="string" paramflags="const" />
      <parameter name="Flags" type="TCopyFileFlags">
        <value>
          []
        </value>
      </parameter>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="ExtractRelativepath" visibility="public">
    <parameters>
      <parameter name="BaseName" type="string" paramflags="const" />
      <parameter name="DestNAme" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <procedure name="DoDirSeparators" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="var" />
    </parameters>
  </procedure>
  <function name="SetDirSeparators" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetDirs" visibility="public">
    <parameters>
      <parameter name="DirName" type="string" paramflags="var" />
      <parameter name="Dirs" paramflags="var">
        <array name="Dirs">
          <element type="PAnsiChar" />
        </array>
      </parameter>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="IncludeTrailingPathDelimiter" visibility="public">
    <parameters>
      <parameter name="Path" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="IncludeTrailingBackslash" visibility="public">
    <parameters>
      <parameter name="Path" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExcludeTrailingBackslash" visibility="public">
    <parameters>
      <parameter name="Path" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExcludeTrailingPathDelimiter" visibility="public">
    <parameters>
      <parameter name="Path" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="IsPathDelimiter" visibility="public">
    <parameters>
      <parameter name="Path" type="string" paramflags="const" />
      <parameter name="Index" type="Integer" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="ChangeFileExt" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <parameter name="Extension" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExtractFilePath" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExtractFileDir" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExtractFileDrive" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExtractFileName" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExtractFileExt" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExtractFilePart" visibility="public">
    <parameters>
      <parameter name="fpath" type="string" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExtractFname" visibility="public">
    <parameters>
      <parameter name="fpath" type="string" paramflags="const" />
      <parameter name="ext" type="Boolean" />
      <retval type="string" />
    </parameters>
  </function>
  <procedure name="RunTest1" visibility="public">
  </procedure>
  <function name="ResolveDots" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="FilenameIsWinAbsolute" visibility="public">
    <parameters>
      <parameter name="TheFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FilenameIsUnixAbsolute" visibility="public">
    <parameters>
      <parameter name="TheFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="TryCreateRelativePath" visibility="public">
    <parameters>
      <parameter name="Dest" type="string" paramflags="const" />
      <parameter name="Source" type="string" paramflags="const" />
      <parameter name="UsePointDirectory" type="Boolean" />
      <parameter name="AlwaysRequireSharedBaseFolder" type="Boolean" />
      <parameter name="RelPath" type="string" paramflags="out" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CreateRelativePath" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="BaseDirectory" type="string" paramflags="const" />
      <parameter name="UsePointDirectory" type="Boolean">
        <value>
          False
        </value>
      </parameter>
      <parameter name="AlwaysRequireSharedBaseFolder" type="Boolean">
        <value>
          True
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <procedure name="FindCloseUTF8" visibility="public">
    <parameters>
      <parameter name="F" type="TSearchRec" paramflags="var" />
    </parameters>
  </procedure>
  <function name="MakeDir" visibility="public">
    <devnotes>
      ////////////////////////inc end
    </devnotes>
    <parameters>
      <parameter name="s" type="string" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <procedure name="Xpath" visibility="public">
    <parameters>
      <parameter name="path" type="string" paramflags="var" />
    </parameters>
  </procedure>
  <function name="NewFile" visibility="public">
    <parameters>
      <parameter name="fname" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FileError" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="FileThere" visibility="public">
    <parameters>
      <parameter name="fname" type="string" paramflags="const" />
      <parameter name="fm" type="TFmode" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CompareFilenames" visibility="public">
    <parameters>
      <parameter name="Filename1" type="string" paramflags="const" />
      <parameter name="Filename2" type="string" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CompareFilenamesIgnoreCase" visibility="public">
    <parameters>
      <parameter name="Filename1" type="string" paramflags="const" />
      <parameter name="Filename2" type="string" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CompareFileExt" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="Ext" type="string" paramflags="const" />
      <parameter name="CaseSensitive" type="Boolean" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="ExtractFileNameOnly" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="CompareFilenameStarts" visibility="public">
    <parameters>
      <parameter name="Filename1" type="string" paramflags="const" />
      <parameter name="Filename2" type="string" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CompareFilenames2" visibility="public">
    <parameters>
      <parameter name="Filename1" type="PAnsiChar" />
      <parameter name="Len1" type="Integer" />
      <parameter name="Filename2" type="PAnsiChar" />
      <parameter name="Len2" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="CompareFilenamesP" visibility="public">
    <parameters>
      <parameter name="Filename1" type="PAnsiChar" />
      <parameter name="Filename2" type="PAnsiChar" />
      <parameter name="IgnoreCase" type="Boolean">
        <value>
          False
        </value>
      </parameter>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="DirPathExists" visibility="public">
    <parameters>
      <parameter name="DirectoryName" type="string" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="DirectoryIsWritable" visibility="public">
    <parameters>
      <parameter name="DirectoryName" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="ForceDirectory" visibility="public">
    <parameters>
      <parameter name="DirectoryName" type="string" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FileIsText" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FileIsText2" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <parameter name="FileReadable" type="Boolean" paramflags="out" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FilenameIsTrimmed" visibility="public">
    <parameters>
      <parameter name="TheFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="FilenameIsTrimmed2" visibility="public">
    <parameters>
      <parameter name="StartPos" type="PAnsiChar" />
      <parameter name="NameLen" type="Integer" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="TrimFilename" visibility="public">
    <parameters>
      <parameter name="AFilename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <procedure name="ForcePathDelims" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="var" />
    </parameters>
  </procedure>
  <function name="GetForcedPathDelims" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="CleanAndExpandFilename" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="CleanAndExpandDirectory" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="TrimAndExpandFilename" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="BaseDir" type="string" paramflags="const">
        <value>
          
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="TrimAndExpandDirectory" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="BaseDir" type="string" paramflags="const">
        <value>
          
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="FileIsInPath" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const" />
      <parameter name="Path" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="AppendPathDelim" visibility="public">
    <parameters>
      <parameter name="Path" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ChompPathDelim" visibility="public">
    <parameters>
      <parameter name="Path" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="FilenameIsAbsolute" visibility="public">
    <parameters>
      <parameter name="TheFilename" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CreateAbsoluteSearchPath" visibility="public">
    <parameters>
      <parameter name="SearchPath" type="string" paramflags="const" />
      <parameter name="BaseDirectory" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="CreateRelativeSearchPath" visibility="public">
    <parameters>
      <parameter name="SearchPath" type="string" paramflags="const" />
      <parameter name="BaseDirectory" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="MinimizeSearchPath" visibility="public">
    <parameters>
      <parameter name="SearchPath" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="FindPathInSearchPath" visibility="public">
    <parameters>
      <parameter name="APath" type="PAnsiChar" />
      <parameter name="APathLen" type="Integer" />
      <parameter name="SearchPath" type="PAnsiChar" />
      <parameter name="SearchPathLen" type="Integer" />
      <retval type="PAnsiChar" />
    </parameters>
  </function>
  <function name="GetAppConfigDirUTF8" visibility="public">
    <parameters>
      <parameter name="Global" type="Boolean" />
      <parameter name="Create" type="Boolean">
        <value>
          False
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetAppConfigFileUTF8" visibility="public">
    <parameters>
      <parameter name="Global" type="Boolean" />
      <parameter name="SubDir" type="Boolean">
        <value>
          False
        </value>
      </parameter>
      <parameter name="CreateDir" type="Boolean">
        <value>
          False
        </value>
      </parameter>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetTempFileNameUTF8" visibility="public">
    <parameters>
      <parameter name="Dir" type="string" paramflags="const" />
      <parameter name="Prefix" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <procedure name="InvalidateFileStateCache" visibility="public">
    <parameters>
      <parameter name="Filename" type="string" paramflags="const">
        <value>
          
        </value>
      </parameter>
    </parameters>
  </procedure>
  <procedure name="SplitCmdLineParams" visibility="public">
    <parameters>
      <parameter name="Params" type="string" paramflags="const" />
      <parameter name="ParamList" type="TStrings" />
      <parameter name="ReadBackslash" type="Boolean">
        <value>
          False
        </value>
      </parameter>
    </parameters>
  </procedure>
  <function name="StrToCmdLineParam" visibility="public">
    <parameters>
      <parameter name="Param" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="MergeCmdLineParams" visibility="public">
    <parameters>
      <parameter name="ParamList" type="TStrings" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="ExtractFileRoot" visibility="public">
    <parameters>
      <parameter name="FileName" type="string" />
      <retval type="string" />
    </parameters>
  </function>
</namespace>
