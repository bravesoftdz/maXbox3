unit uPSI_ovcBidi;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_ovcBidi = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_ovcBidi(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_ovcBidi_Routines(S: TPSExec);

procedure Register;

implementation


uses
   Windows
  ,Controls
  ,ovcBidi
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_ovcBidi]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_ovcBidi(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('WS_EX_RIGHT','LongWord').SetUInt( $00001000);
 CL.AddConstantN('WS_EX_LEFT','LongWord').SetUInt( $00000000);
 CL.AddConstantN('WS_EX_RTLREADING','LongWord').SetUInt( $00002000);
 CL.AddConstantN('WS_EX_LTRREADING','LongWord').SetUInt( $00000000);
 CL.AddConstantN('WS_EX_LEFTSCROLLBAR','LongWord').SetUInt( $00004000);
 CL.AddConstantN('WS_EX_RIGHTSCROLLBAR','LongWord').SetUInt( $00000000);
 CL.AddDelphiFunction('Function SetProcessDefaultLayout( dwDefaultLayout : DWORD) : BOOL');
 CL.AddConstantN('LAYOUT_RTL','LongWord').SetUInt( $00000001);
 CL.AddConstantN('LAYOUT_BTT','LongWord').SetUInt( $00000002);
 CL.AddConstantN('LAYOUT_VBH','LongWord').SetUInt( $00000004);
 CL.AddConstantN('LAYOUT_BITMAPORIENTATIONPRESERVED','LongWord').SetUInt( $00000008);
 CL.AddConstantN('NOMIRRORBITMAP','LongWord').SetUInt( DWORD ( $80000000 ));
 CL.AddDelphiFunction('Function SetLayout( dc : HDC; dwLayout : DWORD) : DWORD');
 CL.AddDelphiFunction('Function GetLayout( dc : hdc) : DWORD');
 CL.AddDelphiFunction('Function IsBidi : Boolean');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_ovcBidi_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@SetProcessDefaultLayout, 'SetProcessDefaultLayout', CdStdCall);
 S.RegisterDelphiFunction(@SetLayout, 'SetLayout', CdStdCall);
 S.RegisterDelphiFunction(@GetLayout, 'GetLayout', CdStdCall);
 S.RegisterDelphiFunction(@IsBidi, 'IsBidi', cdRegister);
end;

 
 
{ TPSImport_ovcBidi }
(*----------------------------------------------------------------------------*)
procedure TPSImport_ovcBidi.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_ovcBidi(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_ovcBidi.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_ovcBidi(ri);
  RIRegister_ovcBidi_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
