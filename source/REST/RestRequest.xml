<?xml version="1.0" encoding="utf-8"?>
<namespace name="RestRequest">
  <devnotes>
     <summary>
     Contains TRestRequest - The simple, fluent wrapper around Indy's TIdHttp
     to make writing RESTful clients easy.
     </summary>
     backed for mX4
      httpClient.DoRequest(hmDelete, getURLAsStr, httpClient.Request.Source, nil);
  </devnotes>
  <struct name="THttpResponse">
    <field name="ResponseCode" type="Integer" visibility="public">
      <devnotes>
         <summary>
         The Http Response code returned
         </summary>
      </devnotes>
    </field>
    <field name="ResponseStr" type="string" visibility="public">
      <devnotes>
         <summary>
         The Body returned or an exception message.
         </summary>
      </devnotes>
    </field>
  </struct>
  <class name="TRestRequest">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="InitInstance" visibility="public">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public">
      </methodref>
      <methodref name="ClassName" visibility="public">
      </methodref>
      <methodref name="ClassNameIs" visibility="public">
      </methodref>
      <methodref name="ClassParent" visibility="public">
      </methodref>
      <methodref name="ClassInfo" visibility="public">
      </methodref>
      <methodref name="InstanceSize" visibility="public">
      </methodref>
      <methodref name="InheritsFrom" visibility="public">
      </methodref>
      <methodref name="MethodAddress" visibility="public">
      </methodref>
      <methodref name="MethodName" visibility="public">
      </methodref>
      <methodref name="FieldAddress" visibility="public">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public">
      </methodref>
      <methodref name="SafeCallException" visibility="public">
      </methodref>
      <methodref name="AfterConstruction" visibility="public">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public">
      </methodref>
      <methodref name="Dispatch" visibility="public">
      </methodref>
      <methodref name="DefaultHandler" visibility="public">
      </methodref>
      <methodref name="NewInstance" visibility="public">
      </methodref>
      <methodref name="FreeInstance" visibility="public">
      </methodref>
      <methodref name="Destroy" visibility="public">
      </methodref>
    </ancestor>
    <members>
      <field name="FDomain" type="string" visibility="private" />
      <field name="FPaths" type="TStringList" visibility="private" />
      <field name="FParams" type="TStringList" visibility="private" />
      <field name="FFileParams" type="TStringList" visibility="private" />
      <field name="FHeaders" type="TStringList" visibility="private" />
      <field name="FUsername" type="string" visibility="private" />
      <field name="FPassword" type="string" visibility="private" />
      <field name="FResponse" type="THttpResponse" visibility="private" />
      <field name="FAccept" type="string" visibility="private" />
      <field name="FContentType" type="string" visibility="private" />
      <field name="FBeforeRequest" type="TBeforeRequest" visibility="private" />
      <procedure name="doBeforeRequest" visibility="private">
        <parameters>
          <parameter name="AHttpInst" type="TIdHTTP" />
        </parameters>
      </procedure>
      <function name="getHttpClientInstance" visibility="private">
        <parameters>
          <retval type="TIdHTTP" />
        </parameters>
      </function>
      <function name="getURLAsStr" visibility="private">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
      <function name="urlEncode" visibility="private">
        <parameters>
          <parameter name="str" type="string" />
          <retval type="string" />
        </parameters>
      </function>
      <function name="doPost" visibility="private" procflags="overload">
        <parameters>
          <parameter name="aParams" type="TIdMultiPartFormDataStream" />
          <retval type="THttpResponse" />
        </parameters>
      </function>
      <function name="doPost" visibility="private" procflags="overload">
        <parameters>
          <parameter name="aParams" type="TStringStream" />
          <retval type="THttpResponse" />
        </parameters>
      </function>
      <function name="multipartRequired" visibility="private">
        <parameters>
          <parameter name="aParams" type="TStringList" />
          <parameter name="aFileParams" type="TStringList" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="createMultiPartFormDataStreamFromStringList" visibility="private">
        <parameters>
          <parameter name="strings" type="TStringList" />
          <parameter name="aFileParams" type="TStringList" />
          <retval type="TIdMultiPartFormDataStream" />
        </parameters>
      </function>
      <function name="createStringStreamFromStringList" visibility="private">
        <parameters>
          <parameter name="strings" type="TStringList" />
          <retval type="TStringStream" />
        </parameters>
      </function>
      <procedure name="httpAuthorisation" visibility="private">
        <parameters>
          <parameter name="Sender" type="TObject" />
          <parameter name="Authentication" type="TIdAuthentication" />
          <parameter name="Handled" type="Boolean" paramflags="var" />
        </parameters>
      </procedure>
      <function name="getAccept" visibility="private">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
      <procedure name="setAccept" visibility="private">
        <parameters>
          <parameter name="Value" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <function name="getContentType" visibility="private">
        <parameters>
          <retval type="string" />
        </parameters>
      </function>
      <procedure name="setContentType" visibility="private">
        <parameters>
          <parameter name="Value" type="string" paramflags="const" />
        </parameters>
      </procedure>
      <function name="GetBeforeRequest" visibility="private">
        <parameters>
          <retval type="TBeforeRequest" />
        </parameters>
      </function>
      <procedure name="SetBeforeRequest" visibility="private">
        <parameters>
          <parameter name="Value" type="TBeforeRequest" paramflags="const" />
        </parameters>
      </procedure>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="aIsSSL" type="Boolean" />
        </parameters>
      </constructor>
      <constructor name="Create" visibility="public">
        <parameters>
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <function name="Domain" visibility="public">
        <parameters>
          <parameter name="aDomain" type="string" />
          <retval type="TRestRequest" />
        </parameters>
      </function>
      <function name="Path" visibility="public">
        <parameters>
          <parameter name="aPath" type="string" />
          <retval type="TRestRequest" />
        </parameters>
      </function>
      <function name="Param" visibility="public">
        <parameters>
          <parameter name="aKey" type="string" />
          <parameter name="aValue" type="string" />
          <retval type="TRestRequest" />
        </parameters>
      </function>
      <function name="FileParam" visibility="public">
        <parameters>
          <parameter name="aKey" type="string" />
          <parameter name="aValue" type="string" />
          <retval type="TRestRequest" />
        </parameters>
      </function>
      <function name="WithHeader" visibility="public">
        <parameters>
          <parameter name="aName" type="string" />
          <parameter name="aValue" type="string" />
          <retval type="TRestRequest" />
        </parameters>
      </function>
      <function name="WithCredentials" visibility="public">
        <parameters>
          <parameter name="username" type="string" />
          <parameter name="password" type="string" />
          <retval type="TRestRequest" />
        </parameters>
      </function>
      <property name="Response" visibility="public" read="FResponse" type="THttpResponse" />
      <property name="FullUrl" visibility="public" read="getURLAsStr" type="string" />
      <property name="Accept" visibility="public" read="getAccept" write="setAccept" type="string" />
      <property name="ContentType" visibility="public" read="getContentType" write="setContentType" type="string" />
      <event name="BeforeRequest" visibility="public" read="GetBeforeRequest" write="SetBeforeRequest" type="TBeforeRequest" />
      <function name="Get" visibility="public">
        <parameters>
          <retval type="THttpResponse" />
        </parameters>
      </function>
      <function name="Put" visibility="public">
        <parameters>
          <parameter name="aParams" type="TStringList" />
          <retval type="THttpResponse" />
        </parameters>
      </function>
      <function name="Post" visibility="public">
        <parameters>
          <parameter name="aParams" type="TStringList" />
          <retval type="THttpResponse" />
        </parameters>
      </function>
      <function name="Delete" visibility="public">
        <parameters>
          <retval type="THttpResponse" />
        </parameters>
      </function>
      <function name="Options" visibility="public">
        <parameters>
          <retval type="THttpResponse" />
        </parameters>
      </function>
    </members>
  </class>
</namespace>
