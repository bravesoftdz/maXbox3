unit uPSI_advapi32mX;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_advapi32mX = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_advapi32mX(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_advapi32mX_Routines(S: TPSExec);

procedure Register;

implementation


uses
   advapi32mX
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_advapi32mX]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_advapi32mX(CL: TPSPascalCompiler);
begin
 CL.AddDelphiFunction('Function AbortSystemShutdown( lpMachineName : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function AccessCheckAndAuditAlarm( SubsystemName : PKOLChar; HandleId : Pointer; ObjectTypeName, ObjectName : PKOLChar; SecurityDescriptor : PSecurityDescriptor; DesiredAccess : DWORD; const GenericMapping : TGenericMapping; ObjectCreation : BOOL; var GrantedAccess : DWORD; var AccessStatus, pfGenerateOnClose : BOOL) : BOOL');
 CL.AddDelphiFunction('Function AccessCheckByTypeAndAuditAlarm( SubsystemName : PKOLChar; HandleId : Pointer; ObjectTypeName, ObjectName : PKOLChar; SecurityDescriptor : PSecurityDescriptor; PrincipalSelfSid : PSID; DesiredAccess : DWORD; AuditType : AUDIT_EVENT_TYPE; Flags : DWORD; ObjectTypeList : PObjectTypeList; ObjectTypeListLength : DWORD; const GenericMapping : TGenericMapping; ObjectCreation : BOOL; var GrantedAccess : DWORD; var AccessStatus, pfGenerateOnClose : BOOL) : BOOL');
 CL.AddDelphiFunction('Function AccessCheckByTypeResultListAndAuditAlarm( SubsystemName : PKOLChar; HandleId : Pointer; ObjectTypeName, ObjectName : PKOLChar; SecurityDescriptor : PSecurityDescriptor; PrincipalSelfSid : PSID; DesiredAccess : DWORD; AuditType : AUDIT_EVENT_TYPE; Flags : DWORD; ObjectTypeList : PObjectTypeList; ObjectTypeListLength : DWORD; const GenericMapping : TGenericMapping; ObjectCreation : BOOL; var GrantedAccess : DWORD; var AccessStatusList : DWORD; var pfGenerateOnClose : BOOL) : BOOL');
 CL.AddDelphiFunction('Function BackupEventLog( hEventLog : THandle; lpBackupFileName : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function ClearEventLog( hEventLog : THandle; lpBackupFileName : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function CreateProcessAsUser( hToken : THandle; lpApplicationName : PKOLChar; lpCommandLine : PKOLChar; lpProcessAttributes : PSecurityAttributes; lpThreadAttributes : PSecurityAttributes; bInheritHandles : BOOL; dwCreationFlags : DWORD; lpEnvironment : Pointer; lpCurrentDirectory : PKOLChar; const lpStartupInfo : TStartupInfo; var lpProcessInformation : TProcessInformation) : BOOL');
 CL.AddDelphiFunction('Function GetCurrentHwProfile( var lpHwProfileInfo : THWProfileInfo) : BOOL');
 CL.AddDelphiFunction('Function GetFileSecurity( lpFileName : PKOLChar; RequestedInformation : SECURITY_INFORMATION; pSecurityDescriptor : PSecurityDescriptor; nLength : DWORD; var lpnLengthNeeded : DWORD) : BOOL');
 CL.AddDelphiFunction('Function GetUserName( lpBuffer : PKOLChar; var nSize : DWORD) : BOOL');
 CL.AddDelphiFunction('Function InitiateSystemShutdown( lpMachineName, lpMessage : PKOLChar; dwTimeout : DWORD; bForceAppsClosed, bRebootAfterShutdown : BOOL) : BOOL');
 CL.AddDelphiFunction('Function LogonUser( lpszUsername, lpszDomain, lpszPassword : PKOLChar; dwLogonType, dwLogonProvider : DWORD; var phToken : THandle) : BOOL');
 CL.AddDelphiFunction('Function LookupAccountName( lpSystemName, lpAccountName : PKOLChar; Sid : PSID; var cbSid : DWORD; ReferencedDomainName : PKOLChar; var cbReferencedDomainName : DWORD; var peUse : SID_NAME_USE) : BOOL');
 CL.AddDelphiFunction('Function LookupAccountSid( lpSystemName : PKOLChar; Sid : PSID; Name : PKOLChar; var cbName : DWORD; ReferencedDomainName : PKOLChar; var cbReferencedDomainName : DWORD; var peUse : SID_NAME_USE) : BOOL');
 CL.AddDelphiFunction('Function LookupPrivilegeDisplayName( lpSystemName, lpName : PKOLChar; lpDisplayName : PKOLChar; var cbDisplayName, lpLanguageId : DWORD) : BOOL');
 CL.AddDelphiFunction('Function LookupPrivilegeName( lpSystemName : PKOLChar; var lpLuid : TLargeInteger; lpName : PKOLChar; var cbName : DWORD) : BOOL');
 CL.AddDelphiFunction('Function LookupPrivilegeValue( lpSystemName, lpName : PKOLChar; var lpLuid : TLargeInteger) : BOOL');
 CL.AddDelphiFunction('Function ObjectCloseAuditAlarm( SubsystemName : PKOLChar; HandleId : Pointer; GenerateOnClose : BOOL) : BOOL');
 CL.AddDelphiFunction('Function ObjectDeleteAuditAlarm( SubsystemName : PKOLChar; HandleId : Pointer; GenerateOnClose : BOOL) : BOOL');
 CL.AddDelphiFunction('Function ObjectOpenAuditAlarm( SubsystemName : PKOLChar; HandleId : Pointer; ObjectTypeName : PKOLChar; ObjectName : PKOLChar; pSecurityDescriptor : PSecurityDescriptor; ClientToken : THandle; DesiredAccess, GrantedAccess : DWORD; var Privileges : TPrivilegeSet; ObjectCreation, AccessGranted : BOOL; var GenerateOnClose : BOOL) : BOOL');
 CL.AddDelphiFunction('Function ObjectPrivilegeAuditAlarm( SubsystemName : PKOLChar; HandleId : Pointer; ClientToken : THandle; DesiredAccess : DWORD; var Privileges : TPrivilegeSet; AccessGranted : BOOL) : BOOL');
 CL.AddDelphiFunction('Function OpenBackupEventLog( lpUNCServerName, lpFileName : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function OpenEventLog( lpUNCServerName, lpSourceName : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function PrivilegedServiceAuditAlarm( SubsystemName, ServiceName : PKOLChar; ClientToken : THandle; var Privileges : TPrivilegeSet; AccessGranted : BOOL) : BOOL');
 CL.AddDelphiFunction('Function ReadEventLog( hEventLog : THandle; dwReadFlags, dwRecordOffset : DWORD; lpBuffer : Pointer; nNumberOfBytesToRead : DWORD; var pnBytesRead, pnMinNumberOfBytesNeeded : DWORD) : BOOL');
 CL.AddDelphiFunction('Function RegConnectRegistry( lpMachineName : PKOLChar; hKey : HKEY; var phkResult : HKEY) : Longint');
 CL.AddDelphiFunction('Function RegCreateKey( hKey : HKEY; lpSubKey : PKOLChar; var phkResult : HKEY) : Longint');
 CL.AddDelphiFunction('Function RegCreateKeyEx( hKey : HKEY; lpSubKey : PKOLChar; Reserved : DWORD; lpClass : PKOLChar; dwOptions : DWORD; samDesired : REGSAM; lpSecurityAttributes : PSecurityAttributes; var phkResult : HKEY; lpdwDisposition : PDWORD) : Longint');
 CL.AddDelphiFunction('Function RegDeleteKey( hKey : HKEY; lpSubKey : PKOLChar) : Longint');
 CL.AddDelphiFunction('Function RegDeleteValue( hKey : HKEY; lpValueName : PKOLChar) : Longint');
 CL.AddDelphiFunction('Function RegEnumKeyEx( hKey : HKEY; dwIndex : DWORD; lpName : PKOLChar; var lpcbName : DWORD; lpReserved : Pointer; lpClass : PKOLChar; lpcbClass : PDWORD; lpftLastWriteTime : PFileTime) : Longint');
 CL.AddDelphiFunction('Function RegEnumKey( hKey : HKEY; dwIndex : DWORD; lpName : PKOLChar; cbName : DWORD) : Longint');
 CL.AddDelphiFunction('Function RegEnumValue( hKey : HKEY; dwIndex : DWORD; lpValueName : PKOLChar; var lpcbValueName : DWORD; lpReserved : Pointer; lpType : PDWORD; lpData : PByte; lpcbData : PDWORD) : Longint');
 CL.AddDelphiFunction('Function RegLoadKey( hKey : HKEY; lpSubKey, lpFile : PKOLChar) : Longint');
 CL.AddDelphiFunction('Function RegOpenKey( hKey : HKEY; lpSubKey : PKOLChar; var phkResult : HKEY) : Longint');
 CL.AddDelphiFunction('Function RegOpenKeyEx( hKey : HKEY; lpSubKey : PKOLChar; ulOptions : DWORD; samDesired : REGSAM; var phkResult : HKEY) : Longint');
 CL.AddDelphiFunction('Function RegQueryInfoKey( hKey : HKEY; lpClass : PKOLChar; lpcbClass : PDWORD; lpReserved : Pointer; lpcSubKeys, lpcbMaxSubKeyLen, lpcbMaxClassLen, lpcValues, lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor : PDWORD; lpftLastWriteTime : PFileTime) : Longint');
 CL.AddDelphiFunction('Function RegQueryMultipleValues( hKey : HKEY; var ValList, NumVals : DWORD; lpValueBuf : PKOLChar; var ldwTotsize : DWORD) : Longint');
 CL.AddDelphiFunction('Function RegQueryValue( hKey : HKEY; lpSubKey : PKOLChar; lpValue : PKOLChar; var lpcbValue : Longint) : Longint');
 CL.AddDelphiFunction('Function RegQueryValueEx( hKey : HKEY; lpValueName : PKOLChar; lpReserved : Pointer; lpType : PDWORD; lpData : PByte; lpcbData : PDWORD) : Longint');
 CL.AddDelphiFunction('Function RegReplaceKey( hKey : HKEY; lpSubKey : PKOLChar; lpNewFile : PKOLChar; lpOldFile : PKOLChar) : Longint');
 CL.AddDelphiFunction('Function RegRestoreKey( hKey : HKEY; lpFile : PKOLChar; dwFlags : DWORD) : Longint');
 CL.AddDelphiFunction('Function RegSaveKey( hKey : HKEY; lpFile : PKOLChar; lpSecurityAttributes : PSecurityAttributes) : Longint');
 CL.AddDelphiFunction('Function RegSetValue( hKey : HKEY; lpSubKey : PKOLChar; dwType : DWORD; lpData : PKOLChar; cbData : DWORD) : Longint');
 CL.AddDelphiFunction('Function RegSetValueEx( hKey : HKEY; lpValueName : PKOLChar; Reserved : DWORD; dwType : DWORD; lpData : Pointer; cbData : DWORD) : Longint');
 CL.AddDelphiFunction('Function RegUnLoadKey( hKey : HKEY; lpSubKey : PKOLChar) : Longint');
 CL.AddDelphiFunction('Function RegisterEventSource( lpUNCServerName, lpSourceName : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function ReportEvent( hEventLog : THandle; wType, wCategory : Word; dwEventID : DWORD; lpUserSid : Pointer; wNumStrings : Word; dwDataSize : DWORD; lpStrings, lpRawData : Pointer) : BOOL');
 CL.AddDelphiFunction('Function SetFileSecurity( lpFileName : PKOLChar; SecurityInformation : SECURITY_INFORMATION; pSecurityDescriptor : PSecurityDescriptor) : BOOL');
 CL.AddDelphiFunction('Function AddAtom( lpString : PKOLChar) : ATOM');
 CL.AddDelphiFunction('Function BeginUpdateResource( pFileName : PKOLChar; bDeleteExistingResources : BOOL) : THandle');
 CL.AddDelphiFunction('Function BuildCommDCB( lpDef : PKOLChar; var lpDCB : TDCB) : BOOL');
 CL.AddDelphiFunction('Function BuildCommDCBAndTimeouts( lpDef : PKOLChar; var lpDCB : TDCB; var lpCommTimeouts : TCommTimeouts) : BOOL');
 CL.AddDelphiFunction('Function CallNamedPipe( lpNamedPipeName : PKOLChar; lpInBuffer : Pointer; nInBufferSize : DWORD; lpOutBuffer : Pointer; nOutBufferSize : DWORD; var lpBytesRead : DWORD; nTimeOut : DWORD) : BOOL');
 CL.AddDelphiFunction('Function CommConfigDialog( lpszName : PKOLChar; hWnd : HWND; var lpCC : TCommConfig) : BOOL');
 CL.AddDelphiFunction('Function CompareString( Locale : LCID; dwCmpFlags : DWORD; lpString1 : PKOLChar; cchCount1 : Integer; lpString2 : PKOLChar; cchCount2 : Integer) : Integer');
 CL.AddDelphiFunction('Function CopyFile( lpExistingFileName, lpNewFileName : PKOLChar; bFailIfExists : BOOL) : BOOL');
 CL.AddDelphiFunction('Function CopyFileEx( lpExistingFileName, lpNewFileName : PKOLChar; lpProgressRoutine : TFNProgressRoutine; lpData : Pointer; pbCancel : PBool; dwCopyFlags : DWORD) : BOOL');
 CL.AddDelphiFunction('Function CreateDirectory( lpPathName : PKOLChar; lpSecurityAttributes : PSecurityAttributes) : BOOL');
 CL.AddDelphiFunction('Function CreateDirectoryEx( lpTemplateDirectory, lpNewDirectory : PKOLChar; lpSecurityAttributes : PSecurityAttributes) : BOOL');
 CL.AddDelphiFunction('Function CreateEvent( lpEventAttributes : PSecurityAttributes; bManualReset, bInitialState : BOOL; lpName : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function CreateFile( lpFileName : PKOLChar; dwDesiredAccess, dwShareMode : DWORD; lpSecurityAttributes : PSecurityAttributes; dwCreationDisposition, dwFlagsAndAttributes : DWORD; hTemplateFile : THandle) : THandle');
 CL.AddDelphiFunction('Function CreateFileMapping( hFile : THandle; lpFileMappingAttributes : PSecurityAttributes; flProtect, dwMaximumSizeHigh, dwMaximumSizeLow : DWORD; lpName : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function CreateHardLink( lpFileName, lpExistingFileName : PKOLChar; lpSecurityAttributes : PSecurityAttributes) : BOOL');
 CL.AddDelphiFunction('Function CreateMailslot( lpName : PKOLChar; nMaxMessageSize : DWORD; lReadTimeout : DWORD; lpSecurityAttributes : PSecurityAttributes) : THandle');
 CL.AddDelphiFunction('Function CreateNamedPipe( lpName : PKOLChar; dwOpenMode, dwPipeMode, nMaxInstances, nOutBufferSize, nInBufferSize, nDefaultTimeOut : DWORD; lpSecurityAttributes : PSecurityAttributes) : THandle');
 CL.AddDelphiFunction('Function CreateProcess( lpApplicationName : PKOLChar; lpCommandLine : PKOLChar; lpProcessAttributes, lpThreadAttributes : PSecurityAttributes; bInheritHandles : BOOL; dwCreationFlags : DWORD; lpEnvironment : Pointer; lpCurrentDirectory : PKOLChar; const lpStartupInfo : TStartupInfo; var lpProcessInformation : TProcessInformation) : BOOL');
 CL.AddDelphiFunction('Function CreateSemaphore( lpSemaphoreAttributes : PSecurityAttributes; lInitialCount, lMaximumCount : Longint; lpName : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function CreateWaitableTimer( lpTimerAttributes : PSecurityAttributes; bManualReset : BOOL; lpTimerName : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function DefineDosDevice( dwFlags : DWORD; lpDeviceName, lpTargetPath : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function DeleteFile( lpFileName : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function EndUpdateResource( hUpdate : THandle; fDiscard : BOOL) : BOOL');
 CL.AddDelphiFunction('Function EnumCalendarInfo( lpCalInfoEnumProc : TFNCalInfoEnumProc; Locale : LCID; Calendar : CALID; CalType : CALTYPE) : BOOL');
 CL.AddDelphiFunction('Function EnumDateFormats( lpDateFmtEnumProc : TFNDateFmtEnumProc; Locale : LCID; dwFlags : DWORD) : BOOL');
 CL.AddDelphiFunction('Function EnumResourceLanguages( hModule : HMODULE; lpType, lpName : PKOLChar; lpEnumFunc : ENUMRESLANGPROC; lParam : Longint) : BOOL');
 CL.AddDelphiFunction('Function EnumResourceNames( hModule : HMODULE; lpType : PKOLChar; lpEnumFunc : ENUMRESNAMEPROC; lParam : Longint) : BOOL');
 CL.AddDelphiFunction('Function EnumResourceTypes( hModule : HMODULE; lpEnumFunc : ENUMRESTYPEPROC; lParam : Longint) : BOOL');
 CL.AddDelphiFunction('Function EnumSystemCodePages( lpCodePageEnumProc : TFNCodepageEnumProc; dwFlags : DWORD) : BOOL');
 CL.AddDelphiFunction('Function EnumSystemLocales( lpLocaleEnumProc : TFNLocaleEnumProc; dwFlags : DWORD) : BOOL');
 CL.AddDelphiFunction('Function EnumTimeFormats( lpTimeFmtEnumProc : TFNTimeFmtEnumProc; Locale : LCID; dwFlags : DWORD) : BOOL');
 CL.AddDelphiFunction('Function ExpandEnvironmentStrings( lpSrc : PKOLChar; lpDst : PKOLChar; nSize : DWORD) : DWORD');
 CL.AddDelphiFunction('Procedure FatalAppExit( uAction : UINT; lpMessageText : PKOLChar)');
 CL.AddDelphiFunction('Function FillConsoleOutputCharacter( hConsoleOutput : THandle; cCharacter : KOLChar; nLength : DWORD; dwWriteCoord : TCoord; var lpNumberOfCharsWritten : DWORD) : BOOL');
 CL.AddDelphiFunction('Function FindAtom( lpString : PKOLChar) : ATOM');
 CL.AddDelphiFunction('Function FindFirstChangeNotification( lpPathName : PKOLChar; bWatchSubtree : BOOL; dwNotifyFilter : DWORD) : THandle');
 CL.AddDelphiFunction('Function FindFirstFile( lpFileName : PKOLChar; var lpFindFileData : TWIN32FindData) : THandle');
 CL.AddDelphiFunction('Function FindFirstFileEx( lpFileName : PKOLChar; fInfoLevelId : TFindexInfoLevels; lpFindFileData : Pointer; fSearchOp : TFindexSearchOps; lpSearchFilter : Pointer; dwAdditionalFlags : DWORD) : BOOL');
 CL.AddDelphiFunction('Function FindNextFile( hFindFile : THandle; var lpFindFileData : TWIN32FindData) : BOOL');
 CL.AddDelphiFunction('Function FindResource( hModule : HMODULE; lpName, lpType : PKOLChar) : HRSRC');
 CL.AddDelphiFunction('Function FindResourceEx( hModule : HMODULE; lpType, lpName : PKOLChar; wLanguage : Word) : HRSRC');
 CL.AddDelphiFunction('Function FoldString( dwMapFlags : DWORD; lpSrcStr : PKOLChar; cchSrc : Integer; lpDestStr : PKOLChar; cchDest : Integer) : Integer');
 CL.AddDelphiFunction('Function FormatMessage( dwFlags : DWORD; lpSource : Pointer; dwMessageId : DWORD; dwLanguageId : DWORD; lpBuffer : PKOLChar; nSize : DWORD; Arguments : Pointer) : DWORD');
 CL.AddDelphiFunction('Function FreeEnvironmentStrings( EnvBlock : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function GetAtomName( nAtom : ATOM; lpBuffer : PKOLChar; nSize : Integer) : UINT');
 CL.AddDelphiFunction('Function GetBinaryType( lpApplicationName : PKOLChar; var lpBinaryType : DWORD) : BOOL');
 CL.AddDelphiFunction('Function GetCommandLine : PKOLChar');
 CL.AddDelphiFunction('Function GetCompressedFileSize( lpFileName : PKOLChar; lpFileSizeHigh : PDWORD) : DWORD');
 CL.AddDelphiFunction('Function GetComputerName( lpBuffer : PKOLChar; var nSize : DWORD) : BOOL');
 CL.AddDelphiFunction('Function GetConsoleTitle( lpConsoleTitle : PKOLChar; nSize : DWORD) : DWORD');
 CL.AddDelphiFunction('Function GetCurrencyFormat( Locale : LCID; dwFlags : DWORD; lpValue : PKOLChar; lpFormat : PCurrencyFmt; lpCurrencyStr : PKOLChar; cchCurrency : Integer) : Integer');
 CL.AddDelphiFunction('Function GetCurrentDirectory( nBufferLength : DWORD; lpBuffer : PKOLChar) : DWORD');
 CL.AddDelphiFunction('Function GetDateFormat( Locale : LCID; dwFlags : DWORD; lpDate : PSystemTime; lpFormat : PKOLChar; lpDateStr : PKOLChar; cchDate : Integer) : Integer');
 CL.AddDelphiFunction('Function GetDefaultCommConfig( lpszName : PKOLChar; var lpCC : TCommConfig; var lpdwSize : DWORD) : BOOL');
 CL.AddDelphiFunction('Function GetDiskFreeSpace( lpRootPathName : PKOLChar; var lpSectorsPerCluster, lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters : DWORD) : BOOL');
 CL.AddDelphiFunction('Function GetDiskFreeSpaceEx( lpDirectoryName : PKOLChar; var lpFreeBytesAvailableToCaller, lpTotalNumberOfBytes, lpTotalNumberOfFreeBytes : PLargeInteger) : BOOL');
 CL.AddDelphiFunction('Function GetDriveType( lpRootPathName : PKOLChar) : UINT');
 CL.AddDelphiFunction('Function GetEnvironmentStrings : PKOLChar');
 CL.AddDelphiFunction('Function GetEnvironmentVariable( lpName : PKOLChar; lpBuffer : PKOLChar; nSize : DWORD) : DWORD;');
 CL.AddDelphiFunction('Function GetFileAttributes( lpFileName : PKOLChar) : DWORD');
 CL.AddDelphiFunction('Function GetFileAttributesEx( lpFileName : PKOLChar; fInfoLevelId : TGetFileExInfoLevels; lpFileInformation : Pointer) : BOOL');
 CL.AddDelphiFunction('Function GetFullPathName( lpFileName : PKOLChar; nBufferLength : DWORD; lpBuffer : PKOLChar; var lpFilePart : PKOLChar) : DWORD');
 CL.AddDelphiFunction('Function GetLocaleInfo( Locale : LCID; LCType : LCTYPE; lpLCData : PKOLChar; cchData : Integer) : Integer');
 CL.AddDelphiFunction('Function GetLogicalDriveStrings( nBufferLength : DWORD; lpBuffer : PKOLChar) : DWORD');
 CL.AddDelphiFunction('Function GetModuleFileName( hModule : HINST; lpFilename : PKOLChar; nSize : DWORD) : DWORD');
 CL.AddDelphiFunction('Function GetModuleHandle( lpModuleName : PKOLChar) : HMODULE');
 CL.AddDelphiFunction('Function GetNamedPipeHandleState( hNamedPipe : THandle; lpState, lpCurInstances, lpMaxCollectionCount, lpCollectDataTimeout : PDWORD; lpUserName : PKOLChar; nMaxUserNameSize : DWORD) : BOOL');
 CL.AddDelphiFunction('Function GetNumberFormat( Locale : LCID; dwFlags : DWORD; lpValue : PKOLChar; lpFormat : PNumberFmt; lpNumberStr : PKOLChar; cchNumber : Integer) : Integer');
 CL.AddDelphiFunction('Function GetPrivateProfileInt( lpAppName, lpKeyName : PKOLChar; nDefault : Integer; lpFileName : PKOLChar) : UINT');
 CL.AddDelphiFunction('Function GetPrivateProfileSection( lpAppName : PKOLChar; lpReturnedString : PKOLChar; nSize : DWORD; lpFileName : PKOLChar) : DWORD');
 CL.AddDelphiFunction('Function GetPrivateProfileSectionNames( lpszReturnBuffer : PKOLChar; nSize : DWORD; lpFileName : PKOLChar) : DWORD');
 CL.AddDelphiFunction('Function GetPrivateProfileString( lpAppName, lpKeyName, lpDefault : PKOLChar; lpReturnedString : PKOLChar; nSize : DWORD; lpFileName : PKOLChar) : DWORD');
 CL.AddDelphiFunction('Function GetProfileInt( lpAppName, lpKeyName : PKOLChar; nDefault : Integer) : UINT');
 CL.AddDelphiFunction('Function GetProfileSection( lpAppName : PKOLChar; lpReturnedString : PKOLChar; nSize : DWORD) : DWORD');
 CL.AddDelphiFunction('Function GetProfileString( lpAppName, lpKeyName, lpDefault : PKOLChar; lpReturnedString : PKOLChar; nSize : DWORD) : DWORD');
 CL.AddDelphiFunction('Function GetShortPathName( lpszLongPath : PKOLChar; lpszShortPath : PKOLChar; cchBuffer : DWORD) : DWORD');
 CL.AddDelphiFunction('Procedure GetStartupInfo( var lpStartupInfo : TStartupInfo)');
 CL.AddDelphiFunction('Function GetStringTypeEx( Locale : LCID; dwInfoType : DWORD; lpSrcStr : PKOLChar; cchSrc : Integer; var lpCharType) : BOOL');
 CL.AddDelphiFunction('Function GetSystemDirectory( lpBuffer : PKOLChar; uSize : UINT) : UINT');
 CL.AddDelphiFunction('Function GetTempFileName( lpPathName, lpPrefixString : PKOLChar; uUnique : UINT; lpTempFileName : PKOLChar) : UINT');
 CL.AddDelphiFunction('Function GetTempPath( nBufferLength : DWORD; lpBuffer : PKOLChar) : DWORD');
 CL.AddDelphiFunction('Function GetTimeFormat( Locale : LCID; dwFlags : DWORD; lpTime : PSystemTime; lpFormat : PKOLChar; lpTimeStr : PKOLChar; cchTime : Integer) : Integer');
 CL.AddDelphiFunction('Function GetVersionEx( var lpVersionInformation : TOSVersionInfo) : BOOL');
 CL.AddDelphiFunction('Function GetVolumeInformation( lpRootPathName : PKOLChar; lpVolumeNameBuffer : PKOLChar; nVolumeNameSize : DWORD; lpVolumeSerialNumber : PDWORD; var lpMaximumComponentLength, lpFileSystemFlags : DWORD; lpFileSystemNameBuffer : PKOLChar; nFileSystemNameSize : DWORD) : BOOL');
 CL.AddDelphiFunction('Function GetWindowsDirectory( lpBuffer : PKOLChar; uSize : UINT) : UINT');
 CL.AddDelphiFunction('Function GlobalAddAtom( lpString : PKOLChar) : ATOM');
 CL.AddDelphiFunction('Function GlobalFindAtom( lpString : PKOLChar) : ATOM');
 CL.AddDelphiFunction('Function GlobalGetAtomName( nAtom : ATOM; lpBuffer : PKOLChar; nSize : Integer) : UINT');
 CL.AddDelphiFunction('Function IsBadStringPtr( lpsz : PKOLChar; ucchMax : UINT) : BOOL');
 CL.AddDelphiFunction('Function LCMapString( Locale : LCID; dwMapFlags : DWORD; lpSrcStr : PKOLChar; cchSrc : Integer; lpDestStr : PKOLChar; cchDest : Integer) : Integer');
 CL.AddDelphiFunction('Function LoadLibrary( lpLibFileName : PKOLChar) : HMODULE');
 CL.AddDelphiFunction('Function LoadLibraryEx( lpLibFileName : PKOLChar; hFile : THandle; dwFlags : DWORD) : HMODULE');
 CL.AddDelphiFunction('Function MoveFile( lpExistingFileName, lpNewFileName : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function MoveFileEx( lpExistingFileName, lpNewFileName : PKOLChar; dwFlags : DWORD) : BOOL');
 CL.AddDelphiFunction('Function MoveFileWithProgress( lpExistingFileName, lpNewFileName : PKOLChar; lpProgressRoutine : TFNProgressRoutine; lpData : Pointer; dwFlags : DWORD) : BOOL');
 CL.AddDelphiFunction('Function OpenEvent( dwDesiredAccess : DWORD; bInheritHandle : BOOL; lpName : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function OpenFileMapping( dwDesiredAccess : DWORD; bInheritHandle : BOOL; lpName : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function OpenMutex( dwDesiredAccess : DWORD; bInheritHandle : BOOL; lpName : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function OpenSemaphore( dwDesiredAccess : DWORD; bInheritHandle : BOOL; lpName : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function OpenWaitableTimer( dwDesiredAccess : DWORD; bInheritHandle : BOOL; lpTimerName : PKOLChar) : THandle');
 CL.AddDelphiFunction('Procedure OutputDebugString( lpOutputString : PKOLChar)');
 CL.AddDelphiFunction('Function PeekConsoleInput( hConsoleInput : THandle; var lpBuffer : TInputRecord; nLength : DWORD; var lpNumberOfEventsRead : DWORD) : BOOL');
 CL.AddDelphiFunction('Function QueryDosDevice( lpDeviceName : PKOLChar; lpTargetPath : PKOLChar; ucchMax : DWORD) : DWORD');
 CL.AddDelphiFunction('Function QueryRecoveryAgents( p1 : PKOLChar; var p2 : Pointer; var p3 : TRecoveryAgentInformation) : DWORD');
 CL.AddDelphiFunction('Function ReadConsole( hConsoleInput : THandle; lpBuffer : Pointer; nNumberOfCharsToRead : DWORD; var lpNumberOfCharsRead : DWORD; lpReserved : Pointer) : BOOL');
 CL.AddDelphiFunction('Function ReadConsoleInput( hConsoleInput : THandle; var lpBuffer : TInputRecord; nLength : DWORD; var lpNumberOfEventsRead : DWORD) : BOOL');
 CL.AddDelphiFunction('Function ReadConsoleOutput( hConsoleOutput : THandle; lpBuffer : Pointer; dwBufferSize, dwBufferCoord : TCoord; var lpReadRegion : TSmallRect) : BOOL');
 CL.AddDelphiFunction('Function ReadConsoleOutputCharacter( hConsoleOutput : THandle; lpCharacter : PKOLChar; nLength : DWORD; dwReadCoord : TCoord; var lpNumberOfCharsRead : DWORD) : BOOL');
 CL.AddDelphiFunction('Function RemoveDirectory( lpPathName : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function ScrollConsoleScreenBuffer( hConsoleOutput : THandle; const lpScrollRectangle : TSmallRect; lpClipRectangle : PSmallRect; dwDestinationOrigin : TCoord; var lpFill : TCharInfo) : BOOL');
 CL.AddDelphiFunction('Function SearchPath( lpPath, lpFileName, lpExtension : PKOLChar; nBufferLength : DWORD; lpBuffer : PKOLChar; var lpFilePart : PKOLChar) : DWORD');
 CL.AddDelphiFunction('Function SetComputerName( lpComputerName : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function SetConsoleTitle( lpConsoleTitle : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function SetCurrentDirectory( lpPathName : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function SetDefaultCommConfig( lpszName : PKOLChar; lpCC : PCommConfig; dwSize : DWORD) : BOOL');
 CL.AddDelphiFunction('Function SetEnvironmentVariable( lpName, lpValue : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function SetFileAttributes( lpFileName : PKOLChar; dwFileAttributes : DWORD) : BOOL');
 CL.AddDelphiFunction('Function SetLocaleInfo( Locale : LCID; LCType : LCTYPE; lpLCData : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function SetVolumeLabel( lpRootPathName : PKOLChar; lpVolumeName : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function UpdateResource( hUpdate : THandle; lpType, lpName : PKOLChar; wLanguage : Word; lpData : Pointer; cbData : DWORD) : BOOL');
 CL.AddDelphiFunction('Function VerLanguageName( wLang : DWORD; szLang : PKOLChar; nSize : DWORD) : DWORD');
 CL.AddDelphiFunction('Function WaitNamedPipe( lpNamedPipeName : PKOLChar; nTimeOut : DWORD) : BOOL');
 CL.AddDelphiFunction('Function WriteConsole( hConsoleOutput : THandle; const lpBuffer : Pointer; nNumberOfCharsToWrite : DWORD; var lpNumberOfCharsWritten : DWORD; lpReserved : Pointer) : BOOL');
 CL.AddDelphiFunction('Function WriteConsoleInput( hConsoleInput : THandle; const lpBuffer : TInputRecord; nLength : DWORD; var lpNumberOfEventsWritten : DWORD) : BOOL');
 CL.AddDelphiFunction('Function WriteConsoleOutput( hConsoleOutput : THandle; lpBuffer : Pointer; dwBufferSize, dwBufferCoord : TCoord; var lpWriteRegion : TSmallRect) : BOOL');
 CL.AddDelphiFunction('Function WriteConsoleOutputCharacter( hConsoleOutput : THandle; lpCharacter : PKOLChar; nLength : DWORD; dwWriteCoord : TCoord; var lpNumberOfCharsWritten : DWORD) : BOOL');
 CL.AddDelphiFunction('Function WritePrivateProfileSection( lpAppName, lpString, lpFileName : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function WritePrivateProfileString( lpAppName, lpKeyName, lpString, lpFileName : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function WriteProfileSection( lpAppName, lpString : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function WriteProfileString( lpAppName, lpKeyName, lpString : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function lstrcat( lpString1, lpString2 : PKOLChar) : PKOLChar');
 CL.AddDelphiFunction('Function lstrcmp( lpString1, lpString2 : PKOLChar) : Integer');
 CL.AddDelphiFunction('Function lstrcmpi( lpString1, lpString2 : PKOLChar) : Integer');
 CL.AddDelphiFunction('Function lstrcpy( lpString1, lpString2 : PKOLChar) : PKOLChar');
 CL.AddDelphiFunction('Function lstrcpyn( lpString1, lpString2 : PKOLChar; iMaxLength : Integer) : PKOLChar');
 CL.AddDelphiFunction('Function lstrlen( lpString : PKOLChar) : Integer');
 CL.AddDelphiFunction('Function MultinetGetConnectionPerformance( lpNetResource : PNetResource; lpNetConnectInfoStruc : PNetConnectInfoStruct) : DWORD');
 CL.AddDelphiFunction('Function WNetAddConnection2( var lpNetResource : TNetResource; lpPassword, lpUserName : PKOLChar; dwFlags : DWORD) : DWORD');
 CL.AddDelphiFunction('Function WNetAddConnection3( hwndOwner : HWND; var lpNetResource : TNetResource; lpPassword, lpUserName : PKOLChar; dwFlags : DWORD) : DWORD');
 CL.AddDelphiFunction('Function WNetAddConnection( lpRemoteName, lpPassword, lpLocalName : PKOLChar) : DWORD');
 CL.AddDelphiFunction('Function WNetCancelConnection2( lpName : PKOLChar; dwFlags : DWORD; fForce : BOOL) : DWORD');
 CL.AddDelphiFunction('Function WNetCancelConnection( lpName : PKOLChar; fForce : BOOL) : DWORD');
 CL.AddDelphiFunction('Function WNetConnectionDialog1( var lpConnDlgStruct : TConnectDlgStruct) : DWORD');
 CL.AddDelphiFunction('Function WNetDisconnectDialog1( var lpConnDlgStruct : TDiscDlgStruct) : DWORD');
 CL.AddDelphiFunction('Function WNetEnumResource( hEnum : THandle; var lpcCount : DWORD; lpBuffer : Pointer; var lpBufferSize : DWORD) : DWORD');
 CL.AddDelphiFunction('Function WNetGetConnection( lpLocalName : PKOLChar; lpRemoteName : PKOLChar; var lpnLength : DWORD) : DWORD');
 CL.AddDelphiFunction('Function WNetGetLastError( var lpError : DWORD; lpErrorBuf : PKOLChar; nErrorBufSize : DWORD; lpNameBuf : PKOLChar; nNameBufSize : DWORD) : DWORD');
 CL.AddDelphiFunction('Function WNetGetNetworkInformation( lpProvider : PKOLChar; var lpNetInfoStruct : TNetInfoStruct) : DWORD');
 CL.AddDelphiFunction('Function WNetGetProviderName( dwNetType : DWORD; lpProviderName : PKOLChar; var lpBufferSize : DWORD) : DWORD');
 CL.AddDelphiFunction('Function WNetGetResourceParent( lpNetResource : PNetResource; lpBuffer : Pointer; var cbBuffer : DWORD) : DWORD');
 CL.AddDelphiFunction('Function WNetGetUniversalName( lpLocalPath : PKOLChar; dwInfoLevel : DWORD; lpBuffer : Pointer; var lpBufferSize : DWORD) : DWORD');
 CL.AddDelphiFunction('Function WNetGetUser( lpName : PKOLChar; lpUserName : PKOLChar; var lpnLength : DWORD) : DWORD');
 CL.AddDelphiFunction('Function WNetOpenEnum( dwScope, dwType, dwUsage : DWORD; lpNetResource : PNetResource; var lphEnum : THandle) : DWORD');
 CL.AddDelphiFunction('Function WNetSetConnection( lpName : PKOLChar; dwProperties : DWORD; pvValues : Pointer) : DWORD');
 CL.AddDelphiFunction('Function WNetUseConnection( hwndOwner : HWND; var lpNetResource : TNetResource; lpUserID : PKOLChar; lpPassword : PKOLChar; dwFlags : DWORD; lpAccessName : PKOLChar; var lpBufferSize : DWORD; var lpResult : DWORD) : DWORD');
 CL.AddDelphiFunction('Function GetFileVersionInfo( lptstrFilename : PKOLChar; dwHandle, dwLen : DWORD; lpData : Pointer) : BOOL');
 CL.AddDelphiFunction('Function GetFileVersionInfoSize( lptstrFilename : PKOLChar; var lpdwHandle : DWORD) : DWORD');
 CL.AddDelphiFunction('Function VerFindFile( uFlags : DWORD; szFileName, szWinDir, szAppDir, szCurDir : PKOLChar; var lpuCurDirLen : UINT; szDestDir : PKOLChar; var lpuDestDirLen : UINT) : DWORD');
 CL.AddDelphiFunction('Function VerInstallFile( uFlags : DWORD; szSrcFileName, szDestFileName, szSrcDir, szDestDir, szCurDir, szTmpFile : PKOLChar; var lpuTmpFileLen : UINT) : DWORD');
 CL.AddDelphiFunction('Function VerQueryValue( pBlock : Pointer; lpSubBlock : PKOLChar; var lplpBuffer : Pointer; var puLen : UINT) : BOOL');
 CL.AddDelphiFunction('Function GetPrivateProfileStruct( lpszSection, lpszKey : PKOLChar; lpStruct : Pointer; uSizeStruct : UINT; szFile : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function WritePrivateProfileStruct( lpszSection, lpszKey : PKOLChar; lpStruct : Pointer; uSizeStruct : UINT; szFile : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function AddFontResource( FileName : PKOLChar) : Integer');
 CL.AddDelphiFunction('Function AddFontResourceEx( p1 : PKOLChar; p2 : DWORD; p3 : PDesignVector) : Integer');
 CL.AddDelphiFunction('Function CopyEnhMetaFile( p1 : HENHMETAFILE; p2 : PKOLChar) : HENHMETAFILE');
 CL.AddDelphiFunction('Function CopyMetaFile( p1 : HMETAFILE; p2 : PKOLChar) : HMETAFILE');
 CL.AddDelphiFunction('Function CreateColorSpace( var ColorSpace : TLogColorSpace) : HCOLORSPACE');
 CL.AddDelphiFunction('Function CreateDC( lpszDriver, lpszDevice, lpszOutput : PKOLChar; lpdvmInit : PDeviceMode) : HDC');
 CL.AddDelphiFunction('Function CreateEnhMetaFile( DC : HDC; FileName : PKOLChar; Rect : PRect; Desc : PKOLChar) : HDC');
 CL.AddDelphiFunction('Function CreateFont( nHeight, nWidth, nEscapement, nOrientaion, fnWeight : Integer; fdwItalic, fdwUnderline, fdwStrikeOut, fdwCharSet, fdwOutputPrecision, fdwClipPrecision, fdwQuality, fdwPitchAndFamily : DWORD; lpszFace : PKOLChar) : HFONT');
 CL.AddDelphiFunction('Function CreateFontIndirect( const p1 : TLogFont) : HFONT');
 CL.AddDelphiFunction('Function CreateFontIndirectEx( const p1 : PEnumLogFontExDV) : HFONT');
 CL.AddDelphiFunction('Function CreateIC( lpszDriver, lpszDevice, lpszOutput : PKOLChar; lpdvmInit : PDeviceMode) : HDC');
 CL.AddDelphiFunction('Function CreateMetaFile( p1 : PKOLChar) : HDC');
 CL.AddDelphiFunction('Function CreateScalableFontResource( p1 : DWORD; p2, p3, p4 : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function DeviceCapabilities( pDriverName, pDeviceName, pPort : PKOLChar; iIndex : Integer; pOutput : PKOLChar; DevMode : PDeviceMode) : Integer');
 CL.AddDelphiFunction('Function EnumFontFamilies( DC : HDC; p2 : PKOLChar; p3 : TFNFontEnumProc; p4 : LPARAM) : BOOL');
 CL.AddDelphiFunction('Function EnumFontFamiliesEx( DC : HDC; var p2 : TLogFont; p3 : TFNFontEnumProc; p4 : LPARAM; p5 : DWORD) : BOOL');
 CL.AddDelphiFunction('Function EnumFonts( DC : HDC; lpszFace : PKOLChar; fntenmprc : TFNFontEnumProc; lpszData : PKOLChar) : Integer');
 CL.AddDelphiFunction('Function EnumICMProfiles( DC : HDC; ICMProc : TFNICMEnumProc; p3 : LPARAM) : Integer');
 CL.AddDelphiFunction('Function ExtTextOut( DC : HDC; X, Y : Integer; Options : Longint; Rect : PRect; Str : PKOLChar; Count : Longint; Dx : PInteger) : BOOL');
 CL.AddDelphiFunction('Function GetCharABCWidths( DC : HDC; FirstChar, LastChar : UINT; const ABCStructs) : BOOL');
 CL.AddDelphiFunction('Function GetCharABCWidthsFloat( DC : HDC; FirstChar, LastChar : UINT; const ABCFloatSturcts) : BOOL');
 CL.AddDelphiFunction('Function GetCharWidth32( DC : HDC; FirstChar, LastChar : UINT; const Widths) : BOOL');
 CL.AddDelphiFunction('Function GetCharWidth( DC : HDC; FirstChar, LastChar : UINT; const Widths) : BOOL');
 CL.AddDelphiFunction('Function GetCharWidthFloat( DC : HDC; FirstChar, LastChar : UINT; const Widths) : BOOL');
 CL.AddDelphiFunction('Function GetCharacterPlacement( DC : HDC; p2 : PKOLChar; p3, p4 : BOOL; var p5 : TGCPResults; p6 : DWORD) : DWORD');
 CL.AddDelphiFunction('Function GetEnhMetaFile( p1 : PKOLChar) : HENHMETAFILE');
 CL.AddDelphiFunction('Function GetEnhMetaFileDescription( p1 : HENHMETAFILE; p2 : UINT; p3 : PKOLChar) : UINT');
 CL.AddDelphiFunction('Function GetGlyphIndices( DC : HDC; p2 : PKOLChar; p3 : Integer; p4 : PWORD; p5 : DWORD) : DWORD');
 CL.AddDelphiFunction('Function GetGlyphOutline( DC : HDC; uChar, uFormat : UINT; const lpgm : TGlyphMetrics; cbBuffer : DWORD; lpvBuffer : Pointer; const lpmat2 : TMat2) : DWORD');
 CL.AddDelphiFunction('Function GetICMProfile( DC : HDC; var Size : DWORD; Name : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function GetLogColorSpace( p1 : HCOLORSPACE; var ColorSpace : TLogColorSpace; Size : DWORD) : BOOL');
 CL.AddDelphiFunction('Function GetMetaFile( p1 : PKOLChar) : HMETAFILE');
 CL.AddDelphiFunction('Function GetObject( p1 : HGDIOBJ; p2 : Integer; p3 : Pointer) : Integer');
 CL.AddDelphiFunction('Function GetOutlineTextMetrics( DC : HDC; p2 : UINT; OTMetricStructs : Pointer) : UINT');
 CL.AddDelphiFunction('Function GetTextExtentExPoint( DC : HDC; p2 : PKOLChar; p3, p4 : Integer; p5, p6 : PInteger; var p7 : TSize) : BOOL');
 CL.AddDelphiFunction('Function GetTextExtentPoint32( DC : HDC; Str : PKOLChar; Count : Integer; var Size : TSize) : BOOL');
 CL.AddDelphiFunction('Function GetTextExtentPoint( DC : HDC; Str : PKOLChar; Count : Integer; var Size : TSize) : BOOL');
 CL.AddDelphiFunction('Function GetTextFace( DC : HDC; Count : Integer; Buffer : PKOLChar) : Integer');
 CL.AddDelphiFunction('Function GetTextMetrics( DC : HDC; var TM : TTextMetric) : BOOL');
 CL.AddDelphiFunction('Function PolyTextOut( DC : HDC; const PolyTextArray, Strings : Integer) : BOOL');
 CL.AddDelphiFunction('Function RemoveFontResource( FileName : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function RemoveFontResourceEx( p1 : PKOLChar; p2 : DWORD; p3 : PDesignVector) : BOOL');
 CL.AddDelphiFunction('Function ResetDC( DC : HDC; const InitData : TDeviceMode) : HDC');
 CL.AddDelphiFunction('Function SetICMProfile( DC : HDC; Name : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function StartDoc( DC : HDC; const p2 : TDocInfo) : Integer');
 CL.AddDelphiFunction('Function TextOut( DC : HDC; X, Y : Integer; Str : PKOLChar; Count : Integer) : BOOL');
 CL.AddDelphiFunction('Function UpdateICMRegKey( p1 : DWORD; p2, p3 : PKOLChar; p4 : UINT) : BOOL');
 CL.AddDelphiFunction('Function wglUseFontBitmaps( DC : HDC; p2, p3, p4 : DWORD) : BOOL');
 CL.AddDelphiFunction('Function wglUseFontOutlines( p1 : HDC; p2, p3, p4 : DWORD; p5, p6 : Single; p7 : Integer; p8 : PGlyphMetricsFloat) : BOOL');
 CL.AddDelphiFunction('Function AnsiToOem( const lpszSrc : LPCSTR; lpszDst : LPSTR) : BOOL');
 CL.AddDelphiFunction('Function AnsiToOemBuff( lpszSrc : LPCSTR; lpszDst : LPSTR; cchDstLength : DWORD) : BOOL');
 CL.AddDelphiFunction('Function AnsiUpper( lpsz : LPSTR) : LPSTR');
 CL.AddDelphiFunction('Function AnsiUpperBuff( lpsz : LPSTR; cchLength : DWORD) : DWORD');
 CL.AddDelphiFunction('Function AnsiLower( lpsz : LPSTR) : LPSTR');
 CL.AddDelphiFunction('Function AnsiLowerBuff( lpsz : LPSTR; cchLength : DWORD) : DWORD');
 CL.AddDelphiFunction('Function AnsiNext( const lpsz : LPCSTR) : LPSTR');
 CL.AddDelphiFunction('Function AnsiPrev( const lpszStart : LPCSTR; const lpszCurrent : LPCSTR) : LPSTR');
 CL.AddDelphiFunction('Function AppendMenu( hMenu : HMENU; uFlags, uIDNewItem : UINT; lpNewItem : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function CallMsgFilter( var lpMsg : TMsg; nCode : Integer) : BOOL');
 CL.AddDelphiFunction('Function CallWindowProc( lpPrevWndFunc : TFNWndProc; hWnd : HWND; Msg : UINT; wParam : WPARAM; lParam : LPARAM) : LRESULT');
 CL.AddDelphiFunction('Function ChangeDisplaySettings( var lpDevMode : TDeviceMode; dwFlags : DWORD) : Longint');
 CL.AddDelphiFunction('Function ChangeDisplaySettingsEx( lpszDeviceName : PKOLChar; var lpDevMode : TDeviceMode; wnd : HWND; dwFlags : DWORD; lParam : Pointer) : Longint');
 CL.AddDelphiFunction('Function ChangeMenu( hMenu : HMENU; cmd : UINT; lpszNewItem : PKOLChar; cmdInsert : UINT; flags : UINT) : BOOL');
 CL.AddDelphiFunction('Function CharLower( lpsz : PKOLChar) : PKOLChar');
 CL.AddDelphiFunction('Function CharLowerBuff( lpsz : PKOLChar; cchLength : DWORD) : DWORD');
 CL.AddDelphiFunction('Function CharNext( lpsz : PKOLChar) : PKOLChar');
 CL.AddDelphiFunction('Function CharNextEx( CodePage : Word; lpCurrentChar : LPCSTR; dwFlags : DWORD) : LPSTR');
 CL.AddDelphiFunction('Function CharPrev( lpszStart : PKOLChar; lpszCurrent : PKOLChar) : PKOLChar');
 CL.AddDelphiFunction('Function CharPrevEx( CodePage : Word; lpStart, lpCurrentChar : LPCSTR; dwFlags : DWORD) : LPSTR');
 CL.AddDelphiFunction('Function CharToOem( lpszSrc : PKOLChar; lpszDst : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function CharToOemBuff( lpszSrc : PKOLChar; lpszDst : PKOLChar; cchDstLength : DWORD) : BOOL');
 CL.AddDelphiFunction('Function CharUpper( lpsz : PKOLChar) : PKOLChar');
 CL.AddDelphiFunction('Function CharUpperBuff( lpsz : PKOLChar; cchLength : DWORD) : DWORD');
 CL.AddDelphiFunction('Function CopyAcceleratorTable( hAccelSrc : HACCEL; var lpAccelDst, cAccelEntries : Integer) : Integer');
 CL.AddDelphiFunction('Function CreateAcceleratorTable( var Accel, Count : Integer) : HACCEL');
 CL.AddDelphiFunction('Function CreateDesktop( lpszDesktop, lpszDevice : PKOLChar; pDevmode : PDeviceMode; dwFlags : DWORD; dwDesiredAccess : DWORD; lpsa : PSecurityAttributes) : HDESK');
 CL.AddDelphiFunction('Function CreateDialogIndirectParam( hInstance : HINST; const lpTemplate : TDlgTemplate; hWndParent : HWND; lpDialogFunc : TFNDlgProc; dwInitParam : LPARAM) : HWND');
 CL.AddDelphiFunction('Function CreateDialogParam( hInstance : HINST; lpTemplateName : PKOLChar; hWndParent : HWND; lpDialogFunc : TFNDlgProc; dwInitParam : LPARAM) : HWND');
 CL.AddDelphiFunction('Function CreateMDIWindow( lpClassName, lpWindowName : PKOLChar; dwStyle : DWORD; X, Y, nWidth, nHeight : Integer; hWndParent : HWND; hInstance : HINST; lParam : LPARAM) : HWND');
 CL.AddDelphiFunction('Function CreateWindowEx( dwExStyle : DWORD; lpClassName : PKOLChar; lpWindowName : PKOLChar; dwStyle : DWORD; X, Y, nWidth, nHeight : Integer; hWndParent : HWND; hMenu : HMENU; hInstance : HINST; lpParam : Pointer) : HWND');
 CL.AddDelphiFunction('Function CreateWindowStation( lpwinsta : PKOLChar; dwReserved, dwDesiredAccess : DWORD; lpsa : PSecurityAttributes) : HWINSTA');
 CL.AddDelphiFunction('Function DefDlgProc( hDlg : HWND; Msg : UINT; wParam : WPARAM; lParam : LPARAM) : LRESULT');
 CL.AddDelphiFunction('Function DefFrameProc( hWnd, hWndMDIClient : HWND; uMsg : UINT; wParam : WPARAM; lParam : LPARAM) : LRESULT');
 CL.AddDelphiFunction('Function DefMDIChildProc( hWnd : HWND; uMsg : UINT; wParam : WPARAM; lParam : LPARAM) : LRESULT');
 CL.AddDelphiFunction('Function DefWindowProc( hWnd : HWND; Msg : UINT; wParam : WPARAM; lParam : LPARAM) : LRESULT');
 CL.AddDelphiFunction('Function DialogBoxIndirectParam( hInstance : HINST; const lpDialogTemplate : TDlgTemplate; hWndParent : HWND; lpDialogFunc : TFNDlgProc; dwInitParam : LPARAM) : Integer');
 CL.AddDelphiFunction('Function DialogBoxParam( hInstance : HINST; lpTemplateName : PKOLChar; hWndParent : HWND; lpDialogFunc : TFNDlgProc; dwInitParam : LPARAM) : Integer');
 CL.AddDelphiFunction('Function DispatchMessage( const lpMsg : TMsg) : Longint');
 CL.AddDelphiFunction('Function DlgDirList( hDlg : HWND; lpPathSpec : PKOLChar; nIDListBox, nIDStaticPath : Integer; uFileType : UINT) : Integer');
 CL.AddDelphiFunction('Function DlgDirListComboBox( hDlg : HWND; lpPathSpec : PKOLChar; nIDComboBox, nIDStaticPath : Integer; uFiletype : UINT) : Integer');
 CL.AddDelphiFunction('Function DlgDirSelectComboBoxEx( hDlg : HWND; lpString : PKOLChar; nCount, nIDComboBox : Integer) : BOOL');
 CL.AddDelphiFunction('Function DlgDirSelectEx( hDlg : HWND; lpString : PKOLChar; nCount, nIDListBox : Integer) : BOOL');
 CL.AddDelphiFunction('Function DrawState( DC : HDC; Brush : HBRUSH; CBFunc : TFNDrawStateProc; lData : LPARAM; wData : WPARAM; x, y, cx, cy : Integer; Flags : UINT) : BOOL');
 CL.AddDelphiFunction('Function DrawText( hDC : HDC; lpString : PKOLChar; nCount : Integer; var lpRect : TRect; uFormat : UINT) : Integer');
 CL.AddDelphiFunction('Function DrawTextEx( DC : HDC; lpchText : PKOLChar; cchText : Integer; var p4 : TRect; dwDTFormat : UINT; DTParams : PDrawTextParams) : Integer');
 CL.AddDelphiFunction('Function EnumDesktops( hwinsta : HWINSTA; lpEnumFunc : TFNDeskTopEnumProc; lParam : LPARAM) : BOOL');
 CL.AddDelphiFunction('Function EnumDisplaySettings( lpszDeviceName : PKOLChar; iModeNum : DWORD; var lpDevMode : TDeviceMode) : BOOL');
 CL.AddDelphiFunction('Function EnumDisplayDevices( Unused : Pointer; iDevNum : DWORD; var lpDisplayDevice : TDisplayDevice; dwFlags : DWORD) : BOOL');
 CL.AddDelphiFunction('Function EnumProps( hWnd : HWND; lpEnumFunc : TFNPropEnumProc) : Integer');
 CL.AddDelphiFunction('Function EnumPropsEx( hWnd : HWND; lpEnumFunc : TFNPropEnumProcEx; lParam : LPARAM) : Integer');
 CL.AddDelphiFunction('Function EnumWindowStations( lpEnumFunc : TFNWinStaEnumProc; lParam : LPARAM) : BOOL');
 CL.AddDelphiFunction('Function FindWindow( lpClassName, lpWindowName : PKOLChar) : HWND');
 CL.AddDelphiFunction('Function FindWindowEx( Parent, Child : HWND; ClassName, WindowName : PKOLChar) : HWND');
 CL.AddDelphiFunction('Function GetAltTabInfo( hwnd : HWND; iItem : Integer; var pati : TAltTabInfo; pszItemText : PKOLChar; cchItemText : UINT) : BOOL');
 CL.AddDelphiFunction('Function GetClassInfo( hInstance : HINST; lpClassName : PKOLChar; var lpWndClass : TWndClass) : BOOL');
 CL.AddDelphiFunction('Function GetClassInfoEx( Instance : HINST; Classname : PKOLChar; var WndClass : TWndClassEx) : BOOL');
 CL.AddDelphiFunction('Function GetClassLong( hWnd : HWND; nIndex : Integer) : DWORD');
 CL.AddDelphiFunction('Function GetClassName( hWnd : HWND; lpClassName : PKOLChar; nMaxCount : Integer) : Integer');
 CL.AddDelphiFunction('Function GetClipboardFormatName( format : UINT; lpszFormatName : PKOLChar; cchMaxCount : Integer) : Integer');
 CL.AddDelphiFunction('Function GetDlgItemText( hDlg : HWND; nIDDlgItem : Integer; lpString : PKOLChar; nMaxCount : Integer) : UINT');
 CL.AddDelphiFunction('Function GetKeyNameText( lParam : Longint; lpString : PKOLChar; nSize : Integer) : Integer');
 CL.AddDelphiFunction('Function GetKeyboardLayoutName( pwszKLID : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function GetMenuItemInfo( p1 : HMENU; p2 : UINT; p3 : BOOL; var p4 : TMenuItemInfo) : BOOL');
 CL.AddDelphiFunction('Function GetMenuString( hMenu : HMENU; uIDItem : UINT; lpString : PKOLChar; nMaxCount : Integer; uFlag : UINT) : Integer');
 CL.AddDelphiFunction('Function GetMessage( var lpMsg : TMsg; hWnd : HWND; wMsgFilterMin, wMsgFilterMax : UINT) : BOOL');
 CL.AddDelphiFunction('Function GetProp( hWnd : HWND; lpString : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function GetTabbedTextExtent( hDC : HDC; lpString : PKOLChar; nCount, nTabPositions : Integer; var lpnTabStopPositions) : DWORD');
 CL.AddDelphiFunction('Function GetUserObjectInformation( hObj : THandle; nIndex : Integer; pvInfo : Pointer; nLength : DWORD; var lpnLengthNeeded : DWORD) : BOOL');
 CL.AddDelphiFunction('Function GetWindowLong( hWnd : HWND; nIndex : Integer) : Longint');
 CL.AddDelphiFunction('Function GetWindowModuleFileName( hwnd : HWND; pszFileName : PKOLChar; cchFileNameMax : UINT) : UINT');
 CL.AddDelphiFunction('Function GetWindowText( hWnd : HWND; lpString : PKOLChar; nMaxCount : Integer) : Integer');
 CL.AddDelphiFunction('Function GetWindowTextLength( hWnd : HWND) : Integer');
 CL.AddDelphiFunction('Function GrayString( hDC : HDC; hBrush : HBRUSH; lpOutputFunc : TFNGrayStringProc; lpData : LPARAM; nCount, X, Y, nWidth, nHeight : Integer) : BOOL');
 CL.AddDelphiFunction('Function InsertMenu( hMenu : HMENU; uPosition, uFlags, uIDNewItem : UINT; lpNewItem : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function InsertMenuItem( p1 : HMENU; p2 : UINT; p3 : BOOL; const p4 : TMenuItemInfo) : BOOL');
 CL.AddDelphiFunction('Function IsCharAlpha( ch : KOLChar) : BOOL');
 CL.AddDelphiFunction('Function IsCharAlphaNumeric( ch : KOLChar) : BOOL');
 CL.AddDelphiFunction('Function IsCharLower( ch : KOLChar) : BOOL');
 CL.AddDelphiFunction('Function IsCharUpper( ch : KOLChar) : BOOL');
 CL.AddDelphiFunction('Function IsDialogMessage( hDlg : HWND; var lpMsg : TMsg) : BOOL');
 CL.AddDelphiFunction('Function LoadAccelerators( hInstance : HINST; lpTableName : PKOLChar) : HACCEL');
 CL.AddDelphiFunction('Function LoadBitmap( hInstance : HINST; lpBitmapName : PKOLChar) : HBITMAP');
 CL.AddDelphiFunction('Function LoadCursor( hInstance : HINST; lpCursorName : PKOLChar) : HCURSOR');
 CL.AddDelphiFunction('Function LoadCursorFromFile( lpFileName : PKOLChar) : HCURSOR');
 CL.AddDelphiFunction('Function LoadIcon( hInstance : HINST; lpIconName : PKOLChar) : HICON');
 CL.AddDelphiFunction('Function LoadImage( hInst : HINST; ImageName : PKOLChar; ImageType : UINT; X, Y : Integer; Flags : UINT) : THandle');
 CL.AddDelphiFunction('Function LoadKeyboardLayout( pwszKLID : PKOLChar; Flags : UINT) : HKL');
 CL.AddDelphiFunction('Function LoadMenu( hInstance : HINST; lpMenuName : PKOLChar) : HMENU');
 CL.AddDelphiFunction('Function LoadMenuIndirect( lpMenuTemplate : Pointer) : HMENU');
 CL.AddDelphiFunction('Function LoadString( hInstance : HINST; uID : UINT; lpBuffer : PKOLChar; nBufferMax : Integer) : Integer');
 CL.AddDelphiFunction('Function MapVirtualKey( uCode, uMapType : UINT) : UINT');
 CL.AddDelphiFunction('Function MapVirtualKeyEx( uCode, uMapType : UINT; dwhkl : HKL) : UINT');
 CL.AddDelphiFunction('Function MessageBox( hWnd : HWND; lpText, lpCaption : PKOLChar; uType : UINT) : Integer');
 CL.AddDelphiFunction('Function MessageBoxEx( hWnd : HWND; lpText, lpCaption : PKOLChar; uType : UINT; wLanguageId : Word) : Integer');
 CL.AddDelphiFunction('Function MessageBoxIndirect( const MsgBoxParams : TMsgBoxParams) : BOOL');
 CL.AddDelphiFunction('Function ModifyMenu( hMnu : HMENU; uPosition, uFlags, uIDNewItem : UINT; lpNewItem : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function OemToAnsi( const lpszSrc : LPCSTR; lpszDst : LPSTR) : BOOL');
 CL.AddDelphiFunction('Function OemToAnsiBuff( lpszSrc : LPCSTR; lpszDst : LPSTR; cchDstLength : DWORD) : BOOL');
 CL.AddDelphiFunction('Function OemToChar( lpszSrc : PKOLChar; lpszDst : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function OemToCharBuff( lpszSrc : PKOLChar; lpszDst : PKOLChar; cchDstLength : DWORD) : BOOL');
 CL.AddDelphiFunction('Function OpenDesktop( lpszDesktop : PKOLChar; dwFlags : DWORD; fInherit : BOOL; dwDesiredAccess : DWORD) : HDESK');
 CL.AddDelphiFunction('Function OpenWindowStation( lpszWinSta : PKOLChar; fInherit : BOOL; dwDesiredAccess : DWORD) : HWINSTA');
 CL.AddDelphiFunction('Function PeekMessage( var lpMsg : TMsg; hWnd : HWND; wMsgFilterMin, wMsgFilterMax, wRemoveMsg : UINT) : BOOL');
 CL.AddDelphiFunction('Function PostMessage( hWnd : HWND; Msg : UINT; wParam : WPARAM; lParam : LPARAM) : BOOL');
 CL.AddDelphiFunction('Function PostThreadMessage( idThread : DWORD; Msg : UINT; wParam : WPARAM; lParam : LPARAM) : BOOL');
 CL.AddDelphiFunction('Function RealGetWindowClass( hwnd : HWND; pszType : PKOLChar; cchType : UINT) : UINT');
 CL.AddDelphiFunction('Function RegisterClass( const lpWndClass : TWndClass) : ATOM');
 CL.AddDelphiFunction('Function RegisterClassEx( const WndClass : TWndClassEx) : ATOM');
 CL.AddDelphiFunction('Function RegisterClipboardFormat( lpszFormat : PKOLChar) : UINT');
 CL.AddDelphiFunction('Function RegisterDeviceNotification( hRecipient : THandle; NotificationFilter : Pointer; Flags : DWORD) : HDEVNOTIFY');
 CL.AddDelphiFunction('Function RegisterWindowMessage( lpString : PKOLChar) : UINT');
 CL.AddDelphiFunction('Function RemoveProp( hWnd : HWND; lpString : PKOLChar) : THandle');
 CL.AddDelphiFunction('Function SendDlgItemMessage( hDlg : HWND; nIDDlgItem : Integer; Msg : UINT; wParam : WPARAM; lParam : LPARAM) : Longint');
 CL.AddDelphiFunction('Function SendMessage( hWnd : HWND; Msg : UINT; wParam : WPARAM; lParam : LPARAM) : LRESULT');
 CL.AddDelphiFunction('Function SendMessageCallback( hWnd : HWND; Msg : UINT; wParam : WPARAM; lParam : LPARAM; lpResultCallBack : TFNSendAsyncProc; dwData : DWORD) : BOOL');
 CL.AddDelphiFunction('Function SendMessageTimeout( hWnd : HWND; Msg : UINT; wParam : WPARAM; lParam : LPARAM; fuFlags, uTimeout : UINT; var lpdwResult : DWORD) : LRESULT');
 CL.AddDelphiFunction('Function SendNotifyMessage( hWnd : HWND; Msg : UINT; wParam : WPARAM; lParam : LPARAM) : BOOL');
 CL.AddDelphiFunction('Function SetClassLong( hWnd : HWND; nIndex : Integer; dwNewLong : Longint) : DWORD');
 CL.AddDelphiFunction('Function SetDlgItemText( hDlg : HWND; nIDDlgItem : Integer; lpString : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function SetMenuItemInfo( p1 : HMENU; p2 : UINT; p3 : BOOL; const p4 : TMenuItemInfo) : BOOL');
 CL.AddDelphiFunction('Function SetProp( hWnd : HWND; lpString : PKOLChar; hData : THandle) : BOOL');
 CL.AddDelphiFunction('Function SetUserObjectInformation( hObj : THandle; nIndex : Integer; pvInfo : Pointer; nLength : DWORD) : BOOL');
 CL.AddDelphiFunction('Function SetWindowLong( hWnd : HWND; nIndex : Integer; dwNewLong : Longint) : Longint');
 CL.AddDelphiFunction('Function SetWindowText( hWnd : HWND; lpString : PKOLChar) : BOOL');
 CL.AddDelphiFunction('Function SetWindowsHook( nFilterType : Integer; pfnFilterProc : TFNHookProc) : HHOOK');
 CL.AddDelphiFunction('Function SetWindowsHookEx( idHook : Integer; lpfn : TFNHookProc; hmod : HINST; dwThreadId : DWORD) : HHOOK');
 CL.AddDelphiFunction('Function SystemParametersInfo( uiAction, uiParam : UINT; pvParam : Pointer; fWinIni : UINT) : BOOL');
 CL.AddDelphiFunction('Function TabbedTextOut( hDC : HDC; X, Y : Integer; lpString : PKOLChar; nCount, nTabPositions : Integer; var lpnTabStopPositions, nTabOrigin : Integer) : Longint');
 CL.AddDelphiFunction('Function TranslateAccelerator( hWnd : HWND; hAccTable : HACCEL; var lpMsg : TMsg) : Integer');
 CL.AddDelphiFunction('Function UnregisterClass( lpClassName : PKOLChar; hInstance : HINST) : BOOL');
 CL.AddDelphiFunction('Function VkKeyScan( ch : KOLChar) : SHORT');
 CL.AddDelphiFunction('Function VkKeyScanEx( ch : KOLChar; dwhkl : HKL) : SHORT');
 CL.AddDelphiFunction('Function WinHelp( hWndMain : HWND; lpszHelp : PKOLChar; uCommand : UINT; dwData : DWORD) : BOOL');
 CL.AddDelphiFunction('Function wsprintf( Output : PKOLChar; Format : PKOLChar) : Integer');
 CL.AddDelphiFunction('Function wvsprintf( Output : PKOLChar; Format : PKOLChar; arglist : va_list) : Integer');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
Function GetEnvironmentVariable_P( lpName : PKOLChar; lpBuffer : PKOLChar; nSize : DWORD) : DWORD;
Begin Result := advapi32mX.GetEnvironmentVariable(lpName, lpBuffer, nSize); END;

(*----------------------------------------------------------------------------*)
procedure RIRegister_advapi32mX_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@AbortSystemShutdown, 'AbortSystemShutdown', CdStdCall);
 S.RegisterDelphiFunction(@AccessCheckAndAuditAlarm, 'AccessCheckAndAuditAlarm', CdStdCall);
 S.RegisterDelphiFunction(@AccessCheckByTypeAndAuditAlarm, 'AccessCheckByTypeAndAuditAlarm', CdStdCall);
 S.RegisterDelphiFunction(@AccessCheckByTypeResultListAndAuditAlarm, 'AccessCheckByTypeResultListAndAuditAlarm', CdStdCall);
 S.RegisterDelphiFunction(@BackupEventLog, 'BackupEventLog', CdStdCall);
 S.RegisterDelphiFunction(@ClearEventLog, 'ClearEventLog', CdStdCall);
 S.RegisterDelphiFunction(@CreateProcessAsUser, 'CreateProcessAsUser', CdStdCall);
 S.RegisterDelphiFunction(@GetCurrentHwProfile, 'GetCurrentHwProfile', CdStdCall);
 S.RegisterDelphiFunction(@GetFileSecurity, 'GetFileSecurity', CdStdCall);
 S.RegisterDelphiFunction(@GetUserName, 'GetUserName', CdStdCall);
 S.RegisterDelphiFunction(@InitiateSystemShutdown, 'InitiateSystemShutdown', CdStdCall);
 S.RegisterDelphiFunction(@LogonUser, 'LogonUser', CdStdCall);
 S.RegisterDelphiFunction(@LookupAccountName, 'LookupAccountName', CdStdCall);
 S.RegisterDelphiFunction(@LookupAccountSid, 'LookupAccountSid', CdStdCall);
 S.RegisterDelphiFunction(@LookupPrivilegeDisplayName, 'LookupPrivilegeDisplayName', CdStdCall);
 S.RegisterDelphiFunction(@LookupPrivilegeName, 'LookupPrivilegeName', CdStdCall);
 S.RegisterDelphiFunction(@LookupPrivilegeValue, 'LookupPrivilegeValue', CdStdCall);
 S.RegisterDelphiFunction(@ObjectCloseAuditAlarm, 'ObjectCloseAuditAlarm', CdStdCall);
 S.RegisterDelphiFunction(@ObjectDeleteAuditAlarm, 'ObjectDeleteAuditAlarm', CdStdCall);
 S.RegisterDelphiFunction(@ObjectOpenAuditAlarm, 'ObjectOpenAuditAlarm', CdStdCall);
 S.RegisterDelphiFunction(@ObjectPrivilegeAuditAlarm, 'ObjectPrivilegeAuditAlarm', CdStdCall);
 S.RegisterDelphiFunction(@OpenBackupEventLog, 'OpenBackupEventLog', CdStdCall);
 S.RegisterDelphiFunction(@OpenEventLog, 'OpenEventLog', CdStdCall);
 S.RegisterDelphiFunction(@PrivilegedServiceAuditAlarm, 'PrivilegedServiceAuditAlarm', CdStdCall);
 S.RegisterDelphiFunction(@ReadEventLog, 'ReadEventLog', CdStdCall);
 S.RegisterDelphiFunction(@RegConnectRegistry, 'RegConnectRegistry', CdStdCall);
 S.RegisterDelphiFunction(@RegCreateKey, 'RegCreateKey', CdStdCall);
 S.RegisterDelphiFunction(@RegCreateKeyEx, 'RegCreateKeyEx', CdStdCall);
 S.RegisterDelphiFunction(@RegDeleteKey, 'RegDeleteKey', CdStdCall);
 S.RegisterDelphiFunction(@RegDeleteValue, 'RegDeleteValue', CdStdCall);
 S.RegisterDelphiFunction(@RegEnumKeyEx, 'RegEnumKeyEx', CdStdCall);
 S.RegisterDelphiFunction(@RegEnumKey, 'RegEnumKey', CdStdCall);
 S.RegisterDelphiFunction(@RegEnumValue, 'RegEnumValue', CdStdCall);
 S.RegisterDelphiFunction(@RegLoadKey, 'RegLoadKey', CdStdCall);
 S.RegisterDelphiFunction(@RegOpenKey, 'RegOpenKey', CdStdCall);
 S.RegisterDelphiFunction(@RegOpenKeyEx, 'RegOpenKeyEx', CdStdCall);
 S.RegisterDelphiFunction(@RegQueryInfoKey, 'RegQueryInfoKey', CdStdCall);
 S.RegisterDelphiFunction(@RegQueryMultipleValues, 'RegQueryMultipleValues', CdStdCall);
 S.RegisterDelphiFunction(@RegQueryValue, 'RegQueryValue', CdStdCall);
 S.RegisterDelphiFunction(@RegQueryValueEx, 'RegQueryValueEx', CdStdCall);
 S.RegisterDelphiFunction(@RegReplaceKey, 'RegReplaceKey', CdStdCall);
 S.RegisterDelphiFunction(@RegRestoreKey, 'RegRestoreKey', CdStdCall);
 S.RegisterDelphiFunction(@RegSaveKey, 'RegSaveKey', CdStdCall);
 S.RegisterDelphiFunction(@RegSetValue, 'RegSetValue', CdStdCall);
 S.RegisterDelphiFunction(@RegSetValueEx, 'RegSetValueEx', CdStdCall);
 S.RegisterDelphiFunction(@RegUnLoadKey, 'RegUnLoadKey', CdStdCall);
 S.RegisterDelphiFunction(@RegisterEventSource, 'RegisterEventSource', CdStdCall);
 S.RegisterDelphiFunction(@ReportEvent, 'ReportEvent', CdStdCall);
 S.RegisterDelphiFunction(@SetFileSecurity, 'SetFileSecurity', CdStdCall);
 S.RegisterDelphiFunction(@AddAtom, 'AddAtom', CdStdCall);
 S.RegisterDelphiFunction(@BeginUpdateResource, 'BeginUpdateResource', CdStdCall);
 S.RegisterDelphiFunction(@BuildCommDCB, 'BuildCommDCB', CdStdCall);
 S.RegisterDelphiFunction(@BuildCommDCBAndTimeouts, 'BuildCommDCBAndTimeouts', CdStdCall);
 S.RegisterDelphiFunction(@CallNamedPipe, 'CallNamedPipe', CdStdCall);
 S.RegisterDelphiFunction(@CommConfigDialog, 'CommConfigDialog', CdStdCall);
 S.RegisterDelphiFunction(@CompareString, 'CompareString', CdStdCall);
 S.RegisterDelphiFunction(@CopyFile, 'CopyFile', CdStdCall);
 S.RegisterDelphiFunction(@CopyFileEx, 'CopyFileEx', CdStdCall);
 S.RegisterDelphiFunction(@CreateDirectory, 'CreateDirectory', CdStdCall);
 S.RegisterDelphiFunction(@CreateDirectoryEx, 'CreateDirectoryEx', CdStdCall);
 S.RegisterDelphiFunction(@CreateEvent, 'CreateEvent', CdStdCall);
 S.RegisterDelphiFunction(@CreateFile, 'CreateFile', CdStdCall);
 S.RegisterDelphiFunction(@CreateFileMapping, 'CreateFileMapping', CdStdCall);
 S.RegisterDelphiFunction(@CreateHardLink, 'CreateHardLink', CdStdCall);
 S.RegisterDelphiFunction(@CreateMailslot, 'CreateMailslot', CdStdCall);
 S.RegisterDelphiFunction(@CreateNamedPipe, 'CreateNamedPipe', CdStdCall);
 S.RegisterDelphiFunction(@CreateProcess, 'CreateProcess', CdStdCall);
 S.RegisterDelphiFunction(@CreateSemaphore, 'CreateSemaphore', CdStdCall);
 S.RegisterDelphiFunction(@CreateWaitableTimer, 'CreateWaitableTimer', CdStdCall);
 S.RegisterDelphiFunction(@DefineDosDevice, 'DefineDosDevice', CdStdCall);
 S.RegisterDelphiFunction(@DeleteFile, 'DeleteFile', CdStdCall);
 S.RegisterDelphiFunction(@EndUpdateResource, 'EndUpdateResource', CdStdCall);
 S.RegisterDelphiFunction(@EnumCalendarInfo, 'EnumCalendarInfo', CdStdCall);
 S.RegisterDelphiFunction(@EnumDateFormats, 'EnumDateFormats', CdStdCall);
 S.RegisterDelphiFunction(@EnumResourceLanguages, 'EnumResourceLanguages', CdStdCall);
 S.RegisterDelphiFunction(@EnumResourceNames, 'EnumResourceNames', CdStdCall);
 S.RegisterDelphiFunction(@EnumResourceTypes, 'EnumResourceTypes', CdStdCall);
 S.RegisterDelphiFunction(@EnumSystemCodePages, 'EnumSystemCodePages', CdStdCall);
 S.RegisterDelphiFunction(@EnumSystemLocales, 'EnumSystemLocales', CdStdCall);
 S.RegisterDelphiFunction(@EnumTimeFormats, 'EnumTimeFormats', CdStdCall);
 S.RegisterDelphiFunction(@ExpandEnvironmentStrings, 'ExpandEnvironmentStrings', CdStdCall);
 S.RegisterDelphiFunction(@FatalAppExit, 'FatalAppExit', CdStdCall);
 S.RegisterDelphiFunction(@FillConsoleOutputCharacter, 'FillConsoleOutputCharacter', CdStdCall);
 S.RegisterDelphiFunction(@FindAtom, 'FindAtom', CdStdCall);
 S.RegisterDelphiFunction(@FindFirstChangeNotification, 'FindFirstChangeNotification', CdStdCall);
 S.RegisterDelphiFunction(@FindFirstFile, 'FindFirstFile', CdStdCall);
 S.RegisterDelphiFunction(@FindFirstFileEx, 'FindFirstFileEx', CdStdCall);
 S.RegisterDelphiFunction(@FindNextFile, 'FindNextFile', CdStdCall);
 S.RegisterDelphiFunction(@FindResource, 'FindResource', CdStdCall);
 S.RegisterDelphiFunction(@FindResourceEx, 'FindResourceEx', CdStdCall);
 S.RegisterDelphiFunction(@FoldString, 'FoldString', CdStdCall);
 S.RegisterDelphiFunction(@FormatMessage, 'FormatMessage', CdStdCall);
 S.RegisterDelphiFunction(@FreeEnvironmentStrings, 'FreeEnvironmentStrings', CdStdCall);
 S.RegisterDelphiFunction(@GetAtomName, 'GetAtomName', CdStdCall);
 S.RegisterDelphiFunction(@GetBinaryType, 'GetBinaryType', CdStdCall);
 S.RegisterDelphiFunction(@GetCommandLine, 'GetCommandLine', CdStdCall);
 S.RegisterDelphiFunction(@GetCompressedFileSize, 'GetCompressedFileSize', CdStdCall);
 S.RegisterDelphiFunction(@GetComputerName, 'GetComputerName', CdStdCall);
 S.RegisterDelphiFunction(@GetConsoleTitle, 'GetConsoleTitle', CdStdCall);
 S.RegisterDelphiFunction(@GetCurrencyFormat, 'GetCurrencyFormat', CdStdCall);
 S.RegisterDelphiFunction(@GetCurrentDirectory, 'GetCurrentDirectory', CdStdCall);
 S.RegisterDelphiFunction(@GetDateFormat, 'GetDateFormat', CdStdCall);
 S.RegisterDelphiFunction(@GetDefaultCommConfig, 'GetDefaultCommConfig', CdStdCall);
 S.RegisterDelphiFunction(@GetDiskFreeSpace, 'GetDiskFreeSpace', CdStdCall);
 S.RegisterDelphiFunction(@GetDiskFreeSpaceEx, 'GetDiskFreeSpaceEx', CdStdCall);
 S.RegisterDelphiFunction(@GetDriveType, 'GetDriveType', CdStdCall);
 S.RegisterDelphiFunction(@GetEnvironmentStrings, 'GetEnvironmentStrings', CdStdCall);
 S.RegisterDelphiFunction(@GetEnvironmentVariable, 'GetEnvironmentVariable', CdStdCall);
 S.RegisterDelphiFunction(@GetFileAttributes, 'GetFileAttributes', CdStdCall);
 S.RegisterDelphiFunction(@GetFileAttributesEx, 'GetFileAttributesEx', CdStdCall);
 S.RegisterDelphiFunction(@GetFullPathName, 'GetFullPathName', CdStdCall);
 S.RegisterDelphiFunction(@GetLocaleInfo, 'GetLocaleInfo', CdStdCall);
 S.RegisterDelphiFunction(@GetLogicalDriveStrings, 'GetLogicalDriveStrings', CdStdCall);
 S.RegisterDelphiFunction(@GetModuleFileName, 'GetModuleFileName', CdStdCall);
 S.RegisterDelphiFunction(@GetModuleHandle, 'GetModuleHandle', CdStdCall);
 S.RegisterDelphiFunction(@GetNamedPipeHandleState, 'GetNamedPipeHandleState', CdStdCall);
 S.RegisterDelphiFunction(@GetNumberFormat, 'GetNumberFormat', CdStdCall);
 S.RegisterDelphiFunction(@GetPrivateProfileInt, 'GetPrivateProfileInt', CdStdCall);
 S.RegisterDelphiFunction(@GetPrivateProfileSection, 'GetPrivateProfileSection', CdStdCall);
 S.RegisterDelphiFunction(@GetPrivateProfileSectionNames, 'GetPrivateProfileSectionNames', CdStdCall);
 S.RegisterDelphiFunction(@GetPrivateProfileString, 'GetPrivateProfileString', CdStdCall);
 S.RegisterDelphiFunction(@GetProfileInt, 'GetProfileInt', CdStdCall);
 S.RegisterDelphiFunction(@GetProfileSection, 'GetProfileSection', CdStdCall);
 S.RegisterDelphiFunction(@GetProfileString, 'GetProfileString', CdStdCall);
 S.RegisterDelphiFunction(@GetShortPathName, 'GetShortPathName', CdStdCall);
 S.RegisterDelphiFunction(@GetStartupInfo, 'GetStartupInfo', CdStdCall);
 S.RegisterDelphiFunction(@GetStringTypeEx, 'GetStringTypeEx', CdStdCall);
 S.RegisterDelphiFunction(@GetSystemDirectory, 'GetSystemDirectory', CdStdCall);
 S.RegisterDelphiFunction(@GetTempFileName, 'GetTempFileName', CdStdCall);
 S.RegisterDelphiFunction(@GetTempPath, 'GetTempPath', CdStdCall);
 S.RegisterDelphiFunction(@GetTimeFormat, 'GetTimeFormat', CdStdCall);
 S.RegisterDelphiFunction(@GetVersionEx, 'GetVersionEx', CdStdCall);
 S.RegisterDelphiFunction(@GetVolumeInformation, 'GetVolumeInformation', CdStdCall);
 S.RegisterDelphiFunction(@GetWindowsDirectory, 'GetWindowsDirectory', CdStdCall);
 S.RegisterDelphiFunction(@GlobalAddAtom, 'GlobalAddAtom', CdStdCall);
 S.RegisterDelphiFunction(@GlobalFindAtom, 'GlobalFindAtom', CdStdCall);
 S.RegisterDelphiFunction(@GlobalGetAtomName, 'GlobalGetAtomName', CdStdCall);
 S.RegisterDelphiFunction(@IsBadStringPtr, 'IsBadStringPtr', CdStdCall);
 S.RegisterDelphiFunction(@LCMapString, 'LCMapString', CdStdCall);
 S.RegisterDelphiFunction(@LoadLibrary, 'LoadLibrary', CdStdCall);
 S.RegisterDelphiFunction(@LoadLibraryEx, 'LoadLibraryEx', CdStdCall);
 S.RegisterDelphiFunction(@MoveFile, 'MoveFile', CdStdCall);
 S.RegisterDelphiFunction(@MoveFileEx, 'MoveFileEx', CdStdCall);
 S.RegisterDelphiFunction(@MoveFileWithProgress, 'MoveFileWithProgress', CdStdCall);
 S.RegisterDelphiFunction(@OpenEvent, 'OpenEvent', CdStdCall);
 S.RegisterDelphiFunction(@OpenFileMapping, 'OpenFileMapping', CdStdCall);
 S.RegisterDelphiFunction(@OpenMutex, 'OpenMutex', CdStdCall);
 S.RegisterDelphiFunction(@OpenSemaphore, 'OpenSemaphore', CdStdCall);
 S.RegisterDelphiFunction(@OpenWaitableTimer, 'OpenWaitableTimer', CdStdCall);
 S.RegisterDelphiFunction(@OutputDebugString, 'OutputDebugString', CdStdCall);
 S.RegisterDelphiFunction(@PeekConsoleInput, 'PeekConsoleInput', CdStdCall);
 S.RegisterDelphiFunction(@QueryDosDevice, 'QueryDosDevice', CdStdCall);
 S.RegisterDelphiFunction(@QueryRecoveryAgents, 'QueryRecoveryAgents', CdStdCall);
 S.RegisterDelphiFunction(@ReadConsole, 'ReadConsole', CdStdCall);
 S.RegisterDelphiFunction(@ReadConsoleInput, 'ReadConsoleInput', CdStdCall);
 S.RegisterDelphiFunction(@ReadConsoleOutput, 'ReadConsoleOutput', CdStdCall);
 S.RegisterDelphiFunction(@ReadConsoleOutputCharacter, 'ReadConsoleOutputCharacter', CdStdCall);
 S.RegisterDelphiFunction(@RemoveDirectory, 'RemoveDirectory', CdStdCall);
 S.RegisterDelphiFunction(@ScrollConsoleScreenBuffer, 'ScrollConsoleScreenBuffer', CdStdCall);
 S.RegisterDelphiFunction(@SearchPath, 'SearchPath', CdStdCall);
 S.RegisterDelphiFunction(@SetComputerName, 'SetComputerName', CdStdCall);
 S.RegisterDelphiFunction(@SetConsoleTitle, 'SetConsoleTitle', CdStdCall);
 S.RegisterDelphiFunction(@SetCurrentDirectory, 'SetCurrentDirectory', CdStdCall);
 S.RegisterDelphiFunction(@SetDefaultCommConfig, 'SetDefaultCommConfig', CdStdCall);
 S.RegisterDelphiFunction(@SetEnvironmentVariable, 'SetEnvironmentVariable', CdStdCall);
 S.RegisterDelphiFunction(@SetFileAttributes, 'SetFileAttributes', CdStdCall);
 S.RegisterDelphiFunction(@SetLocaleInfo, 'SetLocaleInfo', CdStdCall);
 S.RegisterDelphiFunction(@SetVolumeLabel, 'SetVolumeLabel', CdStdCall);
 S.RegisterDelphiFunction(@UpdateResource, 'UpdateResource', CdStdCall);
 S.RegisterDelphiFunction(@VerLanguageName, 'VerLanguageName', CdStdCall);
 S.RegisterDelphiFunction(@WaitNamedPipe, 'WaitNamedPipe', CdStdCall);
 S.RegisterDelphiFunction(@WriteConsole, 'WriteConsole', CdStdCall);
 S.RegisterDelphiFunction(@WriteConsoleInput, 'WriteConsoleInput', CdStdCall);
 S.RegisterDelphiFunction(@WriteConsoleOutput, 'WriteConsoleOutput', CdStdCall);
 S.RegisterDelphiFunction(@WriteConsoleOutputCharacter, 'WriteConsoleOutputCharacter', CdStdCall);
 S.RegisterDelphiFunction(@WritePrivateProfileSection, 'WritePrivateProfileSection', CdStdCall);
 S.RegisterDelphiFunction(@WritePrivateProfileString, 'WritePrivateProfileString', CdStdCall);
 S.RegisterDelphiFunction(@WriteProfileSection, 'WriteProfileSection', CdStdCall);
 S.RegisterDelphiFunction(@WriteProfileString, 'WriteProfileString', CdStdCall);
 S.RegisterDelphiFunction(@lstrcat, 'lstrcat', CdStdCall);
 S.RegisterDelphiFunction(@lstrcmp, 'lstrcmp', CdStdCall);
 S.RegisterDelphiFunction(@lstrcmpi, 'lstrcmpi', CdStdCall);
 S.RegisterDelphiFunction(@lstrcpy, 'lstrcpy', CdStdCall);
 S.RegisterDelphiFunction(@lstrcpyn, 'lstrcpyn', CdStdCall);
 S.RegisterDelphiFunction(@lstrlen, 'lstrlen', CdStdCall);
 S.RegisterDelphiFunction(@MultinetGetConnectionPerformance, 'MultinetGetConnectionPerformance', CdStdCall);
 S.RegisterDelphiFunction(@WNetAddConnection2, 'WNetAddConnection2', CdStdCall);
 S.RegisterDelphiFunction(@WNetAddConnection3, 'WNetAddConnection3', CdStdCall);
 S.RegisterDelphiFunction(@WNetAddConnection, 'WNetAddConnection', CdStdCall);
 S.RegisterDelphiFunction(@WNetCancelConnection2, 'WNetCancelConnection2', CdStdCall);
 S.RegisterDelphiFunction(@WNetCancelConnection, 'WNetCancelConnection', CdStdCall);
 S.RegisterDelphiFunction(@WNetConnectionDialog1, 'WNetConnectionDialog1', CdStdCall);
 S.RegisterDelphiFunction(@WNetDisconnectDialog1, 'WNetDisconnectDialog1', CdStdCall);
 S.RegisterDelphiFunction(@WNetEnumResource, 'WNetEnumResource', CdStdCall);
 S.RegisterDelphiFunction(@WNetGetConnection, 'WNetGetConnection', CdStdCall);
 S.RegisterDelphiFunction(@WNetGetLastError, 'WNetGetLastError', CdStdCall);
 S.RegisterDelphiFunction(@WNetGetNetworkInformation, 'WNetGetNetworkInformation', CdStdCall);
 S.RegisterDelphiFunction(@WNetGetProviderName, 'WNetGetProviderName', CdStdCall);
 S.RegisterDelphiFunction(@WNetGetResourceParent, 'WNetGetResourceParent', CdStdCall);
 S.RegisterDelphiFunction(@WNetGetUniversalName, 'WNetGetUniversalName', CdStdCall);
 S.RegisterDelphiFunction(@WNetGetUser, 'WNetGetUser', CdStdCall);
 S.RegisterDelphiFunction(@WNetOpenEnum, 'WNetOpenEnum', CdStdCall);
 S.RegisterDelphiFunction(@WNetSetConnection, 'WNetSetConnection', CdStdCall);
 S.RegisterDelphiFunction(@WNetUseConnection, 'WNetUseConnection', CdStdCall);
 S.RegisterDelphiFunction(@GetFileVersionInfo, 'GetFileVersionInfo', CdStdCall);
 S.RegisterDelphiFunction(@GetFileVersionInfoSize, 'GetFileVersionInfoSize', CdStdCall);
 S.RegisterDelphiFunction(@VerFindFile, 'VerFindFile', CdStdCall);
 S.RegisterDelphiFunction(@VerInstallFile, 'VerInstallFile', CdStdCall);
 S.RegisterDelphiFunction(@VerQueryValue, 'VerQueryValue', CdStdCall);
 S.RegisterDelphiFunction(@GetPrivateProfileStruct, 'GetPrivateProfileStruct', CdStdCall);
 S.RegisterDelphiFunction(@WritePrivateProfileStruct, 'WritePrivateProfileStruct', CdStdCall);
 S.RegisterDelphiFunction(@AddFontResource, 'AddFontResource', CdStdCall);
 S.RegisterDelphiFunction(@AddFontResourceEx, 'AddFontResourceEx', CdStdCall);
 S.RegisterDelphiFunction(@CopyEnhMetaFile, 'CopyEnhMetaFile', CdStdCall);
 S.RegisterDelphiFunction(@CopyMetaFile, 'CopyMetaFile', CdStdCall);
 S.RegisterDelphiFunction(@CreateColorSpace, 'CreateColorSpace', CdStdCall);
 S.RegisterDelphiFunction(@CreateDC, 'CreateDC', CdStdCall);
 S.RegisterDelphiFunction(@CreateEnhMetaFile, 'CreateEnhMetaFile', CdStdCall);
 S.RegisterDelphiFunction(@CreateFont, 'CreateFont', CdStdCall);
 S.RegisterDelphiFunction(@CreateFontIndirect, 'CreateFontIndirect', CdStdCall);
 S.RegisterDelphiFunction(@CreateFontIndirectEx, 'CreateFontIndirectEx', CdStdCall);
 S.RegisterDelphiFunction(@CreateIC, 'CreateIC', CdStdCall);
 S.RegisterDelphiFunction(@CreateMetaFile, 'CreateMetaFile', CdStdCall);
 S.RegisterDelphiFunction(@CreateScalableFontResource, 'CreateScalableFontResource', CdStdCall);
 S.RegisterDelphiFunction(@DeviceCapabilities, 'DeviceCapabilities', CdStdCall);
 S.RegisterDelphiFunction(@EnumFontFamilies, 'EnumFontFamilies', CdStdCall);
 S.RegisterDelphiFunction(@EnumFontFamiliesEx, 'EnumFontFamiliesEx', CdStdCall);
 S.RegisterDelphiFunction(@EnumFonts, 'EnumFonts', CdStdCall);
 S.RegisterDelphiFunction(@EnumICMProfiles, 'EnumICMProfiles', CdStdCall);
 S.RegisterDelphiFunction(@ExtTextOut, 'ExtTextOut', CdStdCall);
 S.RegisterDelphiFunction(@GetCharABCWidths, 'GetCharABCWidths', CdStdCall);
 S.RegisterDelphiFunction(@GetCharABCWidthsFloat, 'GetCharABCWidthsFloat', CdStdCall);
 S.RegisterDelphiFunction(@GetCharWidth32, 'GetCharWidth32', CdStdCall);
 S.RegisterDelphiFunction(@GetCharWidth, 'GetCharWidth', CdStdCall);
 S.RegisterDelphiFunction(@GetCharWidthFloat, 'GetCharWidthFloat', CdStdCall);
 S.RegisterDelphiFunction(@GetCharacterPlacement, 'GetCharacterPlacement', CdStdCall);
 S.RegisterDelphiFunction(@GetEnhMetaFile, 'GetEnhMetaFile', CdStdCall);
 S.RegisterDelphiFunction(@GetEnhMetaFileDescription, 'GetEnhMetaFileDescription', CdStdCall);
 S.RegisterDelphiFunction(@GetGlyphIndices, 'GetGlyphIndices', CdStdCall);
 S.RegisterDelphiFunction(@GetGlyphOutline, 'GetGlyphOutline', CdStdCall);
 S.RegisterDelphiFunction(@GetICMProfile, 'GetICMProfile', CdStdCall);
 S.RegisterDelphiFunction(@GetLogColorSpace, 'GetLogColorSpace', CdStdCall);
 S.RegisterDelphiFunction(@GetMetaFile, 'GetMetaFile', CdStdCall);
 S.RegisterDelphiFunction(@GetObject, 'GetObject', CdStdCall);
 S.RegisterDelphiFunction(@GetOutlineTextMetrics, 'GetOutlineTextMetrics', CdStdCall);
 S.RegisterDelphiFunction(@GetTextExtentExPoint, 'GetTextExtentExPoint', CdStdCall);
 S.RegisterDelphiFunction(@GetTextExtentPoint32, 'GetTextExtentPoint32', CdStdCall);
 S.RegisterDelphiFunction(@GetTextExtentPoint, 'GetTextExtentPoint', CdStdCall);
 S.RegisterDelphiFunction(@GetTextFace, 'GetTextFace', CdStdCall);
 S.RegisterDelphiFunction(@GetTextMetrics, 'GetTextMetrics', CdStdCall);
 S.RegisterDelphiFunction(@PolyTextOut, 'PolyTextOut', CdStdCall);
 S.RegisterDelphiFunction(@RemoveFontResource, 'RemoveFontResource', CdStdCall);
 S.RegisterDelphiFunction(@RemoveFontResourceEx, 'RemoveFontResourceEx', CdStdCall);
 S.RegisterDelphiFunction(@ResetDC, 'ResetDC', CdStdCall);
 S.RegisterDelphiFunction(@SetICMProfile, 'SetICMProfile', CdStdCall);
 S.RegisterDelphiFunction(@StartDoc, 'StartDoc', CdStdCall);
 S.RegisterDelphiFunction(@TextOut, 'TextOut', CdStdCall);
 S.RegisterDelphiFunction(@UpdateICMRegKey, 'UpdateICMRegKey', CdStdCall);
 S.RegisterDelphiFunction(@wglUseFontBitmaps, 'wglUseFontBitmaps', CdStdCall);
 S.RegisterDelphiFunction(@wglUseFontOutlines, 'wglUseFontOutlines', CdStdCall);
 S.RegisterDelphiFunction(@AnsiToOem, 'AnsiToOem', CdStdCall);
 S.RegisterDelphiFunction(@AnsiToOemBuff, 'AnsiToOemBuff', CdStdCall);
 S.RegisterDelphiFunction(@AnsiUpper, 'AnsiUpper', CdStdCall);
 S.RegisterDelphiFunction(@AnsiUpperBuff, 'AnsiUpperBuff', CdStdCall);
 S.RegisterDelphiFunction(@AnsiLower, 'AnsiLower', CdStdCall);
 S.RegisterDelphiFunction(@AnsiLowerBuff, 'AnsiLowerBuff', CdStdCall);
 S.RegisterDelphiFunction(@AnsiNext, 'AnsiNext', CdStdCall);
 S.RegisterDelphiFunction(@AnsiPrev, 'AnsiPrev', CdStdCall);
 S.RegisterDelphiFunction(@AppendMenu, 'AppendMenu', CdStdCall);
 S.RegisterDelphiFunction(@CallMsgFilter, 'CallMsgFilter', CdStdCall);
 S.RegisterDelphiFunction(@CallWindowProc, 'CallWindowProc', CdStdCall);
 S.RegisterDelphiFunction(@ChangeDisplaySettings, 'ChangeDisplaySettings', CdStdCall);
 S.RegisterDelphiFunction(@ChangeDisplaySettingsEx, 'ChangeDisplaySettingsEx', CdStdCall);
 S.RegisterDelphiFunction(@ChangeMenu, 'ChangeMenu', CdStdCall);
 S.RegisterDelphiFunction(@CharLower, 'CharLower', CdStdCall);
 S.RegisterDelphiFunction(@CharLowerBuff, 'CharLowerBuff', CdStdCall);
 S.RegisterDelphiFunction(@CharNext, 'CharNext', CdStdCall);
 S.RegisterDelphiFunction(@CharNextEx, 'CharNextEx', CdStdCall);
 S.RegisterDelphiFunction(@CharPrev, 'CharPrev', CdStdCall);
 S.RegisterDelphiFunction(@CharPrevEx, 'CharPrevEx', CdStdCall);
 S.RegisterDelphiFunction(@CharToOem, 'CharToOem', CdStdCall);
 S.RegisterDelphiFunction(@CharToOemBuff, 'CharToOemBuff', CdStdCall);
 S.RegisterDelphiFunction(@CharUpper, 'CharUpper', CdStdCall);
 S.RegisterDelphiFunction(@CharUpperBuff, 'CharUpperBuff', CdStdCall);
 S.RegisterDelphiFunction(@CopyAcceleratorTable, 'CopyAcceleratorTable', CdStdCall);
 S.RegisterDelphiFunction(@CreateAcceleratorTable, 'CreateAcceleratorTable', CdStdCall);
 S.RegisterDelphiFunction(@CreateDesktop, 'CreateDesktop', CdStdCall);
 S.RegisterDelphiFunction(@CreateDialogIndirectParam, 'CreateDialogIndirectParam', CdStdCall);
 S.RegisterDelphiFunction(@CreateDialogParam, 'CreateDialogParam', CdStdCall);
 S.RegisterDelphiFunction(@CreateMDIWindow, 'CreateMDIWindow', CdStdCall);
 S.RegisterDelphiFunction(@CreateWindowEx, 'CreateWindowEx', CdStdCall);
 S.RegisterDelphiFunction(@CreateWindowStation, 'CreateWindowStation', CdStdCall);
 S.RegisterDelphiFunction(@DefDlgProc, 'DefDlgProc', CdStdCall);
 S.RegisterDelphiFunction(@DefFrameProc, 'DefFrameProc', CdStdCall);
 S.RegisterDelphiFunction(@DefMDIChildProc, 'DefMDIChildProc', CdStdCall);
 S.RegisterDelphiFunction(@DefWindowProc, 'DefWindowProc', CdStdCall);
 S.RegisterDelphiFunction(@DialogBoxIndirectParam, 'DialogBoxIndirectParam', CdStdCall);
 S.RegisterDelphiFunction(@DialogBoxParam, 'DialogBoxParam', CdStdCall);
 S.RegisterDelphiFunction(@DispatchMessage, 'DispatchMessage', CdStdCall);
 S.RegisterDelphiFunction(@DlgDirList, 'DlgDirList', CdStdCall);
 S.RegisterDelphiFunction(@DlgDirListComboBox, 'DlgDirListComboBox', CdStdCall);
 S.RegisterDelphiFunction(@DlgDirSelectComboBoxEx, 'DlgDirSelectComboBoxEx', CdStdCall);
 S.RegisterDelphiFunction(@DlgDirSelectEx, 'DlgDirSelectEx', CdStdCall);
 S.RegisterDelphiFunction(@DrawState, 'DrawState', CdStdCall);
 S.RegisterDelphiFunction(@DrawText, 'DrawText', CdStdCall);
 S.RegisterDelphiFunction(@DrawTextEx, 'DrawTextEx', CdStdCall);
 S.RegisterDelphiFunction(@EnumDesktops, 'EnumDesktops', CdStdCall);
 S.RegisterDelphiFunction(@EnumDisplaySettings, 'EnumDisplaySettings', CdStdCall);
 S.RegisterDelphiFunction(@EnumDisplayDevices, 'EnumDisplayDevices', CdStdCall);
 S.RegisterDelphiFunction(@EnumProps, 'EnumProps', CdStdCall);
 S.RegisterDelphiFunction(@EnumPropsEx, 'EnumPropsEx', CdStdCall);
 S.RegisterDelphiFunction(@EnumWindowStations, 'EnumWindowStations', CdStdCall);
 S.RegisterDelphiFunction(@FindWindow, 'FindWindow', CdStdCall);
 S.RegisterDelphiFunction(@FindWindowEx, 'FindWindowEx', CdStdCall);
 S.RegisterDelphiFunction(@GetAltTabInfo, 'GetAltTabInfo', CdStdCall);
 S.RegisterDelphiFunction(@GetClassInfo, 'GetClassInfo', CdStdCall);
 S.RegisterDelphiFunction(@GetClassInfoEx, 'GetClassInfoEx', CdStdCall);
 S.RegisterDelphiFunction(@GetClassLong, 'GetClassLong', CdStdCall);
 S.RegisterDelphiFunction(@GetClassName, 'GetClassName', CdStdCall);
 S.RegisterDelphiFunction(@GetClipboardFormatName, 'GetClipboardFormatName', CdStdCall);
 S.RegisterDelphiFunction(@GetDlgItemText, 'GetDlgItemText', CdStdCall);
 S.RegisterDelphiFunction(@GetKeyNameText, 'GetKeyNameText', CdStdCall);
 S.RegisterDelphiFunction(@GetKeyboardLayoutName, 'GetKeyboardLayoutName', CdStdCall);
 S.RegisterDelphiFunction(@GetMenuItemInfo, 'GetMenuItemInfo', CdStdCall);
 S.RegisterDelphiFunction(@GetMenuString, 'GetMenuString', CdStdCall);
 S.RegisterDelphiFunction(@GetMessage, 'GetMessage', CdStdCall);
 S.RegisterDelphiFunction(@GetProp, 'GetProp', CdStdCall);
 S.RegisterDelphiFunction(@GetTabbedTextExtent, 'GetTabbedTextExtent', CdStdCall);
 S.RegisterDelphiFunction(@GetUserObjectInformation, 'GetUserObjectInformation', CdStdCall);
 S.RegisterDelphiFunction(@GetWindowLong, 'GetWindowLong', CdStdCall);
 S.RegisterDelphiFunction(@GetWindowModuleFileName, 'GetWindowModuleFileName', CdStdCall);
 S.RegisterDelphiFunction(@GetWindowText, 'GetWindowText', CdStdCall);
 S.RegisterDelphiFunction(@GetWindowTextLength, 'GetWindowTextLength', CdStdCall);
 S.RegisterDelphiFunction(@GrayString, 'GrayString', CdStdCall);
 S.RegisterDelphiFunction(@InsertMenu, 'InsertMenu', CdStdCall);
 S.RegisterDelphiFunction(@InsertMenuItem, 'InsertMenuItem', CdStdCall);
 S.RegisterDelphiFunction(@IsCharAlpha, 'IsCharAlpha', CdStdCall);
 S.RegisterDelphiFunction(@IsCharAlphaNumeric, 'IsCharAlphaNumeric', CdStdCall);
 S.RegisterDelphiFunction(@IsCharLower, 'IsCharLower', CdStdCall);
 S.RegisterDelphiFunction(@IsCharUpper, 'IsCharUpper', CdStdCall);
 S.RegisterDelphiFunction(@IsDialogMessage, 'IsDialogMessage', CdStdCall);
 S.RegisterDelphiFunction(@LoadAccelerators, 'LoadAccelerators', CdStdCall);
 S.RegisterDelphiFunction(@LoadBitmap, 'LoadBitmap', CdStdCall);
 S.RegisterDelphiFunction(@LoadCursor, 'LoadCursor', CdStdCall);
 S.RegisterDelphiFunction(@LoadCursorFromFile, 'LoadCursorFromFile', CdStdCall);
 S.RegisterDelphiFunction(@LoadIcon, 'LoadIcon', CdStdCall);
 S.RegisterDelphiFunction(@LoadImage, 'LoadImage', CdStdCall);
 S.RegisterDelphiFunction(@LoadKeyboardLayout, 'LoadKeyboardLayout', CdStdCall);
 S.RegisterDelphiFunction(@LoadMenu, 'LoadMenu', CdStdCall);
 S.RegisterDelphiFunction(@LoadMenuIndirect, 'LoadMenuIndirect', CdStdCall);
 S.RegisterDelphiFunction(@LoadString, 'LoadString', CdStdCall);
 S.RegisterDelphiFunction(@MapVirtualKey, 'MapVirtualKey', CdStdCall);
 S.RegisterDelphiFunction(@MapVirtualKeyEx, 'MapVirtualKeyEx', CdStdCall);
 S.RegisterDelphiFunction(@MessageBox, 'MessageBox', CdStdCall);
 S.RegisterDelphiFunction(@MessageBoxEx, 'MessageBoxEx', CdStdCall);
 S.RegisterDelphiFunction(@MessageBoxIndirect, 'MessageBoxIndirect', CdStdCall);
 S.RegisterDelphiFunction(@ModifyMenu, 'ModifyMenu', CdStdCall);
 S.RegisterDelphiFunction(@OemToAnsi, 'OemToAnsi', CdStdCall);
 S.RegisterDelphiFunction(@OemToAnsiBuff, 'OemToAnsiBuff', CdStdCall);
 S.RegisterDelphiFunction(@OemToChar, 'OemToChar', CdStdCall);
 S.RegisterDelphiFunction(@OemToCharBuff, 'OemToCharBuff', CdStdCall);
 S.RegisterDelphiFunction(@OpenDesktop, 'OpenDesktop', CdStdCall);
 S.RegisterDelphiFunction(@OpenWindowStation, 'OpenWindowStation', CdStdCall);
 S.RegisterDelphiFunction(@PeekMessage, 'PeekMessage', CdStdCall);
 S.RegisterDelphiFunction(@PostMessage, 'PostMessage', CdStdCall);
 S.RegisterDelphiFunction(@PostThreadMessage, 'PostThreadMessage', CdStdCall);
 S.RegisterDelphiFunction(@RealGetWindowClass, 'RealGetWindowClass', CdStdCall);
 S.RegisterDelphiFunction(@RegisterClass, 'RegisterClass', CdStdCall);
 S.RegisterDelphiFunction(@RegisterClassEx, 'RegisterClassEx', CdStdCall);
 S.RegisterDelphiFunction(@RegisterClipboardFormat, 'RegisterClipboardFormat', CdStdCall);
 S.RegisterDelphiFunction(@RegisterDeviceNotification, 'RegisterDeviceNotification', CdStdCall);
 S.RegisterDelphiFunction(@RegisterWindowMessage, 'RegisterWindowMessage', CdStdCall);
 S.RegisterDelphiFunction(@RemoveProp, 'RemoveProp', CdStdCall);
 S.RegisterDelphiFunction(@SendDlgItemMessage, 'SendDlgItemMessage', CdStdCall);
 S.RegisterDelphiFunction(@SendMessage, 'SendMessage', CdStdCall);
 S.RegisterDelphiFunction(@SendMessageCallback, 'SendMessageCallback', CdStdCall);
 S.RegisterDelphiFunction(@SendMessageTimeout, 'SendMessageTimeout', CdStdCall);
 S.RegisterDelphiFunction(@SendNotifyMessage, 'SendNotifyMessage', CdStdCall);
 S.RegisterDelphiFunction(@SetClassLong, 'SetClassLong', CdStdCall);
 S.RegisterDelphiFunction(@SetDlgItemText, 'SetDlgItemText', CdStdCall);
 S.RegisterDelphiFunction(@SetMenuItemInfo, 'SetMenuItemInfo', CdStdCall);
 S.RegisterDelphiFunction(@SetProp, 'SetProp', CdStdCall);
 S.RegisterDelphiFunction(@SetUserObjectInformation, 'SetUserObjectInformation', CdStdCall);
 S.RegisterDelphiFunction(@SetWindowLong, 'SetWindowLong', CdStdCall);
 S.RegisterDelphiFunction(@SetWindowText, 'SetWindowText', CdStdCall);
 S.RegisterDelphiFunction(@SetWindowsHook, 'SetWindowsHook', CdStdCall);
 S.RegisterDelphiFunction(@SetWindowsHookEx, 'SetWindowsHookEx', CdStdCall);
 S.RegisterDelphiFunction(@SystemParametersInfo, 'SystemParametersInfo', CdStdCall);
 S.RegisterDelphiFunction(@TabbedTextOut, 'TabbedTextOut', CdStdCall);
 S.RegisterDelphiFunction(@TranslateAccelerator, 'TranslateAccelerator', CdStdCall);
 S.RegisterDelphiFunction(@UnregisterClass, 'UnregisterClass', CdStdCall);
 S.RegisterDelphiFunction(@VkKeyScan, 'VkKeyScan', CdStdCall);
 S.RegisterDelphiFunction(@VkKeyScanEx, 'VkKeyScanEx', CdStdCall);
 S.RegisterDelphiFunction(@WinHelp, 'WinHelp', CdStdCall);
 S.RegisterDelphiFunction(@wsprintf, 'wsprintf', CdStdCall);
 S.RegisterDelphiFunction(@wvsprintf, 'wvsprintf', CdStdCall);
end;

 
 
{ TPSImport_advapi32mX }
(*----------------------------------------------------------------------------*)
procedure TPSImport_advapi32mX.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_advapi32mX(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_advapi32mX.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_advapi32mX(ri);
  RIRegister_advapi32mX_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
