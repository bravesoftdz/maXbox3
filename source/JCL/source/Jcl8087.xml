<?xml version="1.0" encoding="utf-8"?>
<namespace name="Jcl8087">
  <const name="pcSingle" type="T8087Precision">
    <value>
      pcSingle
    </value>
  </const>
  <const name="pcReserved" type="T8087Precision">
    <value>
      pcReserved
    </value>
  </const>
  <const name="pcDouble" type="T8087Precision">
    <value>
      pcDouble
    </value>
  </const>
  <const name="pcExtended" type="T8087Precision">
    <value>
      pcExtended
    </value>
  </const>
  <enum name="T8087Precision">
    <element name="pcSingle" />
    <element name="pcReserved" />
    <element name="pcDouble" />
    <element name="pcExtended" />
  </enum>
  <const name="rcNearestOrEven" type="T8087Rounding">
    <value>
      rcNearestOrEven
    </value>
  </const>
  <const name="rcDownInfinity" type="T8087Rounding">
    <value>
      rcDownInfinity
    </value>
  </const>
  <const name="rcUpInfinity" type="T8087Rounding">
    <value>
      rcUpInfinity
    </value>
  </const>
  <const name="rcChopOrTruncate" type="T8087Rounding">
    <value>
      rcChopOrTruncate
    </value>
  </const>
  <enum name="T8087Rounding">
    <element name="rcNearestOrEven" />
    <element name="rcDownInfinity" />
    <element name="rcUpInfinity" />
    <element name="rcChopOrTruncate" />
  </enum>
  <const name="icProjective" type="T8087Infinity">
    <value>
      icProjective
    </value>
  </const>
  <const name="icAffine" type="T8087Infinity">
    <value>
      icAffine
    </value>
  </const>
  <enum name="T8087Infinity">
    <element name="icProjective" />
    <element name="icAffine" />
  </enum>
  <const name="emInvalidOp" type="T8087Exception">
    <value>
      emInvalidOp
    </value>
  </const>
  <const name="emDenormalizedOperand" type="T8087Exception">
    <value>
      emDenormalizedOperand
    </value>
  </const>
  <const name="emZeroDivide" type="T8087Exception">
    <value>
      emZeroDivide
    </value>
  </const>
  <const name="emOverflow" type="T8087Exception">
    <value>
      emOverflow
    </value>
  </const>
  <const name="emUnderflow" type="T8087Exception">
    <value>
      emUnderflow
    </value>
  </const>
  <const name="emPrecision" type="T8087Exception">
    <value>
      emPrecision
    </value>
  </const>
  <enum name="T8087Exception">
    <element name="emInvalidOp" />
    <element name="emDenormalizedOperand" />
    <element name="emZeroDivide" />
    <element name="emOverflow" />
    <element name="emUnderflow" />
    <element name="emPrecision" />
  </enum>
  <set name="T8087Exceptions" type="T8087Exception">
    <element name="emInvalidOp" />
    <element name="emDenormalizedOperand" />
    <element name="emZeroDivide" />
    <element name="emOverflow" />
    <element name="emUnderflow" />
    <element name="emPrecision" />
  </set>
  <const name="All8087Exceptions" type="Set">
    <value>
      [emInvalidOp..emPrecision]
    </value>
  </const>
  <function name="Get8087ControlWord" visibility="public">
    <parameters>
      <retval type="Word" />
    </parameters>
  </function>
  <function name="Get8087Infinity" visibility="public">
    <parameters>
      <retval type="T8087Infinity" />
    </parameters>
  </function>
  <function name="Get8087Precision" visibility="public">
    <parameters>
      <retval type="T8087Precision" />
    </parameters>
  </function>
  <function name="Get8087Rounding" visibility="public">
    <parameters>
      <retval type="T8087Rounding" />
    </parameters>
  </function>
  <function name="Get8087StatusWord" visibility="public">
    <parameters>
      <parameter name="ClearExceptions" type="Boolean" />
      <retval type="Word" />
    </parameters>
  </function>
  <function name="Set8087Infinity" visibility="public">
    <parameters>
      <parameter name="Infinity" type="T8087Infinity" paramflags="const" />
      <retval type="T8087Infinity" />
    </parameters>
  </function>
  <function name="Set8087Precision" visibility="public">
    <parameters>
      <parameter name="Precision" type="T8087Precision" paramflags="const" />
      <retval type="T8087Precision" />
    </parameters>
  </function>
  <function name="Set8087Rounding" visibility="public">
    <parameters>
      <parameter name="Rounding" type="T8087Rounding" paramflags="const" />
      <retval type="T8087Rounding" />
    </parameters>
  </function>
  <function name="Set8087ControlWord" visibility="public">
    <parameters>
      <parameter name="Control" type="Word" paramflags="const" />
      <retval type="Word" />
    </parameters>
  </function>
  <function name="ClearPending8087Exceptions" visibility="public">
    <parameters>
      <retval type="T8087Exceptions" />
    </parameters>
  </function>
  <function name="GetPending8087Exceptions" visibility="public">
    <parameters>
      <retval type="T8087Exceptions" />
    </parameters>
  </function>
  <function name="GetMasked8087Exceptions" visibility="public">
    <parameters>
      <retval type="T8087Exceptions" />
    </parameters>
  </function>
  <function name="SetMasked8087Exceptions" visibility="public">
    <parameters>
      <parameter name="Exceptions" type="T8087Exceptions" />
      <parameter name="ClearBefore" type="Boolean">
        <value>
          True
        </value>
      </parameter>
      <retval type="T8087Exceptions" />
    </parameters>
  </function>
  <function name="Mask8087Exceptions" visibility="public">
    <parameters>
      <parameter name="Exceptions" type="T8087Exceptions" />
      <retval type="T8087Exceptions" />
    </parameters>
  </function>
  <function name="Unmask8087Exceptions" visibility="public">
    <parameters>
      <parameter name="Exceptions" type="T8087Exceptions" />
      <parameter name="ClearBefore" type="Boolean">
        <value>
          True
        </value>
      </parameter>
      <retval type="T8087Exceptions" />
    </parameters>
  </function>
</namespace>
