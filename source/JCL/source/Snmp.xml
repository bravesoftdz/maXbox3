<?xml version="1.0" encoding="utf-8"?>
<namespace name="Snmp">
  <pointer name="PAsnOctetString" type="TAsnOctetString" indircnt="1" />
  <struct name="TAsnOctetString">
    <field name="stream" type="PAnsiChar" visibility="public" />
    <field name="length" type="Cardinal" visibility="public" />
    <field name="dynamic_" type="Boolean" visibility="public" />
  </struct>
  <pointer name="PAsnObjectIdentifier" type="TAsnObjectIdentifier" indircnt="1" />
  <struct name="TAsnObjectIdentifier">
    <field name="idLength" type="Cardinal" visibility="public" />
    <field name="ids" type="PUINT" visibility="public" />
  </struct>
  <struct name="TAsnCounter64" alias="ULARGE_INTEGER" namespace="Windows">
    <field name="LowPart" type="Cardinal" visibility="public">
    </field>
  </struct>
  <struct name="TAsnBits" alias="TAsnOctetString" namespace="Snmp">
    <field name="stream" type="PAnsiChar" visibility="public" />
    <field name="length" type="Cardinal" visibility="public" />
    <field name="dynamic_" type="Boolean" visibility="public" />
  </struct>
  <struct name="TAsnSequence" alias="TAsnOctetString" namespace="Snmp">
    <field name="stream" type="PAnsiChar" visibility="public" />
    <field name="length" type="Cardinal" visibility="public" />
    <field name="dynamic_" type="Boolean" visibility="public" />
  </struct>
  <struct name="TAsnImplicitSequence" alias="TAsnOctetString" namespace="Snmp">
    <field name="stream" type="PAnsiChar" visibility="public" />
    <field name="length" type="Cardinal" visibility="public" />
    <field name="dynamic_" type="Boolean" visibility="public" />
  </struct>
  <struct name="TAsnIPAddress" alias="TAsnOctetString" namespace="Snmp">
    <field name="stream" type="PAnsiChar" visibility="public" />
    <field name="length" type="Cardinal" visibility="public" />
    <field name="dynamic_" type="Boolean" visibility="public" />
  </struct>
  <struct name="TAsnNetworkAddress" alias="TAsnOctetString" namespace="Snmp">
    <field name="stream" type="PAnsiChar" visibility="public" />
    <field name="length" type="Cardinal" visibility="public" />
    <field name="dynamic_" type="Boolean" visibility="public" />
  </struct>
  <struct name="TAsnDisplayString" alias="TAsnOctetString" namespace="Snmp">
    <field name="stream" type="PAnsiChar" visibility="public" />
    <field name="length" type="Cardinal" visibility="public" />
    <field name="dynamic_" type="Boolean" visibility="public" />
  </struct>
  <struct name="TAsnOpaque" alias="TAsnOctetString" namespace="Snmp">
    <field name="stream" type="PAnsiChar" visibility="public" />
    <field name="length" type="Cardinal" visibility="public" />
    <field name="dynamic_" type="Boolean" visibility="public" />
  </struct>
  <pointer name="PAsnAny" type="TAsnAny" indircnt="1" />
  <struct name="TAsnAny">
    <field name="asnType" type="Byte" visibility="public" />
    <field name="number" type="Integer" visibility="public" />
    <field name="unsigned32" type="Cardinal" visibility="public" />
    <field name="counter64" type="ULARGE_INTEGER" visibility="public" />
    <field name="string_" type="TAsnOctetString" visibility="public" />
    <field name="bits" type="TAsnOctetString" visibility="public" />
    <field name="object_" type="TAsnObjectIdentifier" visibility="public" />
    <field name="sequence" type="TAsnOctetString" visibility="public" />
    <field name="address" type="TAsnOctetString" visibility="public" />
    <field name="counter" type="Cardinal" visibility="public" />
    <field name="gauge" type="Cardinal" visibility="public" />
  </struct>
  <struct name="TAsnObjectName" alias="TAsnObjectIdentifier" namespace="Snmp">
    <field name="idLength" type="Cardinal" visibility="public" />
    <field name="ids" type="PUINT" visibility="public" />
  </struct>
  <struct name="TAsnObjectSyntax" alias="TAsnAny" namespace="Snmp">
    <field name="asnType" type="Byte" visibility="public" />
    <field name="number" type="Integer" visibility="public" />
    <field name="unsigned32" type="Cardinal" visibility="public" />
    <field name="counter64" type="ULARGE_INTEGER" visibility="public" />
    <field name="string_" type="TAsnOctetString" visibility="public" />
    <field name="bits" type="TAsnOctetString" visibility="public" />
    <field name="object_" type="TAsnObjectIdentifier" visibility="public" />
    <field name="sequence" type="TAsnOctetString" visibility="public" />
    <field name="address" type="TAsnOctetString" visibility="public" />
    <field name="counter" type="Cardinal" visibility="public" />
    <field name="gauge" type="Cardinal" visibility="public" />
  </struct>
  <pointer name="PSnmpVarBind" type="TSnmpVarBind" indircnt="1" />
  <struct name="TSnmpVarBind">
    <field name="name" type="TAsnObjectIdentifier" visibility="public" />
    <field name="value" type="TAsnAny" visibility="public" />
  </struct>
  <pointer name="PSnmpVarBindList" type="TSnmpVarBindList" indircnt="1" />
  <struct name="TSnmpVarBindList">
    <field name="list" type="PSnmpVarBind" visibility="public" />
    <field name="len" type="Cardinal" visibility="public" />
  </struct>
  <const name="ASN_UNIVERSAL" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="ASN_APPLICATION" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="ASN_CONTEXT" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="ASN_PRIVATE" type="Integer">
    <value>
      $C0
    </value>
  </const>
  <const name="ASN_PRIMITIVE" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="ASN_CONSTRUCTOR" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="SNMP_PDU_GET" type="Integer">
    <value>
      $A0
    </value>
  </const>
  <const name="SNMP_PDU_GETNEXT" type="Integer">
    <value>
      $A1
    </value>
  </const>
  <const name="SNMP_PDU_RESPONSE" type="Integer">
    <value>
      $A2
    </value>
  </const>
  <const name="SNMP_PDU_SET" type="Integer">
    <value>
      $A3
    </value>
  </const>
  <const name="SNMP_PDU_V1TRAP" type="Integer">
    <value>
      $A4
    </value>
  </const>
  <const name="SNMP_PDU_GETBULK" type="Integer">
    <value>
      $A5
    </value>
  </const>
  <const name="SNMP_PDU_INFORM" type="Integer">
    <value>
      $A6
    </value>
  </const>
  <const name="SNMP_PDU_TRAP" type="Integer">
    <value>
      $A7
    </value>
  </const>
  <const name="ASN_INTEGER" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="ASN_BITS" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="ASN_OCTETSTRING" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="ASN_NULL" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="ASN_OBJECTIDENTIFIER" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="ASN_INTEGER32" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="ASN_SEQUENCE" type="Integer">
    <value>
      $30
    </value>
  </const>
  <const name="ASN_SEQUENCEOF" type="Integer">
    <value>
      $30
    </value>
  </const>
  <const name="ASN_IPADDRESS" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="ASN_COUNTER32" type="Integer">
    <value>
      $41
    </value>
  </const>
  <const name="ASN_GAUGE32" type="Integer">
    <value>
      $42
    </value>
  </const>
  <const name="ASN_TIMETICKS" type="Integer">
    <value>
      $43
    </value>
  </const>
  <const name="ASN_OPAQUE" type="Integer">
    <value>
      $44
    </value>
  </const>
  <const name="ASN_COUNTER64" type="Integer">
    <value>
      $46
    </value>
  </const>
  <const name="ASN_UNSIGNED32" type="Integer">
    <value>
      $47
    </value>
  </const>
  <const name="SNMP_EXCEPTION_NOSUCHOBJECT" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="SNMP_EXCEPTION_NOSUCHINSTANCE" type="Integer">
    <value>
      $81
    </value>
  </const>
  <const name="SNMP_EXCEPTION_ENDOFMIBVIEW" type="Integer">
    <value>
      $82
    </value>
  </const>
  <const name="SNMP_EXTENSION_GET" type="Integer">
    <value>
      $A0
    </value>
  </const>
  <const name="SNMP_EXTENSION_GET_NEXT" type="Integer">
    <value>
      $A1
    </value>
  </const>
  <const name="SNMP_EXTENSION_GET_BULK" type="Integer">
    <value>
      $A5
    </value>
  </const>
  <const name="SNMP_EXTENSION_SET_TEST" type="Integer">
    <value>
      $E0
    </value>
  </const>
  <const name="SNMP_EXTENSION_SET_COMMIT" type="Integer">
    <value>
      $A3
    </value>
  </const>
  <const name="SNMP_EXTENSION_SET_UNDO" type="Integer">
    <value>
      $E1
    </value>
  </const>
  <const name="SNMP_EXTENSION_SET_CLEANUP" type="Integer">
    <value>
      $E2
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_NOERROR" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_TOOBIG" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_NOSUCHNAME" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_BADVALUE" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_READONLY" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_GENERR" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_NOACCESS" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_WRONGTYPE" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_WRONGLENGTH" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_WRONGENCODING" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_WRONGVALUE" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_NOCREATION" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_INCONSISTENTVALUE" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_RESOURCEUNAVAILABLE" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_COMMITFAILED" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_UNDOFAILED" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_AUTHORIZATIONERROR" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_NOTWRITABLE" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="SNMP_ERRORSTATUS_INCONSISTENTNAME" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="SNMP_GENERICTRAP_COLDSTART" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="SNMP_GENERICTRAP_WARMSTART" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="SNMP_GENERICTRAP_LINKDOWN" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="SNMP_GENERICTRAP_LINKUP" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="SNMP_GENERICTRAP_AUTHFAILURE" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="SNMP_GENERICTRAP_EGPNEIGHLOSS" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="SNMP_GENERICTRAP_ENTERSPECIFIC" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="SNMP_ACCESS_NONE" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="SNMP_ACCESS_NOTIFY" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="SNMP_ACCESS_READ_ONLY" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="SNMP_ACCESS_READ_WRITE" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="SNMP_ACCESS_READ_CREATE" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="SNMPAPI_NOERROR" type="Boolean">
    <value>
      True
    </value>
  </const>
  <const name="SNMPAPI_ERROR" type="Boolean">
    <value>
      False
    </value>
  </const>
  <variable name="SnmpUtilOidCpy" />
  <variable name="SnmpUtilOidAppend" />
  <variable name="SnmpUtilOidNCmp" />
  <variable name="SnmpUtilOidCmp" />
  <variable name="SnmpUtilOidFree" />
  <variable name="SnmpUtilOctetsCmp" />
  <variable name="SnmpUtilOctetsNCmp" />
  <variable name="SnmpUtilOctetsCpy" />
  <variable name="SnmpUtilOctetsFree" />
  <variable name="SnmpUtilAsnAnyCpy" />
  <variable name="SnmpUtilAsnAnyFree" />
  <variable name="SnmpUtilVarBindCpy" />
  <variable name="SnmpUtilVarBindFree" />
  <variable name="SnmpUtilVarBindListCpy" />
  <variable name="SnmpUtilVarBindListFree" />
  <variable name="SnmpUtilMemFree" />
  <variable name="SnmpUtilMemAlloc" />
  <variable name="SnmpUtilMemReAlloc" />
  <variable name="SnmpUtilOidToA" />
  <variable name="SnmpUtilIdsToA" />
  <variable name="SnmpUtilPrintOid" />
  <variable name="SnmpUtilPrintAsnAny" />
  <variable name="SnmpSvcGetUptime" />
  <variable name="SnmpSvcSetLogLevel" />
  <variable name="SnmpSvcSetLogType" />
  <const name="SNMP_LOG_SILENT" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="SNMP_LOG_FATAL" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="SNMP_LOG_ERROR" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="SNMP_LOG_WARNING" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="SNMP_LOG_TRACE" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="SNMP_LOG_VERBOSE" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="SNMP_OUTPUT_TO_CONSOLE" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="SNMP_OUTPUT_TO_LOGFILE" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="SNMP_OUTPUT_TO_EVENTLOG" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="SNMP_OUTPUT_TO_DEBUGGER" type="Integer">
    <value>
      $8
    </value>
  </const>
  <variable name="SnmpUtilDbgPrint" />
  <const name="DEFINE_NULLOID" type="TAsnObjectIdentifier" visibility="public" />
  <const name="DEFINE_NULLOCTETS" type="TAsnOctetString" visibility="public" />
  <const name="DEFAULT_SNMP_PORT_UDP" type="Integer">
    <value>
      $A1
    </value>
  </const>
  <const name="DEFAULT_SNMP_PORT_IPX" type="Integer">
    <value>
      $900F
    </value>
  </const>
  <const name="DEFAULT_SNMPTRAP_PORT_UDP" type="Integer">
    <value>
      $A2
    </value>
  </const>
  <const name="DEFAULT_SNMPTRAP_PORT_IPX" type="Integer">
    <value>
      $9010
    </value>
  </const>
  <const name="SNMP_MAX_OID_LEN" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="SNMP_MEM_ALLOC_ERROR" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="SNMP_BERAPI_INVALID_LENGTH" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="SNMP_BERAPI_INVALID_TAG" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="SNMP_BERAPI_OVERFLOW" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="SNMP_BERAPI_SHORT_BUFFER" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="SNMP_BERAPI_INVALID_OBJELEM" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="SNMP_PDUAPI_UNRECOGNIZED_PDU" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="SNMP_PDUAPI_INVALID_ES" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="SNMP_PDUAPI_INVALID_GT" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="SNMP_AUTHAPI_INVALID_VERSION" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="SNMP_AUTHAPI_INVALID_MSG_TYPE" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="SNMP_AUTHAPI_TRIV_AUTH_FAILED" type="Integer">
    <value>
      $20
    </value>
  </const>
  <variable name="SnmpExtensionInit" type="TSnmpExtensionInit" />
  <variable name="SnmpExtensionInitEx" type="TSnmpExtensionInitEx" />
  <variable name="SnmpExtensionMonitor" type="TSnmpExtensionMonitor" />
  <variable name="SnmpExtensionQuery" type="TSnmpExtensionQuery" />
  <variable name="SnmpExtensionQueryEx" type="TSnmpExtensionQueryEx" />
  <variable name="SnmpExtensionTrap" type="TSnmpExtensionTrap" />
  <variable name="SnmpExtensionClose" type="TSnmpExtensionClose" />
  <function name="SnmpExtensionLoaded" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="LoadSnmpExtension" visibility="public">
    <parameters>
      <parameter name="LibName" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="UnloadSnmpExtension" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="SnmpLoaded" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="UnloadSnmp" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="LoadSnmp" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
</namespace>
