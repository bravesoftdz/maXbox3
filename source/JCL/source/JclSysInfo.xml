<?xml version="1.0" encoding="utf-8"?>
<namespace name="JclSysInfo">
  <const name="eoLocalMachine" type="TEnvironmentOption">
    <value>
      eoLocalMachine
    </value>
  </const>
  <const name="eoCurrentUser" type="TEnvironmentOption">
    <value>
      eoCurrentUser
    </value>
  </const>
  <const name="eoAdditional" type="TEnvironmentOption">
    <value>
      eoAdditional
    </value>
  </const>
  <enum name="TEnvironmentOption">
    <element name="eoLocalMachine" />
    <element name="eoCurrentUser" />
    <element name="eoAdditional" />
  </enum>
  <set name="TEnvironmentOptions" type="TEnvironmentOption">
    <element name="eoLocalMachine" />
    <element name="eoCurrentUser" />
    <element name="eoAdditional" />
  </set>
  <const name="alsOffline" type="TAPMLineStatus">
    <value>
      alsOffline
    </value>
  </const>
  <const name="alsOnline" type="TAPMLineStatus">
    <value>
      alsOnline
    </value>
  </const>
  <const name="alsUnknown" type="TAPMLineStatus">
    <value>
      alsUnknown
    </value>
  </const>
  <enum name="TAPMLineStatus">
    <element name="alsOffline" />
    <element name="alsOnline" />
    <element name="alsUnknown" />
  </enum>
  <const name="abfHigh" type="TAPMBatteryFlag">
    <value>
      abfHigh
    </value>
  </const>
  <const name="abfLow" type="TAPMBatteryFlag">
    <value>
      abfLow
    </value>
  </const>
  <const name="abfCritical" type="TAPMBatteryFlag">
    <value>
      abfCritical
    </value>
  </const>
  <const name="abfCharging" type="TAPMBatteryFlag">
    <value>
      abfCharging
    </value>
  </const>
  <const name="abfNoBattery" type="TAPMBatteryFlag">
    <value>
      abfNoBattery
    </value>
  </const>
  <const name="abfUnknown" type="TAPMBatteryFlag">
    <value>
      abfUnknown
    </value>
  </const>
  <enum name="TAPMBatteryFlag">
    <element name="abfHigh" />
    <element name="abfLow" />
    <element name="abfCritical" />
    <element name="abfCharging" />
    <element name="abfNoBattery" />
    <element name="abfUnknown" />
  </enum>
  <const name="taError" type="TJclTerminateAppResult">
    <value>
      taError
    </value>
  </const>
  <const name="taClean" type="TJclTerminateAppResult">
    <value>
      taClean
    </value>
  </const>
  <const name="taKill" type="TJclTerminateAppResult">
    <value>
      taKill
    </value>
  </const>
  <enum name="TJclTerminateAppResult">
    <element name="taError" />
    <element name="taClean" />
    <element name="taKill" />
  </enum>
  <const name="wvUnknown" type="TWindowsVersion">
    <value>
      wvUnknown
    </value>
  </const>
  <const name="wvWin95" type="TWindowsVersion">
    <value>
      wvWin95
    </value>
  </const>
  <const name="wvWin95OSR2" type="TWindowsVersion">
    <value>
      wvWin95OSR2
    </value>
  </const>
  <const name="wvWin98" type="TWindowsVersion">
    <value>
      wvWin98
    </value>
  </const>
  <const name="wvWin98SE" type="TWindowsVersion">
    <value>
      wvWin98SE
    </value>
  </const>
  <const name="wvWinME" type="TWindowsVersion">
    <value>
      wvWinME
    </value>
  </const>
  <const name="wvWinNT31" type="TWindowsVersion">
    <value>
      wvWinNT31
    </value>
  </const>
  <const name="wvWinNT35" type="TWindowsVersion">
    <value>
      wvWinNT35
    </value>
  </const>
  <const name="wvWinNT351" type="TWindowsVersion">
    <value>
      wvWinNT351
    </value>
  </const>
  <const name="wvWinNT4" type="TWindowsVersion">
    <value>
      wvWinNT4
    </value>
  </const>
  <const name="wvWin2000" type="TWindowsVersion">
    <value>
      wvWin2000
    </value>
  </const>
  <const name="wvWinXP" type="TWindowsVersion">
    <value>
      wvWinXP
    </value>
  </const>
  <enum name="TWindowsVersion">
    <element name="wvUnknown" />
    <element name="wvWin95" />
    <element name="wvWin95OSR2" />
    <element name="wvWin98" />
    <element name="wvWin98SE" />
    <element name="wvWinME" />
    <element name="wvWinNT31" />
    <element name="wvWinNT35" />
    <element name="wvWinNT351" />
    <element name="wvWinNT4" />
    <element name="wvWin2000" />
    <element name="wvWinXP" />
  </enum>
  <const name="ptUnknown" type="TNtProductType">
    <value>
      ptUnknown
    </value>
  </const>
  <const name="ptWorkStation" type="TNtProductType">
    <value>
      ptWorkStation
    </value>
  </const>
  <const name="ptServer" type="TNtProductType">
    <value>
      ptServer
    </value>
  </const>
  <const name="ptAdvancedServer" type="TNtProductType">
    <value>
      ptAdvancedServer
    </value>
  </const>
  <const name="ptPersonal" type="TNtProductType">
    <value>
      ptPersonal
    </value>
  </const>
  <const name="ptProfessional" type="TNtProductType">
    <value>
      ptProfessional
    </value>
  </const>
  <const name="ptDatacenterServer" type="TNtProductType">
    <value>
      ptDatacenterServer
    </value>
  </const>
  <enum name="TNtProductType">
    <element name="ptUnknown" />
    <element name="ptWorkStation" />
    <element name="ptServer" />
    <element name="ptAdvancedServer" />
    <element name="ptPersonal" />
    <element name="ptProfessional" />
    <element name="ptDatacenterServer" />
  </enum>
  <variable name="IsWin95" type="Boolean" visibility="public" />
  <variable name="IsWin95OSR2" type="Boolean" visibility="public" />
  <variable name="IsWin98" type="Boolean" visibility="public" />
  <variable name="IsWin98SE" type="Boolean" visibility="public" />
  <variable name="IsWinME" type="Boolean" visibility="public" />
  <variable name="IsWinNT" type="Boolean" visibility="public" />
  <variable name="IsWinNT3" type="Boolean" visibility="public" />
  <variable name="IsWinNT31" type="Boolean" visibility="public" />
  <variable name="IsWinNT35" type="Boolean" visibility="public" />
  <variable name="IsWinNT351" type="Boolean" visibility="public" />
  <variable name="IsWinNT4" type="Boolean" visibility="public" />
  <variable name="IsWin2K" type="Boolean" visibility="public" />
  <variable name="IsWinXP" type="Boolean" visibility="public" />
  <struct name="TIntelSpecific">
    <field name="L2Cache" type="Cardinal" visibility="public" />
    <field name="CacheDescriptors" visibility="public">
      <array name="CacheDescriptors" low="0" high="15">
        <element type="Byte" />
      </array>
    </field>
    <field name="BrandID" type="Byte" visibility="public" />
  </struct>
  <struct name="TCyrixSpecific">
    <field name="L1CacheInfo" visibility="public">
      <array name="L1CacheInfo" low="0" high="3">
        <element type="Byte" />
      </array>
    </field>
    <field name="TLBInfo" visibility="public">
      <array name="TLBInfo" low="0" high="3">
        <element type="Byte" />
      </array>
    </field>
  </struct>
  <struct name="TAMDSpecific">
    <field name="DataTLB" visibility="public">
      <array name="DataTLB" low="0" high="1">
        <element type="Byte" />
      </array>
    </field>
    <field name="InstructionTLB" visibility="public">
      <array name="InstructionTLB" low="0" high="1">
        <element type="Byte" />
      </array>
    </field>
    <field name="L1DataCache" visibility="public">
      <array name="L1DataCache" low="0" high="3">
        <element type="Byte" />
      </array>
    </field>
    <field name="L1ICache" visibility="public">
      <array name="L1ICache" low="0" high="3">
        <element type="Byte" />
      </array>
    </field>
  </struct>
  <struct name="TCacheInfo">
    <field name="D" type="Byte" visibility="public" />
    <field name="I" type="string" visibility="public" />
  </struct>
  <struct name="TFreqInfo">
    <field name="RawFreq" type="Cardinal" visibility="public" />
    <field name="NormFreq" type="Cardinal" visibility="public" />
    <field name="InCycles" type="Cardinal" visibility="public" />
    <field name="ExTicks" type="Cardinal" visibility="public" />
  </struct>
  <struct name="TCpuInfo">
    <field name="HasInstruction" type="Boolean" visibility="public" />
    <field name="MMX" type="Boolean" visibility="public" />
    <field name="IsFDIVOK" type="Boolean" visibility="public" />
    <field name="HasCacheInfo" type="Boolean" visibility="public" />
    <field name="HasExtendedInfo" type="Boolean" visibility="public" />
    <field name="CpuType" type="Byte" visibility="public" />
    <field name="PType" type="Byte" visibility="public" />
    <field name="Family" type="Byte" visibility="public" />
    <field name="Model" type="Byte" visibility="public" />
    <field name="Stepping" type="Byte" visibility="public" />
    <field name="Features" type="Cardinal" visibility="public" />
    <field name="FrequencyInfo" type="TFreqInfo" visibility="public" />
    <field name="VendorIDString" visibility="public">
      <array name="VendorIDString" low="0" high="11">
        <element type="Char" />
      </array>
    </field>
    <field name="Manufacturer" visibility="public">
      <array name="Manufacturer" low="0" high="9">
        <element type="Char" />
      </array>
    </field>
    <field name="CpuName" visibility="public">
      <array name="CpuName" low="0" high="47">
        <element type="Char" />
      </array>
    </field>
    <field name="IntelSpecific" type="TIntelSpecific" visibility="public" />
    <field name="CyrixSpecific" type="TCyrixSpecific" visibility="public" />
    <field name="AMDSpecific" type="TAMDSpecific" visibility="public" />
  </struct>
  <const name="CPU_TYPE_INTEL" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="CPU_TYPE_CYRIX" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="CPU_TYPE_AMD" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="CPU_TYPE_CRUSOE" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="FPU_FLAG" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="VME_FLAG" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="DE_FLAG" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="PSE_FLAG" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="TSC_FLAG" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="MSR_FLAG" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="PAE_FLAG" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="MCE_FLAG" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="CX8_FLAG" type="Integer">
    <value>
      $100
    </value>
  </const>
  <const name="APIC_FLAG" type="Integer">
    <value>
      $200
    </value>
  </const>
  <const name="BIT_10" type="Integer">
    <value>
      $400
    </value>
  </const>
  <const name="SEP_FLAG" type="Integer">
    <value>
      $800
    </value>
  </const>
  <const name="MTRR_FLAG" type="Integer">
    <value>
      $1000
    </value>
  </const>
  <const name="PGE_FLAG" type="Integer">
    <value>
      $2000
    </value>
  </const>
  <const name="MCA_FLAG" type="Integer">
    <value>
      $4000
    </value>
  </const>
  <const name="CMOV_FLAG" type="Integer">
    <value>
      $8000
    </value>
  </const>
  <const name="PAT_FLAG" type="Integer">
    <value>
      $10000
    </value>
  </const>
  <const name="PSE36_FLAG" type="Integer">
    <value>
      $20000
    </value>
  </const>
  <const name="BIT_18" type="Integer">
    <value>
      $40000
    </value>
  </const>
  <const name="BIT_19" type="Integer">
    <value>
      $80000
    </value>
  </const>
  <const name="BIT_20" type="Integer">
    <value>
      $100000
    </value>
  </const>
  <const name="BIT_21" type="Integer">
    <value>
      $200000
    </value>
  </const>
  <const name="BIT_22" type="Integer">
    <value>
      $400000
    </value>
  </const>
  <const name="MMX_FLAG" type="Integer">
    <value>
      $800000
    </value>
  </const>
  <const name="FXSR_FLAG" type="Integer">
    <value>
      $1000000
    </value>
  </const>
  <const name="BIT_25" type="Integer">
    <value>
      $2000000
    </value>
  </const>
  <const name="BIT_26" type="Integer">
    <value>
      $4000000
    </value>
  </const>
  <const name="BIT_27" type="Integer">
    <value>
      $8000000
    </value>
  </const>
  <const name="BIT_28" type="Integer">
    <value>
      $10000000
    </value>
  </const>
  <const name="BIT_29" type="Integer">
    <value>
      $20000000
    </value>
  </const>
  <const name="BIT_30" type="Integer">
    <value>
      $40000000
    </value>
  </const>
  <const name="BIT_31" type="Cardinal">
    <value>
      $80000000
    </value>
  </const>
  <const name="AMD_FPU_FLAG" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="AMD_VME_FLAG" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="AMD_DE_FLAG" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="AMD_PSE_FLAG" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="AMD_TSC_FLAG" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="AMD_MSR_FLAG" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="AMD_BIT_6" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="AMD_MCE_FLAG" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="AMD_CX8_FLAG" type="Integer">
    <value>
      $100
    </value>
  </const>
  <const name="AMD_APIC_FLAG" type="Integer">
    <value>
      $200
    </value>
  </const>
  <const name="AMD_BIT_10" type="Integer">
    <value>
      $400
    </value>
  </const>
  <const name="AMD_BIT_11" type="Integer">
    <value>
      $800
    </value>
  </const>
  <const name="AMD_MTRR_FLAG" type="Integer">
    <value>
      $1000
    </value>
  </const>
  <const name="AMD_PGE_FLAG" type="Integer">
    <value>
      $2000
    </value>
  </const>
  <const name="AMD_BIT_14" type="Integer">
    <value>
      $4000
    </value>
  </const>
  <const name="AMD_CMOV_FLAG" type="Integer">
    <value>
      $8000
    </value>
  </const>
  <const name="AMD_BIT_16" type="Integer">
    <value>
      $10000
    </value>
  </const>
  <const name="AMD_BIT_17" type="Integer">
    <value>
      $20000
    </value>
  </const>
  <const name="AMD_BIT_18" type="Integer">
    <value>
      $40000
    </value>
  </const>
  <const name="AMD_BIT_19" type="Integer">
    <value>
      $80000
    </value>
  </const>
  <const name="AMD_BIT_20" type="Integer">
    <value>
      $100000
    </value>
  </const>
  <const name="AMD_BIT_21" type="Integer">
    <value>
      $200000
    </value>
  </const>
  <const name="AMD_BIT_22" type="Integer">
    <value>
      $400000
    </value>
  </const>
  <const name="AMD_MMX_FLAG" type="Integer">
    <value>
      $800000
    </value>
  </const>
  <const name="AMD_BIT_24" type="Integer">
    <value>
      $1000000
    </value>
  </const>
  <const name="AMD_BIT_25" type="Integer">
    <value>
      $2000000
    </value>
  </const>
  <const name="AMD_BIT_26" type="Integer">
    <value>
      $4000000
    </value>
  </const>
  <const name="AMD_BIT_27" type="Integer">
    <value>
      $8000000
    </value>
  </const>
  <const name="AMD_BIT_28" type="Integer">
    <value>
      $10000000
    </value>
  </const>
  <const name="AMD_BIT_29" type="Integer">
    <value>
      $20000000
    </value>
  </const>
  <const name="AMD_BIT_30" type="Integer">
    <value>
      $40000000
    </value>
  </const>
  <const name="AMD_BIT_31" type="Cardinal">
    <value>
      $80000000
    </value>
  </const>
  <const name="EAMD_FPU_FLAG" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="EAMD_VME_FLAG" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="EAMD_DE_FLAG" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="EAMD_PSE_FLAG" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="EAMD_TSC_FLAG" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="EAMD_MSR_FLAG" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="EAMD_BIT_6" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="EAMD_MCE_FLAG" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="EAMD_CX8_FLAG" type="Integer">
    <value>
      $100
    </value>
  </const>
  <const name="EAMD_BIT_9" type="Integer">
    <value>
      $200
    </value>
  </const>
  <const name="EAMD_BIT_10" type="Integer">
    <value>
      $400
    </value>
  </const>
  <const name="EAMD_SEP_FLAG" type="Integer">
    <value>
      $800
    </value>
  </const>
  <const name="EAMD_BIT_12" type="Integer">
    <value>
      $1000
    </value>
  </const>
  <const name="EAMD_PGE_FLAG" type="Integer">
    <value>
      $2000
    </value>
  </const>
  <const name="EAMD_BIT_14" type="Integer">
    <value>
      $4000
    </value>
  </const>
  <const name="EAMD_ICMOV_FLAG" type="Integer">
    <value>
      $8000
    </value>
  </const>
  <const name="EAMD_FCMOV_FLAG" type="Integer">
    <value>
      $10000
    </value>
  </const>
  <const name="EAMD_BIT_17" type="Integer">
    <value>
      $20000
    </value>
  </const>
  <const name="EAMD_BIT_18" type="Integer">
    <value>
      $40000
    </value>
  </const>
  <const name="EAMD_BIT_19" type="Integer">
    <value>
      $80000
    </value>
  </const>
  <const name="EAMD_BIT_20" type="Integer">
    <value>
      $100000
    </value>
  </const>
  <const name="EAMD_BIT_21" type="Integer">
    <value>
      $200000
    </value>
  </const>
  <const name="EAMD_BIT_22" type="Integer">
    <value>
      $400000
    </value>
  </const>
  <const name="EAMD_MMX_FLAG" type="Integer">
    <value>
      $800000
    </value>
  </const>
  <const name="EAMD_BIT_24" type="Integer">
    <value>
      $1000000
    </value>
  </const>
  <const name="EAMD_BIT_25" type="Integer">
    <value>
      $2000000
    </value>
  </const>
  <const name="EAMD_BIT_26" type="Integer">
    <value>
      $4000000
    </value>
  </const>
  <const name="EAMD_BIT_27" type="Integer">
    <value>
      $8000000
    </value>
  </const>
  <const name="EAMD_BIT_28" type="Integer">
    <value>
      $10000000
    </value>
  </const>
  <const name="EAMD_BIT_29" type="Integer">
    <value>
      $20000000
    </value>
  </const>
  <const name="EAMD_BIT_30" type="Integer">
    <value>
      $40000000
    </value>
  </const>
  <const name="EAMD_3DNOW_FLAG" type="Cardinal">
    <value>
      $80000000
    </value>
  </const>
  <const name="CYRIX_FPU_FLAG" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="CYRIX_VME_FLAG" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="CYRIX_DE_FLAG" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="CYRIX_PSE_FLAG" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="CYRIX_TSC_FLAG" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="CYRIX_MSR_FLAG" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="CYRIX_PAE_FLAG" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="CYRIX_MCE_FLAG" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="CYRIX_CX8_FLAG" type="Integer">
    <value>
      $100
    </value>
  </const>
  <const name="CYRIX_APIC_FLAG" type="Integer">
    <value>
      $200
    </value>
  </const>
  <const name="CYRIX_BIT_10" type="Integer">
    <value>
      $400
    </value>
  </const>
  <const name="CYRIX_BIT_11" type="Integer">
    <value>
      $800
    </value>
  </const>
  <const name="CYRIX_MTRR_FLAG" type="Integer">
    <value>
      $1000
    </value>
  </const>
  <const name="CYRIX_PGE_FLAG" type="Integer">
    <value>
      $2000
    </value>
  </const>
  <const name="CYRIX_MCA_FLAG" type="Integer">
    <value>
      $4000
    </value>
  </const>
  <const name="CYRIX_CMOV_FLAG" type="Integer">
    <value>
      $8000
    </value>
  </const>
  <const name="CYRIX_BIT_16" type="Integer">
    <value>
      $10000
    </value>
  </const>
  <const name="CYRIX_BIT_17" type="Integer">
    <value>
      $20000
    </value>
  </const>
  <const name="CYRIX_BIT_18" type="Integer">
    <value>
      $40000
    </value>
  </const>
  <const name="CYRIX_BIT_19" type="Integer">
    <value>
      $80000
    </value>
  </const>
  <const name="CYRIX_BIT_20" type="Integer">
    <value>
      $100000
    </value>
  </const>
  <const name="CYRIX_BIT_21" type="Integer">
    <value>
      $200000
    </value>
  </const>
  <const name="CYRIX_BIT_22" type="Integer">
    <value>
      $400000
    </value>
  </const>
  <const name="CYRIX_MMX_FLAG" type="Integer">
    <value>
      $800000
    </value>
  </const>
  <const name="CYRIX_BIT_24" type="Integer">
    <value>
      $1000000
    </value>
  </const>
  <const name="CYRIX_BIT_25" type="Integer">
    <value>
      $2000000
    </value>
  </const>
  <const name="CYRIX_BIT_26" type="Integer">
    <value>
      $4000000
    </value>
  </const>
  <const name="CYRIX_BIT_27" type="Integer">
    <value>
      $8000000
    </value>
  </const>
  <const name="CYRIX_BIT_28" type="Integer">
    <value>
      $10000000
    </value>
  </const>
  <const name="CYRIX_BIT_29" type="Integer">
    <value>
      $20000000
    </value>
  </const>
  <const name="CYRIX_BIT_30" type="Integer">
    <value>
      $40000000
    </value>
  </const>
  <const name="CYRIX_BIT_31" type="Cardinal">
    <value>
      $80000000
    </value>
  </const>
  <const name="ECYRIX_FPU_FLAG" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="ECYRIX_VME_FLAG" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="ECYRIX_DE_FLAG" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="ECYRIX_PSE_FLAG" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="ECYRIX_TSC_FLAG" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="ECYRIX_MSR_FLAG" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="ECYRIX_PAE_FLAG" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="ECYRIX_MCE_FLAG" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="ECYRIX_CX8_FLAG" type="Integer">
    <value>
      $100
    </value>
  </const>
  <const name="ECYRIX_APIC_FLAG" type="Integer">
    <value>
      $200
    </value>
  </const>
  <const name="ECYRIX_SEP_FLAG" type="Integer">
    <value>
      $400
    </value>
  </const>
  <const name="ECYRIX_BIT_11" type="Integer">
    <value>
      $800
    </value>
  </const>
  <const name="ECYRIX_MTRR_FLAG" type="Integer">
    <value>
      $1000
    </value>
  </const>
  <const name="ECYRIX_PGE_FLAG" type="Integer">
    <value>
      $2000
    </value>
  </const>
  <const name="ECYRIX_MCA_FLAG" type="Integer">
    <value>
      $4000
    </value>
  </const>
  <const name="ECYRIX_ICMOV_FLAG" type="Integer">
    <value>
      $8000
    </value>
  </const>
  <const name="ECYRIX_FCMOV_FLAG" type="Integer">
    <value>
      $10000
    </value>
  </const>
  <const name="ECYRIX_BIT_17" type="Integer">
    <value>
      $20000
    </value>
  </const>
  <const name="ECYRIX_BIT_18" type="Integer">
    <value>
      $40000
    </value>
  </const>
  <const name="ECYRIX_BIT_19" type="Integer">
    <value>
      $80000
    </value>
  </const>
  <const name="ECYRIX_BIT_20" type="Integer">
    <value>
      $100000
    </value>
  </const>
  <const name="ECYRIX_BIT_21" type="Integer">
    <value>
      $200000
    </value>
  </const>
  <const name="ECYRIX_BIT_22" type="Integer">
    <value>
      $400000
    </value>
  </const>
  <const name="ECYRIX_MMX_FLAG" type="Integer">
    <value>
      $800000
    </value>
  </const>
  <const name="ECYRIX_EMMX_FLAG" type="Integer">
    <value>
      $1000000
    </value>
  </const>
  <const name="ECYRIX_BIT_25" type="Integer">
    <value>
      $2000000
    </value>
  </const>
  <const name="ECYRIX_BIT_26" type="Integer">
    <value>
      $4000000
    </value>
  </const>
  <const name="ECYRIX_BIT_27" type="Integer">
    <value>
      $8000000
    </value>
  </const>
  <const name="ECYRIX_BIT_28" type="Integer">
    <value>
      $10000000
    </value>
  </const>
  <const name="ECYRIX_BIT_29" type="Integer">
    <value>
      $20000000
    </value>
  </const>
  <const name="ECYRIX_BIT_30" type="Integer">
    <value>
      $40000000
    </value>
  </const>
  <const name="ECYRIX_BIT_31" type="Cardinal">
    <value>
      $80000000
    </value>
  </const>
  <const name="IntelCacheDescription" visibility="public" />
  <const name="rtSystem" type="TFreeSysResKind">
    <value>
      rtSystem
    </value>
  </const>
  <const name="rtGdi" type="TFreeSysResKind">
    <value>
      rtGdi
    </value>
  </const>
  <const name="rtUser" type="TFreeSysResKind">
    <value>
      rtUser
    </value>
  </const>
  <enum name="TFreeSysResKind">
    <element name="rtSystem" />
    <element name="rtGdi" />
    <element name="rtUser" />
  </enum>
  <struct name="TFreeSystemResources">
    <field name="SystemRes" type="Integer" visibility="public" />
    <field name="GdiRes" type="Integer" visibility="public" />
    <field name="UserRes" type="Integer" visibility="public" />
  </struct>
  <variable name="ProcessorCount" type="Cardinal" visibility="public" />
  <variable name="AllocGranularity" type="Cardinal" visibility="public" />
  <variable name="PageSize" type="Cardinal" visibility="public" />
  <function name="DelEnvironmentVar" visibility="public">
    <parameters>
      <parameter name="Name" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="ExpandEnvironmentVar" visibility="public">
    <parameters>
      <parameter name="Value" type="string" paramflags="var" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetEnvironmentVar" visibility="public">
    <parameters>
      <parameter name="Name" type="string" paramflags="const" />
      <parameter name="Value" type="string" paramflags="var" />
      <parameter name="Expand" type="Boolean" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetEnvironmentVars" visibility="public">
    <parameters>
      <parameter name="Vars" type="TStrings" paramflags="const" />
      <parameter name="Expand" type="Boolean" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="SetEnvironmentVar" visibility="public">
    <parameters>
      <parameter name="Name" type="string" paramflags="const" />
      <parameter name="Value" type="string" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CreateEnvironmentBlock" visibility="public">
    <parameters>
      <parameter name="Options" type="TEnvironmentOptions" paramflags="const" />
      <parameter name="AdditionalVars" type="TStrings" paramflags="const" />
      <retval type="PAnsiChar" />
    </parameters>
  </function>
  <function name="GetCommonFilesFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetCurrentFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetProgramFilesFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetWindowsFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetWindowsSystemFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetWindowsTempFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetDesktopFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetProgramsFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetPersonalFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetFavoritesFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetStartupFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetRecentFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetSendToFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetStartmenuFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetDesktopDirectoryFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetNethoodFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetFontsFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetCommonStartmenuFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetCommonProgramsFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetCommonStartupFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetCommonDesktopdirectoryFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetCommonAppdataFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetAppdataFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetPrinthoodFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetCommonFavoritesFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetTemplatesFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetInternetCacheFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetCookiesFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetHistoryFolder" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetVolumeName" visibility="public">
    <parameters>
      <parameter name="Drive" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetVolumeSerialNumber" visibility="public">
    <parameters>
      <parameter name="Drive" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetVolumeFileSystem" visibility="public">
    <parameters>
      <parameter name="Drive" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetIPAddress" visibility="public">
    <parameters>
      <parameter name="HostName" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetLocalComputerName" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetLocalUserName" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetRegisteredCompany" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetRegisteredOwner" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetUserDomainName" visibility="public">
    <parameters>
      <parameter name="CurUser" type="string" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetDomainName" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetBIOSName" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetBIOSCopyright" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetBIOSExtendedInfo" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetBIOSDate" visibility="public">
    <parameters>
      <retval type="TDateTime" />
    </parameters>
  </function>
  <function name="RunningProcessesList" visibility="public">
    <parameters>
      <parameter name="List" type="TStrings" paramflags="const" />
      <parameter name="FullPath" type="Boolean">
        <value>
          True
        </value>
      </parameter>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="LoadedModulesList" visibility="public">
    <parameters>
      <parameter name="List" type="TStrings" paramflags="const" />
      <parameter name="ProcessID" type="Cardinal" />
      <parameter name="HandlesOnly" type="Boolean">
        <value>
          False
        </value>
      </parameter>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetTasksList" visibility="public">
    <parameters>
      <parameter name="List" type="TStrings" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="ModuleFromAddr" visibility="public">
    <parameters>
      <parameter name="Addr" type="Pointer" paramflags="const" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="IsSystemModule" visibility="public">
    <parameters>
      <parameter name="Module" type="Cardinal" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsMainAppWindow" visibility="public">
    <parameters>
      <parameter name="Wnd" type="HWND" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsWindowResponding" visibility="public">
    <parameters>
      <parameter name="Wnd" type="HWND" />
      <parameter name="Timeout" type="Integer" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetWindowIcon" visibility="public">
    <parameters>
      <parameter name="Wnd" type="HWND" />
      <parameter name="LargeIcon" type="Boolean" />
      <retval type="HICON" />
    </parameters>
  </function>
  <function name="GetWindowCaption" visibility="public">
    <parameters>
      <parameter name="Wnd" type="HWND" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="TerminateApp" visibility="public">
    <parameters>
      <parameter name="ProcessID" type="Cardinal" />
      <parameter name="Timeout" type="Integer" />
      <retval type="TJclTerminateAppResult" />
    </parameters>
  </function>
  <function name="TerminateTask" visibility="public">
    <parameters>
      <parameter name="Wnd" type="HWND" />
      <parameter name="Timeout" type="Integer" />
      <retval type="TJclTerminateAppResult" />
    </parameters>
  </function>
  <function name="GetProcessNameFromWnd" visibility="public">
    <parameters>
      <parameter name="Wnd" type="HWND" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetPidFromProcessName" visibility="public">
    <parameters>
      <parameter name="ProcessName" type="string" paramflags="const" />
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="GetProcessNameFromPid" visibility="public">
    <parameters>
      <parameter name="PID" type="Cardinal" />
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetMainAppWndFromPid" visibility="public">
    <parameters>
      <parameter name="PID" type="Cardinal" />
      <retval type="HWND" />
    </parameters>
  </function>
  <function name="GetShellProcessName" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetShellProcessHandle" visibility="public">
    <parameters>
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="GetWindowsVersion" visibility="public">
    <parameters>
      <retval type="TWindowsVersion" />
    </parameters>
  </function>
  <function name="NtProductType" visibility="public">
    <parameters>
      <retval type="TNtProductType" />
    </parameters>
  </function>
  <function name="GetWindowsVersionString" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="NtProductTypeString" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetWindowsServicePackVersion" visibility="public">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetWindowsServicePackVersionString" visibility="public">
    <parameters>
      <retval type="string" />
    </parameters>
  </function>
  <function name="GetMacAddresses" visibility="public">
    <parameters>
      <parameter name="Machine" type="string" paramflags="const" />
      <parameter name="Addresses" type="TStrings" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="ReadTimeStampCounter" visibility="public">
    <parameters>
      <retval type="Int64" />
    </parameters>
  </function>
  <function name="GetIntelCacheDescription" visibility="public">
    <parameters>
      <parameter name="D" type="Byte" paramflags="const" />
      <retval type="string" />
    </parameters>
  </function>
  <procedure name="GetCpuInfo" visibility="public">
    <parameters>
      <parameter name="CpuInfo" type="TCpuInfo" paramflags="var" />
    </parameters>
  </procedure>
  <function name="RoundFrequency" visibility="public">
    <parameters>
      <parameter name="Frequency" type="Integer" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetCPUSpeed" visibility="public">
    <parameters>
      <parameter name="CpuSpeed" type="TFreqInfo" paramflags="var" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="CPUID" visibility="public">
    <parameters>
      <retval type="TCpuInfo" />
    </parameters>
  </function>
  <function name="TestFDIVInstruction" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
  <procedure name="RoundToAllocGranularity64" visibility="public">
    <parameters>
      <parameter name="Value" type="Int64" paramflags="var" />
      <parameter name="Up" type="Boolean" />
    </parameters>
  </procedure>
  <procedure name="RoundToAllocGranularityPtr" visibility="public">
    <parameters>
      <parameter name="Value" type="Pointer" paramflags="var" />
      <parameter name="Up" type="Boolean" />
    </parameters>
  </procedure>
  <function name="GetAPMLineStatus" visibility="public">
    <parameters>
      <retval type="TAPMLineStatus" />
    </parameters>
  </function>
  <function name="GetAPMBatteryFlag" visibility="public">
    <parameters>
      <retval type="TAPMBatteryFlag" />
    </parameters>
  </function>
  <function name="GetAPMBatteryLifePercent" visibility="public">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetAPMBatteryLifeTime" visibility="public">
    <parameters>
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="GetAPMBatteryFullLifeTime" visibility="public">
    <parameters>
      <retval type="Cardinal" />
    </parameters>
  </function>
  <function name="GetMaxAppAddress" visibility="public">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetMinAppAddress" visibility="public">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetMemoryLoad" visibility="public">
    <parameters>
      <retval type="Byte" />
    </parameters>
  </function>
  <function name="GetSwapFileSize" visibility="public">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetSwapFileUsage" visibility="public">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetTotalPhysicalMemory" visibility="public">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetFreePhysicalMemory" visibility="public">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetTotalPageFileMemory" visibility="public">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetFreePageFileMemory" visibility="public">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetTotalVirtualMemory" visibility="public">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetFreeVirtualMemory" visibility="public">
    <parameters>
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetKeyState" visibility="public">
    <parameters>
      <parameter name="VirtualKey" type="Cardinal" paramflags="const" />
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetNumLockKeyState" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetScrollLockKeyState" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetCapsLockKeyState" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="IsSystemResourcesMeterPresent" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="GetFreeSystemResources" visibility="public" procflags="overload">
    <parameters>
      <parameter name="ResourceType" type="TFreeSysResKind" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="GetFreeSystemResources" visibility="public" procflags="overload">
    <parameters>
      <retval type="TFreeSystemResources" />
    </parameters>
  </function>
</namespace>
