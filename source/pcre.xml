<?xml version="1.0" encoding="utf-8"?>
<namespace name="pcre">
  <const name="MAX_PATTERN_LENGTH" type="Integer">
    <value>
      $10003
    </value>
  </const>
  <const name="MAX_QUANTIFY_REPEAT" type="Integer">
    <value>
      $10000
    </value>
  </const>
  <const name="MAX_CAPTURE_COUNT" type="Integer">
    <value>
      $FFFF
    </value>
  </const>
  <const name="MAX_NESTING_DEPTH" type="Integer">
    <value>
      $C8
    </value>
  </const>
  <const name="PCRE_CASELESS" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="PCRE_MULTILINE" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="PCRE_DOTALL" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="PCRE_EXTENDED" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="PCRE_ANCHORED" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="PCRE_DOLLAR_ENDONLY" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="PCRE_EXTRA" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="PCRE_NOTBOL" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="PCRE_NOTEOL" type="Integer">
    <value>
      $100
    </value>
  </const>
  <const name="PCRE_UNGREEDY" type="Integer">
    <value>
      $200
    </value>
  </const>
  <const name="PCRE_NOTEMPTY" type="Integer">
    <value>
      $400
    </value>
  </const>
  <const name="PCRE_UTF8" type="Integer">
    <value>
      $800
    </value>
  </const>
  <const name="PCRE_NO_AUTO_CAPTURE" type="Integer">
    <value>
      $1000
    </value>
  </const>
  <const name="PCRE_NO_UTF8_CHECK" type="Integer">
    <value>
      $2000
    </value>
  </const>
  <const name="PCRE_AUTO_CALLOUT" type="Integer">
    <value>
      $4000
    </value>
  </const>
  <const name="PCRE_PARTIAL" type="Integer">
    <value>
      $8000
    </value>
  </const>
  <const name="PCRE_DFA_SHORTEST" type="Integer">
    <value>
      $10000
    </value>
  </const>
  <const name="PCRE_DFA_RESTART" type="Integer">
    <value>
      $20000
    </value>
  </const>
  <const name="PCRE_FIRSTLINE" type="Integer">
    <value>
      $40000
    </value>
  </const>
  <const name="PCRE_DUPNAMES" type="Integer">
    <value>
      $80000
    </value>
  </const>
  <const name="PCRE_NEWLINE_CR" type="Integer">
    <value>
      $100000
    </value>
  </const>
  <const name="PCRE_NEWLINE_LF" type="Integer">
    <value>
      $200000
    </value>
  </const>
  <const name="PCRE_NEWLINE_CRLF" type="Integer">
    <value>
      $300000
    </value>
  </const>
  <const name="PCRE_NEWLINE_ANY" type="Integer">
    <value>
      $400000
    </value>
  </const>
  <const name="PCRE_NEWLINE_ANYCRLF" type="Integer">
    <value>
      $500000
    </value>
  </const>
  <const name="PCRE_BSR_ANYCRLF" type="Integer">
    <value>
      $800000
    </value>
  </const>
  <const name="PCRE_BSR_UNICODE" type="Integer">
    <value>
      $1000000
    </value>
  </const>
  <const name="PCRE_JAVASCRIPT_COMPAT" type="Integer">
    <value>
      $2000000
    </value>
  </const>
  <const name="PCRE_NO_START_OPTIMIZE" type="Integer">
    <value>
      $4000000
    </value>
  </const>
  <const name="PCRE_NO_START_OPTIMISE" type="Integer">
    <value>
      $4000000
    </value>
  </const>
  <const name="PCRE_ERROR_NOMATCH" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="PCRE_ERROR_NULL" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="PCRE_ERROR_BADOPTION" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="PCRE_ERROR_BADMAGIC" type="Integer">
    <value>
      $FFFFFFFC
    </value>
  </const>
  <const name="PCRE_ERROR_UNKNOWN_NODE" type="Integer">
    <value>
      $FFFFFFFB
    </value>
  </const>
  <const name="PCRE_ERROR_NOMEMORY" type="Integer">
    <value>
      $FFFFFFFA
    </value>
  </const>
  <const name="PCRE_ERROR_NOSUBSTRING" type="Integer">
    <value>
      $FFFFFFF9
    </value>
  </const>
  <const name="PCRE_ERROR_MATCHLIMIT" type="Integer">
    <value>
      $FFFFFFF8
    </value>
  </const>
  <const name="PCRE_ERROR_CALLOUT" type="Integer">
    <value>
      $FFFFFFF7
    </value>
  </const>
  <const name="PCRE_ERROR_BADUTF8" type="Integer">
    <value>
      $FFFFFFF6
    </value>
  </const>
  <const name="PCRE_ERROR_BADUTF8_OFFSET" type="Integer">
    <value>
      $FFFFFFF5
    </value>
  </const>
  <const name="PCRE_ERROR_PARTIAL" type="Integer">
    <value>
      $FFFFFFF4
    </value>
  </const>
  <const name="PCRE_ERROR_BADPARTIAL" type="Integer">
    <value>
      $FFFFFFF3
    </value>
  </const>
  <const name="PCRE_ERROR_INTERNAL" type="Integer">
    <value>
      $FFFFFFF2
    </value>
  </const>
  <const name="PCRE_ERROR_BADCOUNT" type="Integer">
    <value>
      $FFFFFFF1
    </value>
  </const>
  <const name="PCRE_ERROR_DFA_UITEM" type="Integer">
    <value>
      $FFFFFFF0
    </value>
  </const>
  <const name="PCRE_ERROR_DFA_UCOND" type="Integer">
    <value>
      $FFFFFFEF
    </value>
  </const>
  <const name="PCRE_ERROR_DFA_UMLIMIT" type="Integer">
    <value>
      $FFFFFFEE
    </value>
  </const>
  <const name="PCRE_ERROR_DFA_WSSIZE" type="Integer">
    <value>
      $FFFFFFED
    </value>
  </const>
  <const name="PCRE_ERROR_DFA_RECURSE" type="Integer">
    <value>
      $FFFFFFEC
    </value>
  </const>
  <const name="PCRE_ERROR_RECURSIONLIMIT" type="Integer">
    <value>
      $FFFFFFEB
    </value>
  </const>
  <const name="PCRE_ERROR_NULLWSLIMIT" type="Integer">
    <value>
      $FFFFFFEA
    </value>
  </const>
  <const name="PCRE_ERROR_BADNEWLINE" type="Integer">
    <value>
      $FFFFFFE9
    </value>
  </const>
  <const name="PCRE_INFO_OPTIONS" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="PCRE_INFO_SIZE" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="PCRE_INFO_CAPTURECOUNT" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="PCRE_INFO_BACKREFMAX" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="PCRE_INFO_FIRSTCHAR" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="PCRE_INFO_FIRSTTABLE" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="PCRE_INFO_LASTLITERAL" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="PCRE_INFO_NAMEENTRYSIZE" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="PCRE_INFO_NAMECOUNT" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="PCRE_INFO_NAMETABLE" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="PCRE_INFO_STUDYSIZE" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="PCRE_INFO_DEFAULT_TABLES" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="PCRE_INFO_OKPARTIAL" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="PCRE_INFO_JCHANGED" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="PCRE_INFO_HASCRORLF" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="PCRE_CONFIG_UTF8" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="PCRE_CONFIG_NEWLINE" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="PCRE_CONFIG_LINK_SIZE" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="PCRE_CONFIG_POSIX_MALLOC_THRESHOLD" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="PCRE_CONFIG_MATCH_LIMIT" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="PCRE_CONFIG_STACKRECURSE" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="PCRE_CONFIG_UNICODE_PROPERTIES" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="PCRE_CONFIG_MATCH_LIMIT_RECURSION" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="PCRE_CONFIG_BSR" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="PCRE_EXTRA_STUDY_DATA" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="PCRE_EXTRA_MATCH_LIMIT" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="PCRE_EXTRA_CALLOUT_DATA" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="PCRE_EXTRA_TABLES" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="PCRE_EXTRA_MATCH_LIMIT_RECURSION" type="Integer">
    <value>
      $10
    </value>
  </const>
  <pointer name="PPAnsiChar" type="PAnsiChar" indircnt="1" />
  <pointer name="PPPAnsiChar" type="PPAnsiChar" indircnt="1" />
  <pointer name="PInteger" type="Integer" indircnt="1" />
  <struct name="real_pcre" packed="true">
  </struct>
  <struct name="TPCRE" alias="real_pcre" namespace="pcre" packed="true">
  </struct>
  <pointer name="PPCRE" type="real_pcre" indircnt="1" />
  <struct name="real_pcre_extra" packed="true">
    <field name="flags" type="Cardinal" visibility="public" />
    <field name="study_data" type="Pointer" visibility="public" />
    <field name="match_limit" type="Cardinal" visibility="public" />
    <field name="callout_data" type="Pointer" visibility="public" />
    <field name="tables" type="PAnsiChar" visibility="public" />
    <field name="match_limit_recursion" type="Cardinal" visibility="public" />
  </struct>
  <struct name="TPCREExtra" alias="real_pcre_extra" namespace="pcre" packed="true">
    <field name="flags" type="Cardinal" visibility="public" />
    <field name="study_data" type="Pointer" visibility="public" />
    <field name="match_limit" type="Cardinal" visibility="public" />
    <field name="callout_data" type="Pointer" visibility="public" />
    <field name="tables" type="PAnsiChar" visibility="public" />
    <field name="match_limit_recursion" type="Cardinal" visibility="public" />
  </struct>
  <pointer name="PPCREExtra" type="real_pcre_extra" indircnt="1" />
  <struct name="pcre_callout_block" packed="true">
    <field name="version" type="Integer" visibility="public" />
    <field name="callout_number" type="Integer" visibility="public" />
    <field name="offset_vector" type="PInteger" visibility="public" />
    <field name="subject" type="PAnsiChar" visibility="public" />
    <field name="subject_length" type="Integer" visibility="public" />
    <field name="start_match" type="Integer" visibility="public" />
    <field name="current_position" type="Integer" visibility="public" />
    <field name="capture_top" type="Integer" visibility="public" />
    <field name="capture_last" type="Integer" visibility="public" />
    <field name="callout_data" type="Pointer" visibility="public" />
    <field name="pattern_position" type="Integer" visibility="public" />
    <field name="next_item_length" type="Integer" visibility="public" />
  </struct>
  <variable name="pcre_malloc_func" visibility="public" />
  <variable name="pcre_free_func" visibility="public" />
  <variable name="pcre_stack_malloc_func" visibility="public" />
  <variable name="pcre_stack_free_func" visibility="public" />
  <variable name="pcre_callout_func" visibility="public" />
  <variable name="LibNotLoadedHandler" type="TPCRELibNotLoadedHandler" visibility="public" />
  <procedure name="SetPCREMallocCallback" visibility="public">
    <parameters>
      <parameter name="Value" type="pcre_malloc_callback" paramflags="const" />
    </parameters>
  </procedure>
  <function name="GetPCREMallocCallback" visibility="public">
    <parameters>
      <retval type="pcre_malloc_callback" />
    </parameters>
  </function>
  <function name="CallPCREMalloc" visibility="public">
    <parameters>
      <parameter name="Size" type="Integer" />
      <retval type="Pointer" />
    </parameters>
  </function>
  <procedure name="SetPCREFreeCallback" visibility="public">
    <parameters>
      <parameter name="Value" type="pcre_free_callback" paramflags="const" />
    </parameters>
  </procedure>
  <function name="GetPCREFreeCallback" visibility="public">
    <parameters>
      <retval type="pcre_free_callback" />
    </parameters>
  </function>
  <procedure name="CallPCREFree" visibility="public">
    <parameters>
      <parameter name="P" type="Pointer" />
    </parameters>
  </procedure>
  <procedure name="SetPCREStackMallocCallback" visibility="public">
    <parameters>
      <parameter name="Value" type="pcre_stack_malloc_callback" paramflags="const" />
    </parameters>
  </procedure>
  <function name="GetPCREStackMallocCallback" visibility="public">
    <parameters>
      <retval type="pcre_stack_malloc_callback" />
    </parameters>
  </function>
  <function name="CallPCREStackMalloc" visibility="public">
    <parameters>
      <parameter name="Size" type="Integer" />
      <retval type="Pointer" />
    </parameters>
  </function>
  <procedure name="SetPCREStackFreeCallback" visibility="public">
    <parameters>
      <parameter name="Value" type="pcre_stack_free_callback" paramflags="const" />
    </parameters>
  </procedure>
  <function name="GetPCREStackFreeCallback" visibility="public">
    <parameters>
      <retval type="pcre_stack_free_callback" />
    </parameters>
  </function>
  <procedure name="CallPCREStackFree" visibility="public">
    <parameters>
      <parameter name="P" type="Pointer" />
    </parameters>
  </procedure>
  <procedure name="SetPCRECalloutCallback" visibility="public">
    <parameters>
      <parameter name="Value" type="pcre_callout_callback" paramflags="const" />
    </parameters>
  </procedure>
  <function name="GetPCRECalloutCallback" visibility="public">
    <parameters>
      <retval type="pcre_callout_callback" />
    </parameters>
  </function>
  <function name="CallPCRECallout" visibility="public">
    <parameters>
      <parameter name="callout_block" type="pcre_callout_block" paramflags="var" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="IsPCRELoaded" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
  <function name="LoadPCRE" visibility="public">
    <parameters>
      <retval type="Boolean" />
    </parameters>
  </function>
  <procedure name="UnloadPCRE" visibility="public">
  </procedure>
  <procedure name="pcre_dispose" visibility="public">
    <parameters>
      <parameter name="pattern" type="Pointer" />
      <parameter name="hints" type="Pointer" />
      <parameter name="chartable" type="Pointer" />
    </parameters>
  </procedure>
  <function name="pcre_compile" visibility="public">
    <parameters>
      <parameter name="pattern" type="PAnsiChar" paramflags="const" />
      <parameter name="options" type="Integer" />
      <parameter name="errptr" type="PPAnsiChar" paramflags="const" />
      <parameter name="erroffset" type="PInteger" />
      <parameter name="tableptr" type="PAnsiChar" paramflags="const" />
      <retval type="PPCRE" />
    </parameters>
  </function>
  <function name="pcre_compile2" visibility="public">
    <parameters>
      <parameter name="pattern" type="PAnsiChar" paramflags="const" />
      <parameter name="options" type="Integer" />
      <parameter name="errorcodeptr" type="PInteger" paramflags="const" />
      <parameter name="errorptr" type="PPAnsiChar" paramflags="const" />
      <parameter name="erroroffset" type="PInteger" />
      <parameter name="tables" type="PAnsiChar" paramflags="const" />
      <retval type="PPCRE" />
    </parameters>
  </function>
  <function name="pcre_config" visibility="public">
    <parameters>
      <parameter name="what" type="Integer" />
      <parameter name="where" type="Pointer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="pcre_dfa_exec" visibility="public">
    <parameters>
      <parameter name="argument_re" type="PPCRE" paramflags="const" />
      <parameter name="extra_data" type="PPCREExtra" paramflags="const" />
      <parameter name="subject" type="PAnsiChar" paramflags="const" />
      <parameter name="length" type="Integer" />
      <parameter name="start_offset" type="Integer" />
      <parameter name="options" type="Integer" />
      <parameter name="offsets" type="PInteger" />
      <parameter name="offsetcount" type="Integer" />
      <parameter name="workspace" type="PInteger" />
      <parameter name="wscount" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="pcre_exec" visibility="public">
    <parameters>
      <parameter name="code" type="PPCRE" paramflags="const" />
      <parameter name="extra" type="PPCREExtra" paramflags="const" />
      <parameter name="subject" type="PAnsiChar" paramflags="const" />
      <parameter name="length" type="Integer" />
      <parameter name="startoffset" type="Integer" />
      <parameter name="options" type="Integer" />
      <parameter name="ovector" type="PInteger" />
      <parameter name="ovecsize" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="pcre_fullinfo" visibility="public">
    <parameters>
      <parameter name="code" type="PPCRE" paramflags="const" />
      <parameter name="extra" type="PPCREExtra" paramflags="const" />
      <parameter name="what" type="Integer" />
      <parameter name="where" type="Pointer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="pcre_get_stringnumber" visibility="public">
    <parameters>
      <parameter name="code" type="PPCRE" paramflags="const" />
      <parameter name="stringname" type="PAnsiChar" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="pcre_get_stringtable_entries" visibility="public">
    <parameters>
      <parameter name="code" type="PPCRE" paramflags="const" />
      <parameter name="stringname" type="PAnsiChar" paramflags="const" />
      <parameter name="firstptr" type="PPAnsiChar" />
      <parameter name="lastptr" type="PPAnsiChar" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="pcre_copy_substring" visibility="public">
    <parameters>
      <parameter name="subject" type="PAnsiChar" paramflags="const" />
      <parameter name="ovector" type="PInteger" />
      <parameter name="stringcount" type="Integer" />
      <parameter name="stringnumber" type="Integer" />
      <parameter name="buffer" type="PAnsiChar" />
      <parameter name="buffersize" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="pcre_copy_named_substring" visibility="public">
    <parameters>
      <parameter name="code" type="PPCRE" paramflags="const" />
      <parameter name="subject" type="PAnsiChar" paramflags="const" />
      <parameter name="ovector" type="PInteger" />
      <parameter name="stringcount" type="Integer" />
      <parameter name="stringname" type="PAnsiChar" paramflags="const" />
      <parameter name="buffer" type="PAnsiChar" />
      <parameter name="size" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="pcre_get_substring_list" visibility="public">
    <parameters>
      <parameter name="subject" type="PAnsiChar" paramflags="const" />
      <parameter name="ovector" type="PInteger" />
      <parameter name="stringcount" type="Integer" />
      <parameter name="listptr" type="PPPAnsiChar" />
      <retval type="Integer" />
    </parameters>
  </function>
  <procedure name="pcre_free_substring_list" visibility="public">
    <parameters>
      <parameter name="stringlistptr" type="PPAnsiChar" />
    </parameters>
  </procedure>
  <function name="pcre_get_substring" visibility="public">
    <parameters>
      <parameter name="subject" type="PAnsiChar" paramflags="const" />
      <parameter name="ovector" type="PInteger" />
      <parameter name="stringcount" type="Integer" />
      <parameter name="stringnumber" type="Integer" />
      <parameter name="stringptr" type="PPAnsiChar" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="pcre_get_named_substring" visibility="public">
    <parameters>
      <parameter name="code" type="PPCRE" paramflags="const" />
      <parameter name="subject" type="PAnsiChar" paramflags="const" />
      <parameter name="ovector" type="PInteger" />
      <parameter name="stringcount" type="Integer" />
      <parameter name="stringname" type="PAnsiChar" paramflags="const" />
      <parameter name="stringptr" type="PPAnsiChar" paramflags="const" />
      <retval type="Integer" />
    </parameters>
  </function>
  <procedure name="pcre_free_substring" visibility="public">
    <parameters>
      <parameter name="stringptr" type="PAnsiChar" />
    </parameters>
  </procedure>
  <function name="pcre_info" visibility="public">
    <parameters>
      <parameter name="code" type="PPCRE" paramflags="const" />
      <parameter name="optptr" type="PInteger" />
      <parameter name="firstcharptr" type="PInteger" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="pcre_maketables" visibility="public">
    <parameters>
      <retval type="PAnsiChar" />
    </parameters>
  </function>
  <function name="pcre_refcount" visibility="public">
    <parameters>
      <parameter name="argument_re" type="PPCRE" />
      <parameter name="adjust" type="Integer" />
      <retval type="Integer" />
    </parameters>
  </function>
  <function name="pcre_study" visibility="public">
    <parameters>
      <parameter name="code" type="PPCRE" paramflags="const" />
      <parameter name="options" type="Integer" />
      <parameter name="errptr" type="PPAnsiChar" paramflags="const" />
      <retval type="PPCREExtra" />
    </parameters>
  </function>
  <function name="pcre_version" visibility="public">
    <parameters>
      <retval type="PAnsiChar" />
    </parameters>
  </function>
</namespace>
