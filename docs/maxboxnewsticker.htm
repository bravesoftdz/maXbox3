<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
<META NAME="GENERATOR" Content="maXbox HTML; Standard Template">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<TITLE>maXbox news ticker</TITLE>
<Style>Body, TD {font-family: "Verdana"; font-size: 10pt};
PRE {font-size: 10pt; margin-top: 0; margin-bottom: 0}
TR.odd {background-color: #F8F8F8};
TR.even {background-color: #EEEEEE};
Table.list {background-color: #FFFFFF};
TD {vertical-align : top}
</Style>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<BASEFONT NAME="verdana" Size="2"><Table Border="0" Width="100%" BGColor="#FFFFFF"><TR><TD><Font Color="#000000F"><B>News Ticker Test Site</B></Font></TD></TR></Table><P><B>Applies to</B><Br><A HREF="http://www.softwareschule.ch/maxboxnews.htm">maXbox3 Release Notes</A><P><B>Declaration</B><Br><Font Face="Courier New"><B>constructor</B> Create(<B>const</B> sRegularExpression: <B>string</B>; xFlags: <A HREF="IDH_Type_TniRegularExpressionMatchFlags.htm">TniRegularExpressionMatchFlags</A>);</Font><A Name="Todo"><Br /></A><Font Face="Arial" Color="Red" Size="4"><P><B>Todo News</B></Font><UL><LI><NB1>News: Use curly test brackets to isolate important areas. Allow ID: syntax to name them :news<NB2></LI></UL><Font Color=#FF0000><H3>Implementation</H3></Font> <table border="0" bgcolor="#FFFED9"  style="margin-top: 10; margin-bottom: 10;"> <tr> <td><pre><B>constructor</B> TniExtendedRegularExpression.Create( <B>const</B> sRegularExpression: <B>string</B>;
                                                       xFlags: <A HREF="IDH_Type_TniRegularExpressionMatchFlags.htm">TniRegularExpressionMatchFlags</A>);
<B>var</B>
  sExpression: <B>string</B>;
<B>begin</B>
  <B>inherited</B> Create;

  FoSubExpressions:= TStringList.Create;
  FoMatches:= TStringList.Create;
  FoIdentifiers:= TStringList.Create;

  FsExpression:= sRegularExpression;
  sExpression:= sRegularExpression;
  FxFlags:= xFlags;
  FxSubExpressionFlags:= xFlags + [mfOverlapMatches, mfMultipleMatches]
                                 - [mfLongMatches, mfShortMatches];

  <B>if</B> xFlags * [ mfMultipleMatches, mfOverlapMatches ] &lt;&gt; [] <B>then</B>
    <B>raise</B> EniRegularExpressionError.Create( csNotSupported);

  <B>if</B> mfStartOnly <B>in</B> FxFlags <B>then</B> <B>begin</B>
    Insert( <Font Color="#119911">'^'</Font>, sExpression, 1);
    Exclude( FxSubExpressionFlags, mfStartOnly);
  <B>end</B>;

  <B>if</B> mfFinishOnly <B>in</B> FxFlags <B>then</B> <B>begin</B>
    Insert( <Font Color="#119911">'$'</Font>, sExpression, Length(sExpression));
    Exclude( FxSubExpressionFlags, mfFinishOnly);
  <B>end</B>;

  ParseExpression( sExpression);
<B>End</B>;</pre></td></tr></Table><P><HR>
<TABLE BORDER="0" WIDTH="100%" BGCOLOR="#000000"><TR><TD>
<Font Color=White><Large>HTML generated by <B>mX3 HTML</B></Large></Font>
</TD></TR></Table>
<Small><A HREF="http://www.softwareschule.ch">softwareschule.ch</A></Small><BR><BR></Body></HTML>