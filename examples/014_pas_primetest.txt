program Primtester;

// simple primtester between range _14, locs=37
// has a function and procedure, no globals

function checkPrim(acti: integer): boolean;
var
  j: Integer;
  isprim: boolean;
begin
  isprim:= true;
  for j:= 2 to round(sqrt(acti)) do 
   if ((acti mod j) = 0) then begin
     isprim:= false;
     break
   end;
 result:= isprim;
end;


procedure testPrimNumbers(vrange: integer);
var acti: integer;
begin
  for acti:= 2 to vrange do begin
    inc(acti)
    //writeln('debug count'+inttostr(acti))
    if checkprim(acti) then
      writeln(inttostr(acti))
  end
end;

//main script
begin
  //irange:= strtoint(readln('how great is the range ?'));
    testPrimNumbers(5001);
  //orthogonal and idempotent
end.
