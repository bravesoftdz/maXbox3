Version:0.9
StartHTML:0000000105
EndHTML:0000075436
StartFragment:0000001037
EndFragment:0000075420
<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>mXScriptasHTML</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="generator" content="SynEdit HTML exporter" />
<style type="text/css">
<!--
body { color: #000000; background-color: #FFFFFF; }
.pas1-assembler { }
.pas1-character { text-decoration: underline; }
.pas1-comment { color: #000080; font-style: italic; }
.pas1-float { color: #800080; }
.pas1-hexadecimal { color: #FF00FF; }
.pas1-identifier { }
.pas1-number { color: #FF0000; }
.pas1-preprocessor { font-style: italic; }
.pas1-reservedword { color: #000000; font-weight: bold; }
.pas1-space { }
.pas1-string { color: #008080; }
.pas1-symbol { color: #000000; }
-->
</style>
</head>
<body>
<!--StartFragment--><pre><code><span class="pas1-comment">//Version:0.9 StartHTML:0000000105 EndHTML:0000072924 StartFragment:0000001037 EndFragment:0000072908 
//demo for media player component v
//loads a file and list, bitmap , mp video and so on
//task: delete writeln for add on, async call
//{$R+}{$D-,L-,O+,Q-,R-,Y-,S-} loc's=542, App_366_, Intf=17

</span><span class="pas1-reservedword">program</span><span class="pas1-space"> MP3MediaPlayer3;

</span><span class="pas1-reservedword">type</span><span class="pas1-space"> TWeekDays = (Monday, Tuesday, Wednesday,
                 Thursday, Friday, Saturday, Sunday);
                 
  TID3Rec = </span><span class="pas1-reservedword">record
</span><span class="pas1-space">    Tag     : </span><span class="pas1-reservedword">array</span><span class="pas1-symbol">[</span><span class="pas1-number">0</span><span class="pas1-symbol">..</span><span class="pas1-number">2</span><span class="pas1-symbol">] </span><span class="pas1-reservedword">of</span><span class="pas1-space"> Char;
    Title,
    Artist,
    Comment,
    Album   : </span><span class="pas1-reservedword">array</span><span class="pas1-symbol">[</span><span class="pas1-number">0</span><span class="pas1-symbol">..</span><span class="pas1-number">29</span><span class="pas1-symbol">] </span><span class="pas1-reservedword">of</span><span class="pas1-space"> Char;
    Year    : </span><span class="pas1-reservedword">array</span><span class="pas1-symbol">[</span><span class="pas1-number">0</span><span class="pas1-symbol">..</span><span class="pas1-number">3</span><span class="pas1-symbol">] </span><span class="pas1-reservedword">of</span><span class="pas1-space"> Char;
    Genre   : Byte;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;   

</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> MILLISECONDS = </span><span class="pas1-number">50</span><span class="pas1-symbol">;    
      MEDIAPATH = </span><span class="pas1-string">'D:\kleiner2005\download'</span><span class="pas1-symbol">; 
      BACKBITMAP = </span><span class="pas1-string">'examples\citymax.bmp'</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">var</span><span class="pas1-space"> 
  </span><span class="pas1-comment">//ms: TStringGrid;
</span><span class="pas1-space">  </span><span class="pas1-comment">//mg: TDrawGrid;
</span><span class="pas1-space">  selectFile: </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
  loadlist: TStringlist;
  handle: THandle;
  mPlayer: TMediaPlayer;
  lstbox: TListbox;
  stat: TStatusbar;
  S_Listmode, S_LoadList: Boolean; </span><span class="pas1-comment">//play mp3 list
</span><span class="pas1-space">  chkbox: TCheckbox;
  mbutton: TBitBtn;
  inFrm: TForm;
  Progress: TProgressBar;
  ProgTimer: TTimer;
  
  </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> plaYList; </span><span class="pas1-reservedword">forward</span><span class="pas1-symbol">;



</span><span class="pas1-reservedword">function</span><span class="pas1-space"> GetTextFromFile(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> AFile: </span><span class="pas1-reservedword">String</span><span class="pas1-symbol">; </span><span class="pas1-reservedword">var</span><span class="pas1-space"> ReturnString: </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">): boolean;
</span><span class="pas1-reservedword">var
</span><span class="pas1-space">  fileStream: TFileStream;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  result:= false;
  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> </span><span class="pas1-reservedword">not</span><span class="pas1-space"> fileExists(AFile) </span><span class="pas1-reservedword">then</span><span class="pas1-space"> exit;
  FileStream:= TFileStream.Create(AFile, fmOpenRead);
    writeln(inttostr(filestream.size));
  </span><span class="pas1-reservedword">try
</span><span class="pas1-space">    </span><span class="pas1-reservedword">if</span><span class="pas1-space"> FileStream.Size &gt; </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      SetLength(ReturnString, FileStream.Size);
      fileStream.Seek(</span><span class="pas1-number">0</span><span class="pas1-symbol">, </span><span class="pas1-number">0</span><span class="pas1-symbol">)
      writeln(inttostr(filestream.size));
      FileStream.Read(ReturnString, FileStream.Size); 
      result:= true;
    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">    FileStream.Free;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">; </span><span class="pas1-comment">//try
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">function</span><span class="pas1-space"> MSecToTime(mSec: Int64): </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> dt: TDateTime;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  dt:= (mSec/</span><span class="pas1-number">1000</span><span class="pas1-symbol">/</span><span class="pas1-number">86400</span><span class="pas1-symbol">);  </span><span class="pas1-comment">//SecsPerDay;
</span><span class="pas1-space">  Result:= FormatDateTime(</span><span class="pas1-string">'&quot; Length:&quot; nn:ss:zzz'</span><span class="pas1-symbol">,dt);
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">; 


</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> openFileSystem;
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> s: </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> GetTextFromFile(MEDIAPATH,s) </span><span class="pas1-reservedword">then
</span><span class="pas1-space">    ShowMessage(s);
     </span><span class="pas1-comment">//Memo2.text:= s;
</span><span class="pas1-space">     Writeln(inttoStr(SW_Show)) 
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  
</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> LetLogoDraw(mCanvas: TCanvas; x,y,r: integer; vclr: TColor);
</span><span class="pas1-reservedword">var
</span><span class="pas1-space">  rad, a: Single;
  i: Integer;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  mCanvas.Pen.Color:= random(vclr);
  mCanvas.Pen.width:= random(</span><span class="pas1-number">23</span><span class="pas1-symbol">)+</span><span class="pas1-number">8</span><span class="pas1-symbol">;
  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i:= </span><span class="pas1-number">100</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> </span><span class="pas1-number">800</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    inc(y); inc(x);
    mCanvas.Pen.Color:= random(vclr);
    a:= Random(</span><span class="pas1-number">150</span><span class="pas1-symbol">) * </span><span class="pas1-float">1.18</span><span class="pas1-space"> * sin(pi);
    rad:= Random(</span><span class="pas1-number">135</span><span class="pas1-symbol">) * r;
    mCanvas.MoveTo(X, Y);
    mCanvas.LineTo(x + Round(rad*Cos(a)), y +Round(rad*Sin(a)));
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  inFrm.Canvas.Draw(</span><span class="pas1-number">460</span><span class="pas1-symbol">,</span><span class="pas1-number">40</span><span class="pas1-symbol">,getBitmap(Exepath+BACKBITMAP));
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> FillID3TagInformation(mp3File: </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
                                   Title,Artist,Album,Year,Genre,Comment:TEdit);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> ID3 : TID3Rec;
    fmp3: TFileStream;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  fmp3:=TFileStream.Create(mp3File, fmOpenRead);
  </span><span class="pas1-reservedword">try
</span><span class="pas1-space">    fmp3.position:=fmp3.size-</span><span class="pas1-number">128</span><span class="pas1-symbol">;
    </span><span class="pas1-comment">//fmp3.Read(ID3,SizeOf(ID3));
</span><span class="pas1-space">  </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">    fmp3.free;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
 </span><span class="pas1-reservedword">if</span><span class="pas1-space"> ID3.Tag[</span><span class="pas1-number">0</span><span class="pas1-symbol">] &lt;&gt; </span><span class="pas1-string">'T'</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">   Title.Text:=</span><span class="pas1-string">'Wrong or no ID3 tag information'</span><span class="pas1-symbol">;
   Artist.Text:=</span><span class="pas1-string">'Wrong or no ID3 tag information'</span><span class="pas1-symbol">;
   Album.Text:=</span><span class="pas1-string">'Wrong or no ID3 tag information'</span><span class="pas1-symbol">;
   Year.Text:=</span><span class="pas1-string">'Wrong or no ID3 tag information'</span><span class="pas1-symbol">;
   Genre.Text:=</span><span class="pas1-string">'Wrong or no ID3 tag information'</span><span class="pas1-symbol">;
   Comment.Text:=</span><span class="pas1-string">'Wrong or no ID3 tag information'</span><span class="pas1-symbol">;
 </span><span class="pas1-reservedword">end</span><span class="pas1-space"> </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">   </span><span class="pas1-comment">//Title.Text:=ID3.Title;
</span><span class="pas1-space">   </span><span class="pas1-comment">//Artist.Text:=ID3.Artist;
</span><span class="pas1-space">   </span><span class="pas1-comment">//Album.Text:=ID3.Album;
</span><span class="pas1-space">   </span><span class="pas1-comment">//Year.Text:=ID3.Year;
</span><span class="pas1-space">   </span><span class="pas1-comment">{if ID3.Genre in [0..MaxID3Genre] then
     Genre.Text:=ID3Genre[ID3.Genre]
   else
     Genre.Text:=IntToStr(ID3.Genre);
   Comment.Text:=ID3.Comment }
</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> CloseClick(Sender: TObject; </span><span class="pas1-reservedword">var</span><span class="pas1-space"> action: TCloseAction);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-comment">//Form1.Close;  free 308 kByte
</span><span class="pas1-space">  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> MessageDlg(</span><span class="pas1-string">'Wanna Leave?'</span><span class="pas1-symbol">,mtConfirmation,[mbYes, mbNo],</span><span class="pas1-number">0</span><span class="pas1-symbol">) = mrYes </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    MPlayer.Close;
    MPlayer.Free;
    </span><span class="pas1-comment">//bmp.Free;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> progTimer &lt;&gt; </span><span class="pas1-reservedword">NIL</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    progTimer.enabled:= false;
    progTimer.Free;
    progTimer:= </span><span class="pas1-reservedword">NIL</span><span class="pas1-symbol">;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> assigned(loadlist) </span><span class="pas1-reservedword">then
</span><span class="pas1-space">    loadlist.Free;
  action:= caFree;
    </span><span class="pas1-comment">//ShowMessage('Now you see the hits of mX3');
</span><span class="pas1-space">    </span><span class="pas1-comment">//ExecuteCommand('http://www.softwareschule.ch/maxboxshow.htm','')
</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-space"> </span><span class="pas1-reservedword">else
</span><span class="pas1-space">    Action:= caNone;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> checkBoxClick(Sender: TObject);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    </span><span class="pas1-comment">//chkbox.checked:= Not chkbox.checked;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> chkbox.checked </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin</span><span class="pas1-space"> 
     S_Listmode:= true 
     mbutton.caption:= </span><span class="pas1-string">'Open MP3 List'</span><span class="pas1-symbol">;
    </span><span class="pas1-reservedword">if</span><span class="pas1-space"> S_LoadList </span><span class="pas1-reservedword">then</span><span class="pas1-space"> PlayList; 
  </span><span class="pas1-reservedword">end</span><span class="pas1-space"> </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    S_Listmode:= false;
    mbutton.caption:= </span><span class="pas1-string">'Open MP3 Song'</span><span class="pas1-symbol">;
    writeln(</span><span class="pas1-string">'listmode set to '</span><span class="pas1-symbol">+booleantoString(S_Listmode));
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;


</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> runDuallistForm;
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> getList: TStringlist;
    </span><span class="pas1-comment">//mpFrm: TJvDualListForm;
</span><span class="pas1-space">    mpFrmdlg: TJvDualListDialog; 
    i: integer; 
    </span><span class="pas1-comment">//s1: string;
</span><span class="pas1-reservedword">begin</span><span class="pas1-space">                                                                            
  getList:= TStringlist.create;
   </span><span class="pas1-comment">//GetDirList(extractfilePath(selectFile),getlist,true)
</span><span class="pas1-space">  GetDirList(extractfilePath(selectFile)+</span><span class="pas1-string">'*.mp3'</span><span class="pas1-symbol">,getlist,true)
  </span><span class="pas1-comment">{for i:= 1 to getlist.count-1 do begin
  t1:= pos('*.mp3',getlist[i]);
  s1:= getlist[i]; Delete(s1,5,t1);  end;}
</span><span class="pas1-space">  SearchAndReplace(getlist,</span><span class="pas1-string">'*.mp3'</span><span class="pas1-symbol">,</span><span class="pas1-string">''</span><span class="pas1-symbol">); 
 
  mpFrmDlg:= TJvDualListDialog.create(self);
   </span><span class="pas1-reservedword">with</span><span class="pas1-space"> mpFrmDlg </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">     list1:= getList;
     width:= </span><span class="pas1-number">900</span><span class="pas1-symbol">;
     height:= </span><span class="pas1-number">550</span><span class="pas1-symbol">;
     ScrollBars:= true;
     </span><span class="pas1-comment">//SetBounds(10,10,450,400)
</span><span class="pas1-space">     resizable:= true;
     label1caption:= </span><span class="pas1-string">'Song Selection:'</span><span class="pas1-symbol">;
     label2caption:= </span><span class="pas1-string">'Song Play List:'</span><span class="pas1-symbol">;
     okBtncaption:= </span><span class="pas1-string">'Play'</span><span class="pas1-symbol">;
     </span><span class="pas1-comment">//TJvDualListDialog(setbounds
</span><span class="pas1-space">     title:= </span><span class="pas1-string">'MP3 Dual Player'</span><span class="pas1-symbol">;
     HelpBtnCaption:= </span><span class="pas1-string">'Help Play'</span><span class="pas1-symbol">;
    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i:= </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> mpFrmDlg.ComponentCount - </span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> 
      </span><span class="pas1-reservedword">if</span><span class="pas1-space"> mpFrmDlg.Components[i] </span><span class="pas1-reservedword">is</span><span class="pas1-space"> TListBox </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        </span><span class="pas1-reservedword">with</span><span class="pas1-space"> mpFrmDlg.Components[i] </span><span class="pas1-comment">{as TListBox}</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">        TListbox(mpFrmDlg.Components[i]).color:= clblue;
      </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
    Execute;
    </span><span class="pas1-comment">//loadlist.assign(TStringlist(list2));
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i:= </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> list2.count- </span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> 
      loadlist.add(list2[i]);
    writeln(</span><span class="pas1-string">'debug list count '</span><span class="pas1-symbol">+inttostr(loadlist.count))
    </span><span class="pas1-comment">//showmodal;
</span><span class="pas1-space">    Free;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  LetLogoDraw(inFrm.Canvas,</span><span class="pas1-number">55</span><span class="pas1-symbol">,</span><span class="pas1-number">5</span><span class="pas1-symbol">,</span><span class="pas1-number">5</span><span class="pas1-symbol">, clred);
  getlist.Free;  
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">; 

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> plaYList;
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> i: integer;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  lstbox.font.size:= </span><span class="pas1-number">14</span><span class="pas1-symbol">;
  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> </span><span class="pas1-reservedword">NOT</span><span class="pas1-space"> S_Listmode </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      Progress.Max:= </span><span class="pas1-number">0</span><span class="pas1-symbol">;
      MPlayer.Close;
      MPlayer.Wait:= true;
      MPlayer.filename:= selectFile;
      MPlayer.Open;
      Progress.Max:= mPlayer.Length;
      lstbox.items.add(Format(</span><span class="pas1-string">'%s - %s '</span><span class="pas1-symbol">,
                 [ExtractFileName(selectFile),MSecToTime(MPlayer.length)]));
      loadlist.add(selectFile);  </span><span class="pas1-comment">//tmp           
</span><span class="pas1-space">      lstbox.hint:= ExtractFileName(selectFile);
      stat.SimpleText:= Format(</span><span class="pas1-string">'%s: %s '</span><span class="pas1-symbol">,[selectFile,MSecToTime(MPlayer.length)]);
      Writeln(</span><span class="pas1-string">'play time '</span><span class="pas1-symbol">+MSecToTime(MPlayer.length));
      MPlayer.Play; 
    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
  
  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> S_Listmode </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    lstbox.items.clear;
    </span><span class="pas1-comment">//if not S_Loadlist then
</span><span class="pas1-space">    </span><span class="pas1-comment">//lstbox.items.add('MP3 BOX List'); 
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i:= </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> loadlist.count-</span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin</span><span class="pas1-space"> 
       lstbox.items.add(extractFileName(loadlist[i]))
    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
      MPlayer.EnabledButtons:= [btStop];
    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i:= </span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> loadlist.count-</span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin</span><span class="pas1-space"> 
       application.ProcessMessages;
       </span><span class="pas1-comment">//VIDEO... MPlayer.filename:= ExePath+'examples\*.mpeg';
</span><span class="pas1-space">      Progress.Max:= </span><span class="pas1-number">0</span><span class="pas1-symbol">;
      lstbox.selected[i]:= true;
      MPlayer.Close;
      MPlayer.Wait:= true;
      MPlayer.filename:= loadlist[i];
      MPlayer.Open;
      stat.SimpleText:= Format(</span><span class="pas1-string">'%s: %s '</span><span class="pas1-symbol">,[loadlist[i],MSecToTime(MPlayer.length)]);
      Writeln(</span><span class="pas1-string">'play time of '</span><span class="pas1-symbol">+inttoStr(i)+MSecToTime(MPlayer.length));
      MPlayer.Play;
      Sleep(MPlayer.length);
    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  LetLogoDraw(inFrm.Canvas, </span><span class="pas1-number">55</span><span class="pas1-symbol">, </span><span class="pas1-number">5</span><span class="pas1-symbol">, </span><span class="pas1-number">5</span><span class="pas1-symbol">, clred);
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;    
  

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> GetMediaData(self: TObject);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space"> </span><span class="pas1-reservedword">if</span><span class="pas1-space"> PromptForFileName(selectFile, </span><span class="pas1-string">'Media files (*.mp3)|*.mp3|*.mpg)|*.mpg'</span><span class="pas1-symbol">, </span><span class="pas1-comment">//others
</span><span class="pas1-space">                      </span><span class="pas1-string">''</span><span class="pas1-symbol">, </span><span class="pas1-string">'Select your mX3 media file Directory'</span><span class="pas1-symbol">,
                         MEDIAPATH, False) </span><span class="pas1-comment">//false: not Save dialog!
</span><span class="pas1-space">   </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">     </span><span class="pas1-comment">// Display this full file/path value
</span><span class="pas1-space">     stat.SimpleText:= </span><span class="pas1-string">'Selected File Path First: '</span><span class="pas1-symbol">+ExtractFilePath(selectFile);     
     </span><span class="pas1-reservedword">if</span><span class="pas1-space"> S_Listmode </span><span class="pas1-reservedword">then
</span><span class="pas1-space">        runDuallistForm;
      LetLogoDraw(inFrm.Canvas, </span><span class="pas1-number">110</span><span class="pas1-symbol">, </span><span class="pas1-number">5</span><span class="pas1-symbol">, </span><span class="pas1-number">5</span><span class="pas1-symbol">, clred);
      MPlayer.AutoEnable:= false;
      </span><span class="pas1-comment">//MPlayer.EnabledButtons := [];
</span><span class="pas1-space">      MPlayer.EnabledButtons:= [btPause, btStop, btPlay, btNext, btPrev, btBack];
      MPlayer.Refresh;
      plaYList;
   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> StoreSonglist(Sender: TObject);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-identifier">selectFile:= </span><span class="pas1-string">'mp3Songlist.txt'
</span><span class="pas1-reservedword">if</span><span class="pas1-space"> PromptForFileName(selectFile, </span><span class="pas1-string">'Save Song list (*.txt)'</span><span class="pas1-symbol">, </span><span class="pas1-comment">//others
</span><span class="pas1-space">                      </span><span class="pas1-string">''</span><span class="pas1-symbol">, </span><span class="pas1-string">'Select your mX3 media file Directory'</span><span class="pas1-symbol">,
                      </span><span class="pas1-string">''</span><span class="pas1-symbol">, True) </span><span class="pas1-comment">//true: Save!  
</span><span class="pas1-space">  </span><span class="pas1-reservedword">then</span><span class="pas1-space"> 
    loadlist.SaveToFile(selectFile)
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> LoadSonglist(Sender: TObject);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> i: integer;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  selectFile:= </span><span class="pas1-string">'mp3Songlist.txt'
</span><span class="pas1-space">  lstbox.font.size:= </span><span class="pas1-number">14</span><span class="pas1-symbol">;
  S_LoadList:= true;
  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> PromptForFileName(selectFile, </span><span class="pas1-string">'Load Song list (*.txt)'</span><span class="pas1-symbol">, </span><span class="pas1-comment">//others
</span><span class="pas1-space">                      </span><span class="pas1-string">''</span><span class="pas1-symbol">, </span><span class="pas1-string">'Select your mX3 media Directory'</span><span class="pas1-symbol">,
                      MEDIAPATH, false) </span><span class="pas1-comment">//false: not Save!  
</span><span class="pas1-space">  </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    lstbox.items.clear;
    </span><span class="pas1-comment">//lstbox.items.add('MP3 BOX'); 
</span><span class="pas1-space">    loadlist.LoadFromFile(selectFile)
    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i:= </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> loadlist.count-</span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> 
       lstbox.items.add(extractFileName(loadlist[i]))
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> ProgresTimerTimer(Sender: TObject);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> Progress.Max&lt;&gt;</span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">then
</span><span class="pas1-space">    Progress.Position:= mPlayer.Position;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

 </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> LogBox_DiceClick(Sender: TObject);
 </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    </span><span class="pas1-reservedword">with</span><span class="pas1-space"> TJvDice(sender) </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">       interval:= </span><span class="pas1-number">200</span><span class="pas1-symbol">;
       RandomValue;
       rotate:= true;
       AutoStopInterval:= </span><span class="pas1-number">2500</span><span class="pas1-symbol">;
    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
    </span><span class="pas1-comment">//DiceRandom(Self);
</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;


</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> ChangeSong(Sender: TObject);   
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-comment">//lstbox.items[lstbox.itemIndex];
</span><span class="pas1-space">  Progress.Max:= </span><span class="pas1-number">0</span><span class="pas1-symbol">;
  lstbox.font.size:= </span><span class="pas1-number">14</span><span class="pas1-symbol">;
  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> MPlayer </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">     Close;
     EnabledButtons:= [btPause, btStop, btPlay, btPrev, btBack];
     filename:= loadlist[lstbox.itemIndex];
     Open;
     Progress.Max:= mPlayer.Length;
     stat.SimpleText:= Format(</span><span class="pas1-string">'Once %s: %s '</span><span class="pas1-symbol">,[selectFile,MSecToTime(MPlayer.length)]);
     Play;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;    
  Writeln(</span><span class="pas1-string">'song changed: '</span><span class="pas1-symbol">+ Mplayer.filename);
  </span><span class="pas1-comment">//LogBox_DiceClick(self);
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;



</span><span class="pas1-comment">//************************************ Form Builder ***************************
</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> SetForm;
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> </span><span class="pas1-comment">//inFrm: TForm;
</span><span class="pas1-space">    </span><span class="pas1-comment">//lstbox: TListbox;
</span><span class="pas1-space">  mi, mi1, mi2: TMenuItem;
  mt: TMainMenu;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  inFrm:= TForm.Create(self);
  loadlist:= TStringlist.create;
  loadlist.Add(</span><span class="pas1-string">'maXbox MP3 Boxlist'</span><span class="pas1-symbol">);  </span><span class="pas1-comment">//FILE HEADER
</span><span class="pas1-space">   </span><span class="pas1-reservedword">with</span><span class="pas1-space"> inFrm </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      caption:= </span><span class="pas1-string">'********MediaPlayer3************'</span><span class="pas1-symbol">;  
      Formstyle:= fsStayontop;
      height:= </span><span class="pas1-number">650</span><span class="pas1-symbol">;
      width:= </span><span class="pas1-number">700</span><span class="pas1-symbol">;
      </span><span class="pas1-comment">//color:= clred;
</span><span class="pas1-space">      Position:= poScreenCenter;
      onClose:= @CloseClick;
      show;
   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

   </span><span class="pas1-reservedword">with</span><span class="pas1-space"> TPanel.Create(inFrm) </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">     caption:= </span><span class="pas1-string">'********maXboxMP3********'</span><span class="pas1-symbol">;  
     parent:= inFrm;  
     SetBounds(</span><span class="pas1-number">40</span><span class="pas1-symbol">,</span><span class="pas1-number">70</span><span class="pas1-symbol">,</span><span class="pas1-number">500</span><span class="pas1-symbol">,</span><span class="pas1-number">420</span><span class="pas1-symbol">)
     color:= clyellow;
     show;
   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">; 
  Lstbox:= TListbox.create(inFrm);
  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> Lstbox </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    parent:= inFrm;
    setBounds(</span><span class="pas1-number">50</span><span class="pas1-symbol">,</span><span class="pas1-number">80</span><span class="pas1-symbol">, </span><span class="pas1-number">480</span><span class="pas1-symbol">,</span><span class="pas1-number">400</span><span class="pas1-symbol">)
    font.size:= </span><span class="pas1-number">55</span><span class="pas1-symbol">;
    font.color:= clwhite;
    color:= clPurple;
    items.add(</span><span class="pas1-string">'MP3 BOX'</span><span class="pas1-symbol">); 
    onDblClick:= @ChangeSong;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  mButton:= TBitBtn.Create(inFrm)
  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> mButton </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    Parent:= inFrm;
    setbounds(</span><span class="pas1-number">400</span><span class="pas1-symbol">,</span><span class="pas1-number">510</span><span class="pas1-symbol">,</span><span class="pas1-number">150</span><span class="pas1-symbol">, </span><span class="pas1-number">40</span><span class="pas1-symbol">);
    caption:= </span><span class="pas1-string">'Open MP3 List'</span><span class="pas1-symbol">;
    font.size:= </span><span class="pas1-number">12</span><span class="pas1-symbol">;
    glyph.LoadFromResourceName(getHINSTANCE,</span><span class="pas1-string">'OPENFOLDER'</span><span class="pas1-symbol">);
    mXButton(</span><span class="pas1-number">0</span><span class="pas1-symbol">,</span><span class="pas1-number">0</span><span class="pas1-symbol">,width, height,</span><span class="pas1-number">12</span><span class="pas1-symbol">,</span><span class="pas1-number">12</span><span class="pas1-symbol">,handle); 
    </span><span class="pas1-comment">//event handler
</span><span class="pas1-space">    onclick:= @GetMediaData;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
 
  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> TJvAnalogClock.Create(inFrm) </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin</span><span class="pas1-space">  </span><span class="pas1-comment">//widgets set
</span><span class="pas1-space">    parent:= inFrm;
    bevelwidth:= </span><span class="pas1-number">0</span><span class="pas1-symbol">;
    colormin:= clblue;
    </span><span class="pas1-comment">//timeoffSet:= -60;
</span><span class="pas1-space">    ColorHr:= clRed;
    </span><span class="pas1-comment">//WidthHandHr:= 1;
</span><span class="pas1-space">    ColorHandHr:= clRed;
    ColorHandMin:= clRed;
    setBounds(</span><span class="pas1-number">565</span><span class="pas1-symbol">,</span><span class="pas1-number">5</span><span class="pas1-symbol">,</span><span class="pas1-number">100</span><span class="pas1-symbol">,</span><span class="pas1-number">100</span><span class="pas1-symbol">);
    </span><span class="pas1-comment">//centercol:= clyellow; //cldarkblue32; //clwebgold; 
</span><span class="pas1-space">    </span><span class="pas1-comment">//centersize:= 8;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> TJvStarfield.Create(inFrm) </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    parent:= inFrm;
    stars:= </span><span class="pas1-number">250</span><span class="pas1-symbol">;
    maxSpeed:= </span><span class="pas1-number">12</span><span class="pas1-symbol">;
    setBounds(</span><span class="pas1-number">565</span><span class="pas1-symbol">,</span><span class="pas1-number">150</span><span class="pas1-symbol">,</span><span class="pas1-number">100</span><span class="pas1-symbol">,</span><span class="pas1-number">100</span><span class="pas1-symbol">);
    active:= true; 
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> TJvDice.create(inFrm) </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    setbounds(</span><span class="pas1-number">565</span><span class="pas1-symbol">,</span><span class="pas1-number">295</span><span class="pas1-symbol">,</span><span class="pas1-number">100</span><span class="pas1-symbol">,</span><span class="pas1-number">105</span><span class="pas1-symbol">)
    parent:= infrm;
    interval:= </span><span class="pas1-number">500</span><span class="pas1-symbol">;
    RandomValue;
    rotate:= true;
    </span><span class="pas1-comment">//AutoSize:= true;
</span><span class="pas1-space">    AutoStopInterval:= </span><span class="pas1-number">1500</span><span class="pas1-symbol">;
    </span><span class="pas1-comment">//onmousedown;
</span><span class="pas1-space">    </span><span class="pas1-comment">//showfocus:= true;
</span><span class="pas1-space">    onclick:= @LogBox_DiceClick;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
 
  inFrm.Canvas.Draw(</span><span class="pas1-number">460</span><span class="pas1-symbol">,</span><span class="pas1-number">10</span><span class="pas1-symbol">,getBitmap(Exepath+BACKBITMAP));
 
  stat:= TStatusbar.Create(inFrm);
  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> Stat </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    parent:= inFrm;
    Align:= alBottom;
    stat.SimplePanel:= true;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  Progress:= TProgressBar.Create(inFrm);
  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> progress </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    parent:= inFrm;
    Align:= alBottom;
    </span><span class="pas1-comment">//step:= 10;
</span><span class="pas1-space">    </span><span class="pas1-comment">//Max:= maxSteps+20;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  chkbox:= TCheckBox.create(self);
  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> chkbox </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    Parent:= inFrm;
    checked:= false;
    </span><span class="pas1-reservedword">if</span><span class="pas1-space"> checked </span><span class="pas1-reservedword">then</span><span class="pas1-space"> S_Listmode:= true </span><span class="pas1-reservedword">else
</span><span class="pas1-space">      S_Listmode:= false;
    setbounds(</span><span class="pas1-number">300</span><span class="pas1-symbol">,</span><span class="pas1-number">510</span><span class="pas1-symbol">,</span><span class="pas1-number">80</span><span class="pas1-symbol">, </span><span class="pas1-number">40</span><span class="pas1-symbol">);
    font.size:= </span><span class="pas1-number">12</span><span class="pas1-symbol">;
    caption:= </span><span class="pas1-string">'Play List'</span><span class="pas1-symbol">;
    onClick:= @checkboxClick;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
 
  mt:= TMainMenu.Create(infrm)
  mi:= TMenuItem.Create(mt)
  mi1:= TMenuItem.Create(mt)
  mi2:= TMenuItem.Create(mt)
  </span><span class="pas1-comment">//mi3:= TMenuItem.Create(mi)
</span><span class="pas1-space">  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> mi </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    </span><span class="pas1-comment">//parent:= frmMon;
</span><span class="pas1-space">    Caption:=</span><span class="pas1-string">'Load SongList'</span><span class="pas1-symbol">;
    Name:=</span><span class="pas1-string">'ITEM'</span><span class="pas1-symbol">;
    mt.Items.Add(mi);   
    OnClick:= @LoadSonglist;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> mi1 </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    Caption:=</span><span class="pas1-string">'Store SongList'</span><span class="pas1-symbol">;
    Name:=</span><span class="pas1-string">'ITEM2'</span><span class="pas1-symbol">;
    mt.Items.Add(mi1) ;
    OnClick:= @StoreSonglist;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> mi2 </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    Caption:=</span><span class="pas1-string">'Open CDPlayer'</span><span class="pas1-symbol">;
    Name:=</span><span class="pas1-string">'ITEM3'</span><span class="pas1-symbol">;
    mt.Items.Add(mi2);
    </span><span class="pas1-comment">//OnClick:= @OPenCD;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

  MPlayer:= TMediaPlayer.create(self);
  MPlayer.parent:= inFrm;
  MPlayer.top:= </span><span class="pas1-number">511</span><span class="pas1-symbol">;
  MPlayer.left:= </span><span class="pas1-number">20</span><span class="pas1-symbol">;
  MPlayer.height:= </span><span class="pas1-number">36</span><span class="pas1-symbol">;
  </span><span class="pas1-comment">//Mplayer.Display:= mPanel;   //for video
</span><span class="pas1-space">  MPlayer.AutoEnable:= false;
  </span><span class="pas1-comment">//mplayer.next;
</span><span class="pas1-space">  MPlayer.EnabledButtons:= [btPause,btStop];
  progTimer:= TTimer.Create(self);
  progTimer.onTimer:= @ProgresTimerTimer;
  progTimer.interval:= MILLISECONDS;
  LetLogoDraw(inFrm.Canvas, </span><span class="pas1-number">55</span><span class="pas1-symbol">,</span><span class="pas1-number">5</span><span class="pas1-symbol">,</span><span class="pas1-number">5</span><span class="pas1-symbol">, clred);
  S_LoadList:= false;

 </span><span class="pas1-comment">//('TMPBtnType','(btPlay,btPause,btStop,btNext,btPrev,btStep,btBack,btRecord,btEject)');
</span><span class="pas1-space">  </span><span class="pas1-comment">//CL.AddTypeS('TButtonSet', 'set of TMPBtnType');
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-comment">//************************************ Form Builder End************************

</span><span class="pas1-space"> 
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> cdinfo: TJclCdMediaInfo;
    a,b: boolean;
    sopts: TSelectDirOpts;
    </span><span class="pas1-comment">//SomeDay: TWeekDays;
</span><span class="pas1-space">    vmsgbtn: tMsgDlgBtn;
    
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-comment">//openFileSystem
</span><span class="pas1-space">  SetForm;
  </span><span class="pas1-comment">//writeln(gethostbyname('www.kleiner.ch'))
</span><span class="pas1-space">   writeln(</span><span class="pas1-string">'Instance: '</span><span class="pas1-symbol">+intToStr(getHinstance))
   writeln(</span><span class="pas1-string">'Procid: '</span><span class="pas1-symbol">+intToStr(getProcessid))
   writeln(</span><span class="pas1-string">'Processors: '</span><span class="pas1-symbol">+inttostr(GetNumberOfProcessors)) 
   </span><span class="pas1-comment">// type   TJclCdMediaInfo = (miProduct, miIdentity, miUPC);
</span><span class="pas1-space">    </span><span class="pas1-comment">//  CL.AddTypeS('TJclCdMediaInfo', '( miProduct, miIdentity, miUPC )');
</span><span class="pas1-space">   </span><span class="pas1-comment">// cdinfo:= miproduct;  
</span><span class="pas1-space">   </span><span class="pas1-comment">{ if IsMediaPresentInDrive('F') then begin
      writeln('CD in drive');
      writeln(GetCdInfo(miproduct, 'F'));
    end;}</span><span class="pas1-space">  
   </span><span class="pas1-comment">//CL.AddTypeS('TSelectDirOpt', '( sdAllowCreate, sdPerformCreate, sdPrompt )');
</span><span class="pas1-space">   </span><span class="pas1-comment">//CL.AddTypeS('TSelectDirOpts', 'set of TSelectDirOpt');

</span><span class="pas1-space">     sopts:= sopts + [sdprompt, sdallowcreate];
     sopts:= sopts - [sdallowcreate];
     </span><span class="pas1-reservedword">if</span><span class="pas1-space"> sdAllowcreate </span><span class="pas1-reservedword">in</span><span class="pas1-space"> sopts </span><span class="pas1-reservedword">then</span><span class="pas1-space"> writeln(</span><span class="pas1-string">'included'</span><span class="pas1-symbol">);
    writeln(</span><span class="pas1-string">'warning test '</span><span class="pas1-symbol">+booltostr(false </span><span class="pas1-reservedword">and</span><span class="pas1-space"> true,true));
    a:= false; b:= true;
    writeln(booleantoString((a </span><span class="pas1-reservedword">and</span><span class="pas1-space"> b) = b));
    </span><span class="pas1-comment">//for SomeDay:= Monday to Sunday do
</span><span class="pas1-space">      </span><span class="pas1-comment">//if succ(monday) = Tuesday then
</span><span class="pas1-space">      </span><span class="pas1-comment">//ShowMessage('Tuesday is after monday!');
</span><span class="pas1-space">    Writeln(StringReplace(</span><span class="pas1-string">'this is Max'</span><span class="pas1-symbol">,</span><span class="pas1-string">'max'</span><span class="pas1-symbol">, </span><span class="pas1-string">'box'</span><span class="pas1-symbol">,[rfReplaceAll, rfIgnoreCase]));
    vmsgbtn:= mbyes;  
    </span><span class="pas1-comment">//if MessageDlg('Learning about Sets!', mtInformation, [mbYes, mbOk, mbCancel], 0)
</span><span class="pas1-space">      </span><span class="pas1-comment">//   = mrOk then writeln('this is in set... ');  
</span><span class="pas1-space">           </span><span class="pas1-comment">//in [mrYes, mrOK] then writeln('this is in set... ');  
</span><span class="pas1-reservedword">End</span><span class="pas1-symbol">.


</span><span class="pas1-comment">///////////////////Code Snippets


</span><span class="pas1-space">  </span><span class="pas1-comment">{Handle:= FindWindow('TMaxForm1','');
  if Handle &lt;&gt; 0 then 
    Showmessage('maXbox is alive')}


{function TranslateSLLVerifyToInternal(Mode: Integer): TIdSSLVerifyModeSet;
begin
  Result := [];
  if LogicalAnd(Mode, OPENSSL_SSL_VERIFY_PEER) then Result := Result + [sslvrfPeer];
  if LogicalAnd(Mode, OPENSSL_SSL_VERIFY_FAIL_IF_NO_PEER_CERT) then Result := Result + [sslvrfFailIfNoPeerCert];
  if LogicalAnd(Mode, OPENSSL_SSL_VERIFY_CLIENT_ONCE) then Result := Result + [sslvrfClientOnce];
end;}

</span><span class="pas1-reservedword">function</span><span class="pas1-space"> LogicalAnd(A, B: Integer): Boolean;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  Result := (A </span><span class="pas1-reservedword">and</span><span class="pas1-space"> B) = B;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;


</span><span class="pas1-comment">//---------------------------------------------------------
</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TForm1.Button1Click(Sender: TObject);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  MediaPlayer1.Close;
  MediaPlayer1.FileName := </span><span class="pas1-string">'c:\music\test.mp3'</span><span class="pas1-symbol">;
  MediaPlayer1.Open;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TForm1.Button1Click(Sender: TObject);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  MediaPlayer1.Close;
  MediaPlayer1.FileName := </span><span class="pas1-string">'c:\music\test.mp3'</span><span class="pas1-symbol">;
  MediaPlayer1.Open; 
  MediaPlayer1.Play;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TForm2.btOpenClick(Sender: TObject);
</span><span class="pas1-reservedword">var
</span><span class="pas1-space">  OpenMediaDialog : TOpenDialog;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  OpenMediaDialog := TOpenDialog.Create(Self);
  OpenMediaDialog.Filter := </span><span class="pas1-string">'All Video Files (*.avi)|*.avi'</span><span class="pas1-symbol">;
  </span><span class="pas1-comment">// There are avi files in
</span><span class="pas1-space">  </span><span class="pas1-comment">// C:\Documents and Settings\All Users\Documents\RAD Studio\6.0\Demos\DelphiWin32\VCLWin32\CoolStuff.
</span><span class="pas1-space">  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> OpenMediaDialog.Execute() </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    </span><span class="pas1-comment">{ Assign a file to the media player. }
</span><span class="pas1-space">    MediaPlayer1.FileName := OpenMediaDialog.FileName;
 
    </span><span class="pas1-comment">{ Check if the file exists and is not a directory. }
</span><span class="pas1-space">    </span><span class="pas1-reservedword">if</span><span class="pas1-space"> (FileExists(OpenMediaDialog.FileName)) </span><span class="pas1-reservedword">and
</span><span class="pas1-space">       (</span><span class="pas1-reservedword">not</span><span class="pas1-space"> DirectoryExists(OpenMediaDialog.FileName)) </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      </span><span class="pas1-comment">{ Open the files. }
</span><span class="pas1-space">      MediaPlayer1.Wait := true;
      MediaPlayer1.Open;
      MediaPlayer1.Play;
 
      </span><span class="pas1-comment">{ Override automatic button controlling. }
</span><span class="pas1-space">      MediaPlayer1.EnabledButtons :=
        [TMPBtnType.btPause, TMPBtnType.btStop, TMPBtnType.btPlay];
 
      </span><span class="pas1-comment">{ Enable the Stop button. }
</span><span class="pas1-space">      btStop.Enabled := true;
      btOpen.Enabled := false;
    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
 
  OpenMediaDialog.Free;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
 
</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TForm2.btStopClick(Sender: TObject);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-comment">{ Stop and close the media. }
</span><span class="pas1-space">  MediaPlayer1.Stop;
  MediaPlayer1.Close;
 
  MediaPlayer1.EnabledButtons := [];
 
  </span><span class="pas1-comment">{ Enable Open button again. }
</span><span class="pas1-space">  btOpen.Enabled := true;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
 
</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TForm2.FormCreate(Sender: TObject);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-comment">{ Disable all buttons. }
</span><span class="pas1-space">  MediaPlayer1.AutoEnable := false;
  MediaPlayer1.EnabledButtons := [];
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
 
</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TForm2.MediaPlayer1PostClick(Sender: TObject;
  Button: TMPBtnType);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> Button = TMPBtnType.btStop </span><span class="pas1-reservedword">then
</span><span class="pas1-space">     btStop.Click;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;


------------------------------------------------------
Programmers never die, they just GOSUB without RETURN 


 	Reference	Designation	Time period
nopict	</span><span class="pas1-number">8441</span><span class="pas1-space">	CoCo </span><span class="pas1-number">21000</span><span class="pas1-space"> SNCF	novel. </span><span class="pas1-number">1991
</span><span class="pas1-identifier">jouef </span><span class="pas1-number">8441</span><span class="pas1-space">	</span><span class="pas1-number">8441</span><span class="pas1-symbol">*	CoCo </span><span class="pas1-number">21002</span><span class="pas1-space"> SNCF	cat. </span><span class="pas1-number">1991</span><span class="pas1-space"> &gt; cat. </span><span class="pas1-number">2000</span><span class="pas1-symbol">/</span><span class="pas1-number">2001
</span><span class="pas1-identifier">nopict	</span><span class="pas1-number">8443</span><span class="pas1-symbol">*	CoCo </span><span class="pas1-number">21002</span><span class="pas1-space"> SNCF </span><span class="pas1-reservedword">for</span><span class="pas1-space"> AC </span><span class="pas1-number">3</span><span class="pas1-space"> rails system	cat. </span><span class="pas1-number">1993</span><span class="pas1-space"> &gt; cat. </span><span class="pas1-number">1995</span><span class="pas1-symbol">/</span><span class="pas1-number">96
</span><span class="pas1-identifier">jouef </span><span class="pas1-number">844200</span><span class="pas1-space">	</span><span class="pas1-number">844200</span><span class="pas1-space">	CoCo </span><span class="pas1-number">21001</span><span class="pas1-space"> SNCF original livery	cat. </span><span class="pas1-number">1998</span><span class="pas1-space"> &gt; cat. </span><span class="pas1-number">2000</span><span class="pas1-symbol">/</span><span class="pas1-number">2001
</span><span class="pas1-identifier">r1629	R1629	CoCo </span><span class="pas1-number">21002</span><span class="pas1-space"> SNCF original livery	novel. LIMA </span><span class="pas1-number">2002</span><span class="pas1-symbol">,
cat. RIVAROSSI </span><span class="pas1-number">2003
</span><span class="pas1-identifier">nopict	HJ </span><span class="pas1-number">2138</span><span class="pas1-space">	CoCo </span><span class="pas1-number">21003</span><span class="pas1-space"> SNCF	announced </span><span class="pas1-reservedword">in</span><span class="pas1-space"> </span><span class="pas1-number">2010</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">in</span><span class="pas1-space"> </span><span class="pas1-number">2011
</span><span class="pas1-identifier">nopict	HJ </span><span class="pas1-number">2139</span><span class="pas1-space">	CoCo </span><span class="pas1-number">21004</span><span class="pas1-space"> SNCF	announced </span><span class="pas1-reservedword">in</span><span class="pas1-space"> </span><span class="pas1-number">2010</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">in</span><span class="pas1-space"> </span><span class="pas1-number">2011
</span><span class="pas1-symbol">* : ref. </span><span class="pas1-number">844</span><span class="pas1-identifier">x00 after </span><span class="pas1-float">1994.</span><span class="pas1-space"> 

http:</span><span class="pas1-comment">//docwiki.embarcadero.com/RADStudio/XE4/en/Building_a_Basic_Media_Player

</span><span class="pas1-space">  </span><span class="pas1-comment">//mpFrm:= TJvDualListForm.create(self);
</span><span class="pas1-space">  </span><span class="pas1-comment">{with mpFrm do begin
    //list:= getList;
    width:= 600;
    height:= 650;
    //SetBounds(10,10,450,400)
    BorderStyle:= bsDialog;
    //okbtncaption:= 'Player';
    //TJvDualListDialog(setbounds
    caption:= 'MP3 Dual Player';
    //width:= 700;
    //Execute;
    //Show;
    showmodal;
    Free;
  end;}


</span><span class="pas1-symbol">...........

</span><span class="pas1-reservedword">var

</span><span class="pas1-space">   NumLine: Integer;

</span><span class="pas1-reservedword">begin

</span><span class="pas1-space">   ListBox1.LoadFromFile(</span><span class="pas1-string">'test.m3u'</span><span class="pas1-symbol">)

   </span><span class="pas1-reservedword">If</span><span class="pas1-space"> ListBox1.Lines.Count &gt; </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">Then

</span><span class="pas1-space">      </span><span class="pas1-reservedword">For</span><span class="pas1-space"> NumLine := ListBox1.Items.Count - </span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">DownTo</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">Do

</span><span class="pas1-space">         </span><span class="pas1-reservedword">If</span><span class="pas1-space"> Copy(ListBox1.Items[NumLine], </span><span class="pas1-number">1</span><span class="pas1-symbol">, </span><span class="pas1-number">8</span><span class="pas1-symbol">) = </span><span class="pas1-string">'#EXTINF:'</span><span class="pas1-space"> </span><span class="pas1-reservedword">Then

</span><span class="pas1-space">            ListBox1.Items.Delete(NumLine);

</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;


</span><span class="pas1-reservedword">const
</span><span class="pas1-space">  MaxID3Genre=</span><span class="pas1-number">147</span><span class="pas1-symbol">;
  ID3Genre: </span><span class="pas1-reservedword">array</span><span class="pas1-symbol">[</span><span class="pas1-number">0</span><span class="pas1-symbol">..MaxID3Genre] </span><span class="pas1-reservedword">of</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-space"> = (
    </span><span class="pas1-string">'Blues'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Classic Rock'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Country'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Dance'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Disco'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Funk'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Grunge'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Hip-Hop'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Jazz'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Metal'</span><span class="pas1-symbol">, </span><span class="pas1-string">'New Age'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Oldies'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Other'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Pop'</span><span class="pas1-symbol">, </span><span class="pas1-string">'R&amp;B'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Rap'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Reggae'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Rock'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Techno'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Industrial'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Alternative'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Ska'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Death Metal'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Pranks'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Soundtrack'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Euro-Techno'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Ambient'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Trip-Hop'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Vocal'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Jazz+Funk'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Fusion'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Trance'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Classical'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Instrumental'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Acid'</span><span class="pas1-symbol">, </span><span class="pas1-string">'House'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Game'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Sound Clip'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Gospel'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Noise'</span><span class="pas1-symbol">, </span><span class="pas1-string">'AlternRock'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Bass'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Soul'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Punk'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Space'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Meditative'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Instrumental Pop'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Instrumental Rock'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Ethnic'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Gothic'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Darkwave'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Techno-Industrial'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Electronic'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Pop-Folk'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Eurodance'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Dream'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Southern Rock'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Comedy'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Cult'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Gangsta'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Top 40'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Christian Rap'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Pop/Funk'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Jungle'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Native American'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Cabaret'</span><span class="pas1-symbol">, </span><span class="pas1-string">'New Wave'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Psychadelic'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Rave'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Showtunes'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Trailer'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Lo-Fi'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Tribal'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Acid Punk'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Acid Jazz'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Polka'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Retro'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Musical'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Rock &amp; Roll'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Hard Rock'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Folk'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Folk-Rock'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'National Folk'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Swing'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Fast Fusion'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Bebob'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Latin'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Revival'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Celtic'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Bluegrass'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Avantgarde'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Gothic Rock'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Progressive Rock'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Psychedelic Rock'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Symphonic Rock'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Slow Rock'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Big Band'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Chorus'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Easy Listening'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Acoustic'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Humour'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Speech'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Chanson'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Opera'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Chamber Music'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Sonata'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Symphony'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Booty Bass'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Primus'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Porn Groove'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Satire'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Slow Jam'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Club'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Tango'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Samba'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Folklore'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Ballad'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Power Ballad'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Rhythmic Soul'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Freestyle'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Duet'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Punk Rock'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Drum Solo'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Acapella'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Euro-House'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Dance Hall'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Goa'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Drum &amp; Bass'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Club-House'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Hardcore'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Terror'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Indie'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'BritPop'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Negerpunk'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Polsk Punk'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Beat'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Christian Gangsta Rap'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Heavy Metal'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Black Metal'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Crossover'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Contemporary Christian'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Christian Rock'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Merengue'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Salsa'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Trash Metal'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Anime'</span><span class="pas1-symbol">, </span><span class="pas1-string">'Jpop'</span><span class="pas1-symbol">,
    </span><span class="pas1-string">'Synthpop'</span><span class="pas1-space">  </span><span class="pas1-comment">{and probably more to come}
</span><span class="pas1-space">  );


----code_cleared_checked----

----code_cleared_checked----
</span></code></pre><!--EndFragment--></body>
</html>