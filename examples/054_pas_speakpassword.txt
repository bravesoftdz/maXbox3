//create speakable random passwords? loc's = 44  _54

PROGRAM speakablePassword;

//{$mode objfpc}{$H+}

type
  tconso = array [0..19] of Char;
  tvocal = array [0..4] of Char; 

var con: tconso;
    voc: tvocal;
     
procedure fillLangArray;
 begin                 
  con[0]:= 'b'; con[1]:= 'c'; con[2]:= 'd'; con[3]:= 'f';
  con[4]:= 'g'; con[5]:= 'h'; con[6]:= 'j'; con[7]:= 'k';
  con[8]:= 'l'; con[9]:= 'm'; con[10]:= 'n'; con[11]:= 'p';
  con[12]:= 'r'; con[13]:= 's'; con[14]:= 't'; con[15]:= 'v';
  con[16]:= 'w'; con[17]:= 'x'; con[18]:= 'y'; con[19]:= 'z';
  voc[0]:= 'a'; voc[1]:= 'e'; voc[2]:= 'i'; voc[3]:= 'o'; voc[4]:= 'u';
 end; 

function SpeakAblePassWord: string;
var   
  i: byte;
begin
  Result:= '';
  //randomize;
  for i := 1 to 4 do begin
    Result:= Result + con[Random(19)];
    Result:= Result + voc[Random(4)];
  end;
end;

begin
  //generate content
  fillLangArray;
  writeln('mypassword is: ' + speakablePassword)
{$IFNDEF LINUX}
  Speak(speakablePassword)
{$ENDIF}
  //task: proof that each password is singleton
end.
      
      
