PROGRAM BIT_Operators_App;

{TYPE 
<Type declarations>} 

VAR 
//<Variable declarations>
    div_dbl: double;
    a,b, i, bin1, bin2, bin3: integer;
    wd: word;
    lnumber: extended;
    ltext: string;
    ltext2: PChar;
//<FUNCTION>
//<PROCEDURE> 

BEGIN  //Main
//<Executable statements>
  
   div_dbl:= 5.0 / 2.1; // 2.500000
   writeln(Format('%0.6f', [div_dbl]))
   div_dbl:= 20 mod 3;  // 2.00000
   writeln(Format('%f', [div_dbl]))
   a:= 5
   b:= 6
   if not (A<>B) then writeln('even') else
                    writeln('odd');   
   if (A=B) then writeln('even') else
                    writeln('odd');   

   // wholee ASCII Table
   { writeln(Chr(67))
   for i:= 0 to 255 do
     writeln(format('wert %d %s',[i, Chr(i)]))}

    writeln(Format('%s',[inttobin(97)]))
    writeln(Format('%s',[inttobin(223)]))
    writeln(Format('%s',[inttobin(97 XOR 223)]))
    
    bin1:= 97;
    bin2:= 223;
    bin3:= bin1 XOR bin2;
    writeln(Format('%s',[IntToBin(bin3)]))
    
    writeln(' ');
    wd:= 150;
    writeln('first     '+IntToBin(wd))
    writeln(IntToStr(wd))
    
    //double the value
    wd:= wd SHL 1
    writeln('double '+IntToBin(wd))
    writeln(IntToStr(wd))
    
    //half the value
    wd:= wd SHR 1
    writeln('half     '+IntToBin(wd))
    writeln(IntToStr(wd))
    
    //init the value
    writeln('init      '+IntToBin(wd))
    writeln('          '+IntToBin(wd XOR wd));
    
    //buffer test
    { Call the TextToFloat method to convert the string value to a double. }
    LText:= '3.1415';
    TextToFloat(LText, LNumber, fvExtended);
    writeln(floattostr(LNumber));
 
    SetLength(LText, 64);
    //FloatToText(pchar(ltext), Lnumber, fvExtended, ffGeneral, 15, 0);
    //SetLength(ltext, FloatToText((ltext), PI, fvExtended, ffGeneral, 15, 0));
    writeln(ltext);
    writeln(maxform1.actualfilename)
    
    
END. 


       (A<>B)  NOT --> A=B
        0  0 0 1       0 0
        0  1 1 0
        1  0 1 0
        1  1 0 1       1 1
        
        //19.8. um 16 Uhr PT1 Update
        
  XOR App      
  0110 0001
^ 1101 1111
-----------
  1011 1110
        
        
  00000000000000000000000100101100 XOR
  00000000000000000000000100101100
                         000000000

----app_template_loaded----