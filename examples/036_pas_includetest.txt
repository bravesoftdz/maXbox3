//calculates a cipher suite from string _36
//key substitution during encryption, 
//DEMONSTRATES USE OF INCLUDE & DLL; loc's =126

//{$I maxdefine.inc}
//uses maxdefine.inc

program simple_Cipher_Refactor;

function _SayHello2: boolean;
external '_SayHello2@income.dll stdcall';

const
  //something to enlarge the entropy like substitution-box
  C1 = 52845;
  C2 = 22719; 
  FNAME = 'readmefirst_maxbox.txt';
  CIPHERNAME = 'crypto_readmefirst.txt';
  MYKEY = 16549813;

type
   TPasStyle = (a,b,c,d,e,f);
   TPasStyles = set of TPasStyle;
   
var TPas: TPasStyles;

{$I maxdefine.inc}

{$I pas_includebox.inc}

FUNCTION HASH (X : string) : INTEGER;
VAR I,H : INTEGER;
BEGIN
  TPas:=[a,c];
   //if c in TPas then
   //showmessage(' this is outside')
  H := 0;
  FOR I := 1 TO 5 DO
      H := (H * 10 + ORD(X[I]));
  result:= H MOD 20;
END;


function EncryptDecrypt(const S: string; Key: word; mode: char): string;
var
  i, myint: word;
begin
  SetLength(Result, length(s));
  //cipher in order of ord ;)
  for i:= 1 to Length(S) do begin
    myint:= ord(S[i]) xor (Key shr 8)
    Result[i]:= chr(myint);
    if mode = 'E' then
      Key:= (ord(Result[i]) + Key) * C1 + C2;
    if mode = 'D' then 
      Key:= (ord(S[i]) + Key) * C1 + C2;
  end;
end;

procedure StringToFile(acontent, afilename:string);
begin
 with TFileStream.Create(afilename, fmOpenWrite or fmCreate) do begin
   try
     Write(acontent, length(acontent));
   finally
     Free;
   end
 end  
end;

function FileToString(afilename: string):string;
begin
 with TFileStream.Create(afilename, fmOpenRead or fmShareCompat) do begin
   try 
     SetLength(result, Size);
     Read(result, Size);
   finally 
     Free;
   end  
 end
end;

function StartLoadService: TStringList;
begin
  if fileExists(ExePath+'examples/'+FNAME) then begin
    result:= TStringList.create;
    result.loadfromfile(ExePath+'examples/'+FNAME);
  end
end;    

var
  mycipher, cipherback: string;
  hashback: byte;
begin
  hashback:= hash2('maxland')
  writeln(inttoStr(hashback));
  //first encrypt loaded file and store it
  try 
    mycipher:= encryptDecrypt(StartLoadService.text, MYKEY, 'E')
    StringToFile(mycipher, CIPHERNAME)
    //assert(4 = 5, 'not true');
    assert(4 = 4, 'true');
    //second decrypt file and store it back
    cipherback:= FileToString(CIPHERNAME);
    if length(mycipher) = length(cipherback) then begin
      writeln(encryptDecrypt(cipherback, MYKEY, 'D'))
      StringToFile(encryptDecrypt(cipherback, MYKEY, 'D'), FNAME)
    end;  
  finally 
    //fileList.free; is just missing!!
    //beep2(444, 400)
  end
   write('this one liner') 
   write('this one liner')
   write('this one liner')
   
   //from C++ DLL
   if _SayHello2 then
     writeln('dll invocation smashed');
   //from include file
   intToFloat(234);
   intToHex(123,3)
   //write('this one liner')  
   writeln(AddThousandSeparator('400500210', '''')); 
   //showAboutBox;}   

end.