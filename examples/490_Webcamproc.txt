PROGRAM WebCam_Proc;

////////////////////////////////////////////////////////////////////////
//  #sign:max: MAXBOX8: 8/11/2014 11:52:59 PM 
//  Purpose: Grabs pic out of Canvas,  more items see below           //
//  #path>ples\C:\maXbook\maxbox3\mX3999\maxbox3\examples\            //
//  Lines of Code #locs:96
////////////////////////////////////////////////////////////////////////

Const TEXTOUT = 'hi world of AVI Cap';

//TODO: Button with stop event, scan video to stream
//<FUNCTION>
//<PROCEDURE> 

function SplitToken(const Text: string; SplitChar: Char;
    var First, Last: string): Boolean;
var  SplitPos: Integer;
begin
  Result:= False;
  SplitPos:= Pos(SplitChar, Text);
  if SplitPos = 0 then Exit;
  First:= Trim(Copy(Text, 1, SplitPos -1));
  Last:= Trim(Copy(Text, SplitPos +1, Length(Text) -SplitPos));
  Result:= (First <>'') and (Last <>'');
end;

procedure TestKeyStateDemo;
var I: integer;
BEGIN
   I:= 0;
   REPEAT
      IF GetAsyncKeyState(VK_RETURN) <> 0 THEN BEGIN
         Inc(I);
         Writeln(itoa(I)+' ');
         //single mode!
         //WHILE GetAsyncKeyState(VK_RETURN) AND $8000 <> 0 DO {Nothing};
      END;
   UNTIL GetAsyncKeyState(VK_ESCAPE) <> 0;
   //SetConsoleTextAttribute(hOut, Attr);
   //SetConsoleCursorPosition(hOut, c);
   //WriteConsole(hOut, PChar(S), Length(S), Result, nil);
end;

//**************************** Web CAM of AVI CAP *****************;
//const //WM_CAP_DRIVER_CONNECT = WM_CAP_START + 10;
 
procedure doWebCamPic2(picname: string);
 var hWndC: THandle;
  FBitmap: TBitmap;
  DC:HDC;
  i: integer;
  mpanel: TPanel;
begin
   hWndC:= 0;
   FBitmap:= TBitmap.Create;
    mPanel:= TPanel.Create(self);
    mpanel.parent:= self;
    mpanel.SetBounds(20,20,412,412)
    FBitmap.PixelFormat:= pf32Bit;
  for i:= 1 to 2 do begin
  hWndC:= capCreateCaptureWindow('My maXfilm Capture Window',
    WS_CHILD or WS_VISIBLE , 0,0,
    mPanel.Width, mPanel.Height,
    mPanel.Handle, 0);
     SendMessage(hWndC, WM_CAP_DRIVER_CONNECT, 0, 0); 
   if (hWndC <> 0) and (i= 1) then begin
     //SendMessage(hwndc, WM_CAP_DRIVER_DISCONNECT, 0, 0);
      mPanel.Free;
      mPanel:= TPanel.Create(self);
      mpanel.parent:= self;
      mpanel.SetBounds(20,20,420,420)
     //renewPanel;
    end;
  end;
    writeln('frame graber handle: '+inttoStr(hWndc));
    DC:= GetDc(mpanel.Handle);
    fbitmap.Width:= mpanel.width;
    fbitmap.Height:= mpanel.height;
    BitBlt(FBitmap.Canvas.Handle,0,0,mPanel.Width,mPanel.Height,DC,0,0,SRCCOPY);
    SaveCanvas2(FBitmap.canvas, picname); 
    FBitmap.Free;
    mpanel.free;
   ShowmessageBig2('Foto saved as '+picname,true);
   OpenDoc(picname);
   capCaptureStop(hWndc);
end;


Begin  //Main AVI Term
  //TOutlookExport_Spy;
  Writeln('Async Avi CAP Start the Train:');
  //IsCAPAvailable
  writeln(getVideoDrivers)
  doWebCamPic2(ExePath+'mypictest12proc.png');
End. 

 Ref: Arduino
 
 Sketch uses 2,510 bytes (7%) of program storage space. Maximum is 32,256 bytes.
Global variables use 189 bytes (9%) of dynamic memory, leaving 1,859 bytes for local variables. Maximum is 2,048 bytes.
 
/*
  Blink2
  Turns on an LED on for one second, then off for one second, repeatedly.
  This example code is in the mX public domain. locs=60
 */
 
// Pin 13 has an LED connected on most Arduino boards.
// give it a name:
int ledR = 11;
int led = 13;
int val = 0;
bool gorun = false;

// setup routine runs once when you press reset:
void setup() {                
  // initialize the digital pin as an output.
  pinMode(led, OUTPUT); 
  pinMode(ledR, OUTPUT); 
  Serial.begin(9600); // connect to serial port  
}

// the loop routine runs over and over again:
void loop() {
  val = Serial.read();
  //Serial.print(val, HEX); show time stream
  //Serial.write(val);
 
  if (val !=-1){ 
   
    if (val == '9')  
     gorun = true;
     else gorun = false;
 
    if (val=='1'){
      digitalWrite(ledR,HIGH);
       //delay(1000);               // wait a sec
      }
    if (val=='A'){
      digitalWrite(ledR,LOW);
      }
    
    if (val=='3'){
      digitalWrite(led,HIGH);
       delay(1000);               // wait for a second
      digitalWrite(led,LOW);
       delay(1000);               // wait for a second
      }
    if (val=='C'){
      digitalWrite(led,LOW);
      }
    Serial.write(val);            // read back to monitor
  }
  
   if (gorun == true) {
   digitalWrite(ledR, HIGH);   // turn LED on (HIGH is the voltage level)
   delay(500);                 // wait for a second
   digitalWrite(ledR, LOW);    // turn LED off by making the voltage LOW
   delay(500);                 // wait for a second
  } 
}


Procedure MakeSound(Frequency{Hz}, Duration{mSec}: Int; Volume: TVolumeLevel; savefilePath: string);
18042: Procedure MakeComplexSound(N:integer;freqlist:TStrings;Duration{mSec}:Int;pinknoise:bool;Volume:Byte);


//############################################################################
// Archimedes Turbo Spiral App
//############################################################################


----app_template_loaded_code----


Now change the code a little:

CODE

...
   REPEAT
      IF GetAsyncKeyState(VK_RETURN) <> 0 THEN BEGIN
         Inc(I);
         Write(I, #13#10);
      WHILE GetAsyncKeyState(VK_RETURN) AND $8000 <> 0 DO {Nothing};
      END;
   UNTIL GetAsyncKeyState(VK_ESCAPE) <> 0;
...

Now you can press ENTER and have only one count per press.

HTH.
buho (A).
buho (Programmer) 	
25 Sep 06 8:34
If you are trying to get a hang on Delphi, go straigth to Windows applications.

Console applications have not use except in some very rare market niches, and after mastering Windows applications you'll be better prepared to tackle console ones.

buho (A).
chrknudsen (Programmer) (OP) 	
25 Sep 06 10:51
Thanks for the replies! clown

As to what I expect of the code, I expect it to do exactly what it did when you ran it in 2K. However, as I wrote in my initial post, when I compile and run the program, my console window freezes and doesn't react to keypresses. I've also made similar tests with KeyState, but with the same result (the console window freezes).

My plan is to make an ASCII game, which is why I'm making a console and not a Windows application.

 property BkSpcMode;
    property BorderStyle;
    property CaretBlinkTime;
    property Color;
    property Dispatcher:TAfCustomDataDispatcher read GetDispatcher write SetDispatcher;
    property Ctl3D;
    property DragCursor;
    property DragMode;
    property Enabled;
    property Font;
    property LeftSpace;
    property Logging;
    property LogFlushTime;
    property LogName;
    property LogSize;
    property MaxLineLength;
    property Options;
    property ParentColor;
    property ParentCtl3D;
    property ParentFont;
    property ParentShowHint;
    property PopupMenu;
    property SelectedColor;
    property SelectedStyle;
    property SelectedTextColor;
    property ScrollBackCaret;
    property ScrollBackKey;
    property ScrollBackRows;
   
  RegisterProperty('caption', 'string', iptrW);
  RegisterProperty('LogName', 'string', iptrw);
  RegisterProperty('OnSendChar', 'TKeyPressEvent', iptrw);
  RegisterProperty('CaretBlinkTime', 'TAfCLVCaretBlinkTime', iptrw);
  RegisterProperty('LogFileStream', 'TAfFileStream', iptrw);
  RegisterProperty('LogMemStream', 'TMemoryStream', iptrw);
  RegisterProperty('OnBeepChar', 'TNotifyEvent', iptrw);
  RegisterProperty('OnDrawBuffer', 'TNotifyEvent', iptrw);
  RegisterProperty('OnFlushLog', 'TNotifyEvent', iptrw);

   
  http://tpapro.sourceforge.net/Faq.html
 
