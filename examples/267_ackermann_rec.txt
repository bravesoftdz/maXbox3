Program Ackermann;

//*********************************************************************
// shows a recursive and non recursive solution
// tail recursion expansion (end recursion substitute with a jump) 
// compiler optimisation construct (coc)
// Task: find the error in Ackermloop
//*********************************************************************

Const PATTERNPAUSE = 350;
      RUNPAUSE = 180;
      COL = 5;
      ROW = 7;
      SIGNS = 36; //(37_[0..36]: Space, A..Z, 0..9)
      LEFTBASE = 20;
      TOPBASE = 30; 
      TEXTPATH = 'examples\outline3.txt';


var
  mylabel: TLabel;
  pattern1: string;
  labelList: TStringList;
  pattar: array[0..SIGNS] of Variant;
  i, probe: integer;
  ifw: float;


Function Ackerm(x, y: integer): integer;
begin
  if x = 0 then 
    result:= y + 1
  else if y = 0 then
    result:= Ackerm(x-1, 1)
  else
   result:= Ackerm(x-1, Ackerm(x,y-1));
end;  


Function Ackermloop(x, y: integer): integer;
LABEL
  start;
begin
  start:
  if x = 0 then 
    result:= y + 1
  else if y = 0 then begin
    x:= x-1;
    y:= 1;
    GOTO start;
  end else begin
    x:= x-1;
    //x:= Ackermloop(x, x-1);
    y:= Ackermloop(x, y-1);
    GOTO start;
  end;  
end;  


//main of LED HEX BOX
Begin
//**************************** OOP in maXbox *******************************
//sizex, sizey as paras()
  //pattern1:= '7';
  //pattern1:= '0123456789';
  
  pattar[0]:= 'this is a variant string';
  pattar[1]:= 2345;
  pattar[2]:= 12.456;
  pattar[3]:= $FFFF;    //HEX
  pattern1:= pattar[0];
  probe:= pattar[1];
  ifw:= pattar[2];
  i:= pattar[3];
  //Writeln('Array of Array in variant '+pattar[3]) exception test
  PrintF('3 variants in: %s + %d + %.4f + %d',[pattern1, probe, ifw, i]);
  

  writeln(intToStr(Ackermann(3,5))); //@lib
  
  writeln(intToStr(Ackerm(3,5)));    //@src
  
  writeln(intToStr(Ackermloop(3,5)));    //@src error
  
//  AESSymetricExecute(exepath+'examples\aestest.txt', exepath+'examples\aestest_encrypt.txt','000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f');
//  AESSymetricExecute(exepath+'examples\aestest.txt', exepath+'examples\aestest_encrypt/.txt','0001020304');

End.
         ____    ___   _      ____    _   _   _
        |  _ \  |  _| | |    |  _ \  | | | | | |
        | | . | | |_  | |    | |_| | | |_| | | |
        | | | | |  _| | |    |  __/  |  _  | | |          
        | |_. | | |_  | |__  | |     | | | | | |
        |____/  |___| |____| |_|     |_| |_| |_| 
        
        
                                          
        Weiterführung der Scholz Software Systems 3S
        
        
