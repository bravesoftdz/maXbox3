program puzzleTest_Solution;

//*********************************************************************
// logic game example with objects & structure, loc's=220, example 75  
// you have to move letters/numbers in the box to the right word order;)
// first you define a pattern (word) and remove the word with the 
// function secret(); second someone else has to solve it (with solver())
//*********************************************************************

// declaration of 3 classes

  {TMyLabel = class(TLabel) //inner class
    procedure Label1Click(Sender: TObject);
    private
       lblx,lbly,okx,oky: integer;
        	place: Boolean; end;}

var
  pForm: TForm;
  myLabel: TMyLabel;
  Labellist: TStringList;
  maxx, maxy, psize, maxtot: integer;


procedure Verify;
var
  i, nbok: integer;
  o: TMyLabel;
begin
  nbok:= 0;
  for i:= 1 to maxtot do begin
    o:= TMyLabel(labellist.objects[i-1]);
    if ((o.lblx=o.okx) and (o.lbly=o.oky)) then
      inc(nbok);
  end;
  if (nbok=maxtot) then
     showMessage('***Congratulations***'#13#10+
                             'You win with maXbox3!');
end;

procedure moveStone(o: TMyLabel);
begin
  if (o.lblx + 1 = maxx) and (o.lbly = maxy) then begin
    //right move
    o.lblx:= o.lblx +1;
    o.Left:= o.Left + psize +1;
    o.Top:= o.Top;
    dec(maxx);
  end else
  if (o.lblx - 1 = maxx) and (o.lbly = maxy) then begin
    //left move
    o.lblx:= o.lblx -1;
    o.Left:= o.Left - psize -1;
    o.Top:= o.Top;
    inc(maxx);
  end else
  if (o.lblx = maxx) and (o.lbly - 1 = maxy) then begin
    //top move up
    o.lbly:= o.lbly -1;
    o.Left:= o.Left;
    o.Top:= o.Top - psize -1;
    inc(maxy);
  end else
  if (o.lblx = maxx) and (o.lbly + 1 = maxy) then begin
    //bottom move down
    o.lbly:= o.lbly +1;
    o.Left:= o.Left;
    o.Top:= o.Top + psize +1;
    dec(maxy);
  end;
  //verify if stones are in right order 
  //verify()
end;

procedure Label1Click(Sender: TObject);
begin
  moveStone(TMyLabel(Sender));
  verify();
end;

procedure Meltpuzzle;
var
  i, nbplace, y, x: integer;
begin
  nbplace:= 0;
  x:= 1;
  y:= 1;
  for i:=0 to maxtot-1 do begin
    TMyLabel(labellist.objects[i]).place:= false;
    TMyLabel(labellist.objects[i]).Visible:= false;
  end;
  //RANDOMIZE;
  i:= 0;
  while (nbplace < maxtot ) do begin
    //i:= random(maxtot);
    if not(TMyLabel(labellist.objects[i]).place) then begin
      inc(nbplace);
      with TMyLabel(labellist.objects[i]) do begin
        place:= true;
        Visible:= true;
        lblx:= x;
        lbly:= y;
        Left:= (x-1)*(psize + 1);
        Top:= (y-1)*(psize + 1);
      end;
      inc(x);
      inc(i);
      if (x mod maxx=1) then begin
        x:= 1;
        inc(y);
      end;
    end; //if
   end; //while
end;

procedure loadPForm;
begin
  maxx:= 3
  maxy:= 3
  psize:= 64
  maxtot:= (maxx*maxy)-1;
  //constructor
  pform:= Tform.create(self);
  with pform do begin
    caption:= 'this is maXland II';  
    width:= (maxx*psize)+ 10;
    height:= (maxy*psize)+ 30;
    BorderStyle:= bsDialog;
    Position:= poScreenCenter;
    show;
  end  
end;

procedure InitPuzzle;
var
  i,x,y: integer;
  pattern: string;
begin
  pattern:= 'MAXBOX38';
  //puzzle word
  //pattern:= 'SOFTWARE';
  //pattern:= 'DELPHI07';
  labellist:= TStringList.Create;
  x:= 1;
  y:= 1;
  for i:= 1 to maxtot do begin
    mylabel:= TMyLabel.Create(pform);
    with mylabel do begin
      Parent:= pForm;
      color:= clpurple;
      AutoSize:= false;
      transparent:= false;
      layout:= tlcenter;
      alignment:= tacenter;
      font.Size:= maxx + maxy + 12;
      //font.Style:= [fsbold];
      font.Color:= clyellow;
      width:= psize;
      height:= psize;
      lblx:= x;
      okx:= x;
      lbly:= y;
      oky:= y;
    end;
    //set next line of stones
    if (i mod maxx=0) then begin
      x:=1; 
      inc(y);
    end else
      inc(x);
    if length(pattern)=maxtot then
      mylabel.caption:= pattern[i] else begin
        writeln('pattern must have size of puzzle -1: '+ inttoStr(maxtot));
        exit;
      end;
    //event handler to click!  
    mylabel.OnClick:= @Label1Click;
    //add stones to the list
    labellist.addObject(inttostr(i), mylabel);
  end;
end;

procedure secret;
begin
  moveStone(TMyLabel(labellist.objects[7]));
  moveStone(TMyLabel(labellist.objects[4]));
  //moveStone(TMyLabel(labellist.objects[1]));
end;

procedure solver;
begin
  //moveStone(TMyLabel(labellist.objects[1]));
  moveStone(TMyLabel(labellist.objects[4]));
  moveStone(TMyLabel(labellist.objects[7]));
end;

procedure testVerify;
begin
  moveStone(TMyLabel(labellist.objects[7]));
  moveStone(TMyLabel(labellist.objects[7]));
end;


//var i: integer;
//main of puzzle
begin
//**************************** OOP in 20 Days *******************************
  loadPForm();
  initPuzzle();
  meltPuzzle(); 
  secret()  
  //solver()
  //testVerify
  //to demonstrate and destroy the objects on the list
  {for i:= 0 to 8-1 do begin
  sleep(400)
  application.processMessages;
    TMylabel(labellist.objects[i]).free
  end}
end.
         ____    ___   _      ____    _   _   _
        |  _ \  |  _| | |    |  _ \  | | | | | |
        | | . | | |_  | |    | |_| | | |_| | | |
        | | | | |  _| | |    |  __/  |  _  | | |          
        | |_. | | |_  | |__  | |     | | | | | |                      
        |____/  |___| |____| |_|     |_| |_| |_| 
          
