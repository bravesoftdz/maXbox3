//create speakable random passwords? loc's = 44
 // test the search and replace function with internal and external function
 
PROGRAM speakablePassword_SearchReplace;

//{$mode objfpc}{$H+}

type
  tconso = array [0..19] of Char;
  tvocal = array [0..4] of Char; 

var con: tconso;
    voc: tvocal;
     
procedure fillLangArray;
 begin                 
  con[0]:= 'b'; con[1]:= 'c'; con[2]:= 'd'; con[3]:= 'f';
  con[4]:= 'g'; con[5]:= 'h'; con[6]:= 'j'; con[7]:= 'k';
  con[8]:= 'l'; con[9]:= 'm'; con[10]:= 'n'; con[11]:= 'p';
  con[12]:= 'r'; con[13]:= 's'; con[14]:= 't'; con[15]:= 'v';
  con[16]:= 'w'; con[17]:= 'x'; con[18]:= 'y'; con[19]:= 'z';
  voc[0]:= 'a'; voc[1]:= 'e'; voc[2]:= 'i'; voc[3]:= 'o'; voc[4]:= 'u';
 end; 


function SpeakAblePassWord: string;
var   
  i: byte;
begin
  Result:= '';
  //randomize;
  for i := 1 to 4 do begin
    Result:= Result + con[Random(19)];
    Result:= Result + voc[Random(4)];
  end;
end;

procedure SearchAndReplace2(aStrList: TStrings; aSearchStr, aNewStr: string);
var i, t1, count: integer;
    s1: string;
begin
  // old string can't be part of new string!, eg.: max --> climax
  if pos(aSearchStr, aNewStr) > 0 then begin
    write('old string cant be part of new string');
    exit;
  end;
  count:= 0;
  for i:= 0 to aStrList.Count -1 do begin
    s1:= aStrList[i];
    repeat
      t1:= pos(aSearchStr, s1);
      if t1 > 0 then begin
        Delete(s1, t1, Length(aSearchStr));
        Insert(aNewStr, s1, t1);
        aStrList[i]:= s1;
              inc(count)
       end;
      //inc(count)
    until t1 = 0;
  end; 
  writeln('numbers replaced :'+ inttostr(count))
  writeln('lines: '+ inttostr(i))
end;


var mlot: TStringlist;

begin
  //generate content
  fillLangArray;
  writeln('mypassword is: ' + speakablePassword)
  //voice(speakablePassword)
  //procedure SearchAndReplace(aStrList: TStrings; aSearchStr, aNewStr: string);
    //ABOUT five seconds---, with script 37 sec.
    //107 MB (112'696'957 bytes) orginal file
    //with number 40 586869 rep
    //6 aus 40 sind 3838382
    //6 of 40 are: 3838380 , 564129 of 20, 533253 of 25, 522627 of 26, 575757 of 1, 297501 of 35!
    writeln(datetimetostr(now))
    mlot:= TStringlist.create;
    mlot.loadFromFile(ExePath+'/examples/primetest8.txt')
    SearchAndReplace2(mlot, ':20',':55');
    mlot.SavetoFile(ExePath+'/examples/primetest8.txt')
    mlot.Free;
    writeln(datetimetostr(now))
  //task: proof that each password is singleton
end.
      
      
