//shows Swap Sorting & BinarySearch in Array _138
//runs under Win and Linux (CLX), locs=68
//***********************************************************
//resourcestring atmega='TMyArray' and Sorting_Visual_Delphi.exe;

program SwapSort_Bubble_BinSearch;

const 
  ArSize = 20;

type  
  TMyArray = array[1..ArSize] of integer;

var   
  MyArray: TMyArray;
      i: integer;


Procedure SwapSort;
var 
  temp,i,j: integer;
Begin
   { Compare every element in the array ... }
   for i:= 1 to ArSize do begin
      { ... to every other element in the array ... }
      for j:= i+1 to ArSize do begin
         if MyArray[i] > MyArray[j] then begin
            { ... and swap them if they're out of order. }
            temp:= MyArray[i];
            MyArray[i]:= MyArray[j];
            MyArray[j]:= temp;
         end; 
      end; {j}
   end; {i}
End;  

Function binSearch(A: TmyArray; theWord: integer; left,right: integer): integer;
var
 mid: integer;
begin
  while (left <= right) do begin
    mid:= (left + right) div 2;
    if A[mid] = theWord then begin
      result:= A[mid];
      writeln('Found!');
      Break;
    end;
    if A[mid] > theWord then right:= mid - 1;
    if A[mid] < theWord then left:= mid + 1;
  end;  
end;


Begin  {Main}
   Randomize;   {Init random number function.}
   writeln('Before . . .');
   for i:= 1 to ArSize do begin
      MyArray[i]:= trunc(Random(10000))+1;
      writeln(inttoStr(i)+ ': '+IntToStr(MyArray[i]));
   end; 
   SwapSort;
   writeln('After . . .');
   for i:= 1 to ArSize do
      writeln(inttoStr(i)+ ': '+IntToStr(MyArray[i]));
   Writeln('BinSearch Found.. '+
             IntToStr(binSearch(myarray,myarray[18],1,ArSize)));
   SearchAndOpenDoc(ExePath+'exercices\sorting_visual_delphi.exe')            
End.  {App}


-------------------------------------------------------------------------
The fourth step is to "sort the list".  What does that mean?  Well, later in the same article I presented a more refined outline of the program which included a procedure entitled "SortList".  In it we asked the user about how they wanted the data sorted and then called PleaseWait.  The next line of code read "{ code to sort the list }".  Not much help there.  So this is the topic for today: Sorting.

You can sort anything that's in a list.  There are many ways to represent a list: an array, a chain of pointers, an instance of Delphi's TStringList object.  For the purposes of this discussion and demonstration, we'll be considering the conventional one-dimensional array.  There are several well known and well established ways to sort data.  We'll look at two of them.  First, the easy-to-understand but slow way: the Swap Sort.  Second is the harder-to-understand but fast way: the QuickSort.

//memo1 is script editor
//memo2 is output space
//max@kleiner.com 
