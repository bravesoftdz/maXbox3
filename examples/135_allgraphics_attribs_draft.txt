{***************************************************************
 *
 * Project  : SystemInformation
 * Unit Name: main
 * Purpose  : Demonstrates the functions of Indy globals and maXbox
 * Date  : 21/08/2010  -  14:38:56
 * History  : translate and integrate to maXbox June 2010
 *
 ****************************************************************}

//uses  IdURI;

//{$IFDEF MSWINDOWS}{$R *.dfm}{$ELSE}{$R *.xfm}{$ENDIF}

procedure DoItParseURI;
var URI: TIdURI;
begin
  URI:= TIdURI.Create('http://127.0.0.1:80/index.htm');
  try
    writeln(URI.Protocol);
    writeln(URI.Host);
    writeln(URI.Port);
    writeln(URI.Path);
    writeln(URI.Document);
  finally
    URI.Free;
  end;
end;

var
  mytimestamp: TDateTime;
  ostype: TIdWin32Type;
  before, after, mytext : string;
  DateSeparator: Char;
  Attributes, NewAttributes: Word;
  ReadOnly, Archive, System, Checked, Hidden: boolean;
  fileHandle: integer;
  diskTotal, amtFree: int64;
  //my: TThread
  
function StrHtmlEncode (const AStr: String): String;
begin
	Result := StringReplace(AStr,   '&', '&amp;', [rfReplaceAll]);    {Do not Localize}
	Result := StringReplace(Result, '<', '&lt;', [rfReplaceAll]);    {Do not Localize}
	Result := StringReplace(Result, '>', '&gt;', [rfReplaceAll]);    {Do not Localize}
	Result := StringReplace(Result, '"', '&quot;', [rfReplaceAll]);    {Do not Localize}
	Result := StringReplace(Result, '''', '&apos;', [rfReplaceAll]);    {Do not Localize}
end;



begin
  DoItParseURI
  //filesearch
  //filegetattr1
  writeln(domainname('localhost'));
  writeln(gethostname)
  
  //memo1.loadfromfile
  
  writeln(getusername)
  mytimestamp:= GetFileCreationTime(exepath+'maxbox3.exe')
  writeln(datetimetoStr(mytimestamp)+' for maXbox')
  writeln(IntToStr(filesizeByName(exePath+'maxbox3.exe')))
  ostype:= Win32Type;
  writeln(inttostr(ord(osType)));
  mytimestamp:= TimeZoneBias
  writeln('time zone ' +timetoStr(mytimestamp))
  writeln(datetimetostr((now2)))
  //writeln(TIdWin32Type(ostype))
  if fileexists('todelete.txt') then
    deleteFile('todelete.txt');
  before := 'This is a way to live A big life';
  after  := StringReplace(before, ' a ', ' THE ',[rfReplaceAll,rfIgnoreCase]);
  //ShowMessage('Before = '+before);
  //ShowMessage('After  = '+after);
  writeln(inttostr(strtointdef('this is',5)))
  
  //type TSysCharSet = set of Char;
  //function ExtractStrings(Separators, WhiteSpace: TSysCharSet; Content: PChar; Strings: TStrings): Integer;

//description
//Fills a string list with substrings parsed from a delimited list.
  //example 1 - requires TMemo named "Memo1"

   ExtractStrings([';',','], 
               [' '], 
               'about: delphi; pascal, programming ', 
               memo2.Lines);
 //would result in 3 strings added to memo:
 //about: delphi
 //pascal
 //programming

//example 2
  ExtractStrings([], [' '], 
               (DateToStr(Date)), memo2.Lines);
//would result in 3 strings: day month and year of the currnet date
//for example '06', '25' ,'2003'
  attributes:= FileGetAttr(exePath+'maxbox3.exe');
  ReadOnly:= (Attributes and faReadOnly) = faReadOnly;
    Archive:= (Attributes and faArchive) = faArchive;
    System:= (Attributes and faSysFile) = faSysFile;
    Hidden:= (Attributes and faHidden) = faHidden;
       if Readonly then showmessage('maxbox is readonly');
 //renamefile
 
   FileHandle := FileCreate('SaveDialog1FileName.txt');
    { Write out the number of rows and columns in the grid. }
   mytext:= 'this is anatomic organic 279999'#13#10'this is second line'
   mytext:= memo2.text;
   FileWrite(FileHandle, mytext, length(mytext));
   FileClose(filehandle);
   //deletefile('SaveDialog1FileName.txt')
   //createdir('testDir')
   diskTotal := DiskSize(3);
   AmtFree := DiskFree(3);
   writeln(IntToStr((AmtFree  * 100) div diskTotal) +
                    ' percent of space on drive 3 is free: ' + 
                    IntToStr(AmtFree div 1024) + ' Kbytes free. ');
  //searchAndOpenDoc(ExtractFilePath(ParamStr(0))+'docs\maxbox_starter2.pdf')
   //searchAndOpenDoc(ExtractFilePath(ParamStr(0))+'examples\delphiindex.htm')
   //searchAndOpenDoc(ExtractFilePath(ParamStr(0))+'examples\citymax.bmp')

    writeln(inttostr64(factint(16)))
end.
