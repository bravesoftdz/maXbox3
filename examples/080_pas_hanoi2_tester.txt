PROGRAM Hanoi_Steps;
//Uses Crt;
{
 **************************************************************************
 solution of the tower of hanoi, double recursion!, loc's= 32, ex. _80
 try to program it with a canvas object
 ************************************************************************** }
//uses crt;

type 
    Tpatterns=  array[1..12] of shortstring;

var antwort: string;
    steps, step4, i: integer;
    patt: shortstring;
    varray: TPatterns;
    pattlst: TStringlist;
    
    
procedure initPatternArray;
begin
  varray[1]:=   'a to b a to c b to c a to b ';
  varray[2]:=   'a to b a to c b to c b to a ';
  varray[3]:=   'a to c a to b c to b a to c ';
  varray[4]:=   'a to c a to b c to b c to a ';
  varray[5]:=   'b to a b to c a to c b to a ';
  varray[6]:=   'b to a b to c a to c a to b ';
  varray[7]:=   'b to c b to a c to a b to c ';
  varray[8]:=   'b to c b to a c to a c to b ';
  varray[9]:=   'c to a c to b a to b c to a ';
  varray[10]:=  'c to a c to b a to b a to c ';
  varray[11]:=  'c to b c to a b to a c to b ';
  varray[12]:=  'c to b c to a b to a b to c ';

end;  

procedure SearchCodes;
var vs: shortstring;
   i, k: smallint;
   found: smallint;
begin
 found:= 0;
 writeln('patt codes-------------for solution: '+antwort);
 for i:= 0 to pattlst.count - 1 do begin
    vs:= pattlst.strings[i]
    for k:= 1 to high(varray) do
     if vs = varray[k] then begin
       //writeln('patt code: '+inttostr(k));
       inc(found)
       //if found mod 24 = 0 then writeln('') else 
       write(inttostr(k)+'-');
      if found mod 24 = 0 then writeln('') 
     end;  
 end;
end; 

 
procedure move(high: integer; a,c,b: char);
begin
  if high > 1 then begin
    move(high-1,a,b,c);
    //writeln(inttostr(steps)+' move from        ' +a +' to   '  +c);
    writeln(a+' to '+c);
    inc(step4)
    patt:= patt+a+' to '+c+' ';
    if step4 mod 4 = 0 then begin
    pattlst.add(patt)
       writeln(patt)
       patt:= '';
    end;   
    move(high-1,b,c,a);
    inc(steps)

  end else begin
    //writeln(inttostr(steps)+' move from        ' +a +' to   '  +c)
    writeln(a+' to '+c)
    inc(step4)
    patt:= patt+a +' to '+c+' ';
     if step4 mod 4 = 0 then begin
    pattlst.add(patt)
       writeln(patt)
       patt:= '';
    end;   
    inc(steps)
  end; 
  //writeln(' very last') 
 end;
 
 
function GetAngle(x,y:Extended):Double;
var r: Extended;
begin
  r:= arctan2(y,x); // Winkel in Rad (=Bogenmass d.h. -Pi..+Pi)
  if r<0 then r:=2*pi+r;
  result:= RadToDeg(r); // umwandeln in Degrees (d.h. 0 bis 360 Grad)
end;

function  getWGSConst: double;
begin
 result:= pow(1 - 1 / 298.257223563, 2);
end; 

//private static final double LAT_CONV_FACTOR = Math.pow(1 - 1 / 298.257223563, 2);
	 
function Latitude2WGS84(lat: double): double;
begin	 
  result:= arctan(tan(lat) * getWGSConst);
end;

function acos2WGS84Lat(lat: double): double;
begin	 
  result:= GRadToDeg(latitude2WGS84(lat));
end;

 

begin
  steps:= 0;
  step4:= 0;
  initPatternArray;
  pattlst:= TStringlist.create;
  antwort:= readln('How much on a pile ?');
  Writeln('Pile solution of: '+(antwort))
  move(strtoInt(antwort),'a','b','c');
  Writeln('had total '+inttoStr(steps)+ ' steps');
  for i:= 0 to pattlst.count - 1 do
    writeln(pattlst.strings[i]);
    
  SearchCodes;  
   println(getcurrentdir)
   writeln(dropt(getcurrentdir))

   beep;

  {Writeln('or '+chr(bintoint(inttobin(ord('A') OR ord('B')))))
  Writeln('xor '+chr(ord('A') XOR ord('B')))
  Writeln('and '+chr(ord('A') AND ord('B')))
  Writeln('not '+((chr(NOT ord('A')))))
  Writeln('and'+chr((NOT ord('A') AND ord('B'))))}
  Writeln(inttostr(timegetTime))
  currencyformat;
  //Writeln(floatToStr(trunc(GetCPUSpeed)))
  //leadbytes
  writeln(floattostr(power(2,64)))
  writeln(floattoSTr(getFormulaValue('3*45+ln(34)-sqrt(16)')));
  writeln(floattoSTr(maxCalc('3*45+ln(34)-sqrt(16)')));
  writeln(floattostr(latitude2WGS84(200)))
  writeln(floattoStr(acos2WGS84Lat(200)))
  writeln(floatToStr(GetAngle(12, 144)));

end.

The 12 Main Step Patterns!

--1-------2-------3-------4-------  A 1,2,3,4
a to b  a to b   a to c  a to c   
a to c  a to c   a to b  a to b
b to c  b to c   c to b  c to b
a to b  b to a   a to c  c to a
--5-------6--------7-------8------  B 5,6,7,8
b to a  b to a   b to c  b to c    
b to c  b to c   b to a  b to a
a to c  a to c   c to a  c to a
b to a  a to b   b to c  c to b
--9-------10-------11------12-----  C 9,10,11,12
c to a  c to a   c to b  c to b   
c to b  c to b   c to a  c to a
a to b  a to b   b to a  b to a
c to a  a to c   c to b  b to c
----------------------------------


Those are the 5 work Patterns:

move from    1   a to   c     2   a to   c     3  a to   c     a to c
move from        a to   b         b to   a        b to   a     b to c
move from        c to   b         b to   c        c to   b     b to a

move from    4   c to   a     5   c to   a   (Inv 1) c to a   c to a 
move from        b to   a         b to   a           b to c   c to b
move from        c to   b         b to   c           a to b   a to b

NEW Sequence of Step  / Patterns
  2  3               
  3  1-9
  4  3-6-11-3
  5  1-10-7-1-9-8-1-10
  6  3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3
  7  1-10-5-1-9-6-1-10-5-2-9-5-1-10-5-
     1-9-6-1-9-5-2-9-6-1-10-5-1-9-6-1-9
  
  8  3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-
     3-5-12-3-5-11-4-5-12-3-6-11-3-5-12-
     3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-
     4-5-11-3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-
  
  9  1-10-7-1-09-8-1-10-7-2-09-7-1-10-7-
     1-09-8-1-09-7-2-09-8-1-10-7-1-09-8-
     1-10-7-2-09-7-1-10-7-2-09-8-1-09-7-
     2-09-7-1-10-7-1-09-8-1-10-7-2-09-7-
     1-10-7-1-09-8-1-09-7-2-09-8-1-10-7-
     1-09-8-1-09-7-2-09-7-1-10-7-2-09-8-
     1-09-7-2-09-8-1-10-7-1-09-8-1-10-7-
     2-09-7-1-10-7-1-09-8-1-09-7-2-09-8-
     1-10-7-1-09-8-1-   
     
 10  3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-    (15*17=255*4=1020+3=2^10-1)
     3-5-12-3-5-11-4-5-12-3-6-11-3-5-12-
     3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-
     4-5-11-3-6-11-3-5-12-3-6-11-4-5-11-
     3-6-11-3-5-12-3-5-11-4-5-12-3-6-11-
     3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-
     3-5-11-4-5-12-3-6-11-3-5-12-3-6-11-
     4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-
     4-5-12-3-5-11-4-5-11-3-6-11-3-5-12-
     3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-
     4-5-12-3-6-11-3-5-12-3-5-11-4-5-11-
     3-6-11-4-5-12-3-5-11-4-5-11-3-6-11-
     3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-
     3-5-11-4-5-12-3-6-11-3-5-12-3-6-11-
     4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-  
     
 12  3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-      Diagonal Pattern 4-6-12!
     3-5-12-3-5-11-4-5-12-3-6-11-3-5-12-                       3-5-11
     3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-
     4-5-11-3-6-11-3-5-12-3-6-11-4-5-11-
     3-6-11-3-5-12-3-5-11-4-5-12-3-6-11-
     3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-
     3-5-11-4-5-12-3-6-11-3-5-12-3-6-11-
     4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-
     4-5-12-3-5-11-4-5-11-3-6-11-3-5-12-
     3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-
     4-5-12-3-6-11-3-5-12-3-5-11-4-5-11-
     3-6-11-4-5-12-3-5-11-4-5-11-3-6-11-
     3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-
     3-5-11-4-5-12-3-6-11-3-5-12-3-6-11-
     4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-
     3-5-12-3-5-11-4-5-12-3-6-11-3-5-12-
     3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-
     4-5-12-3-6-11-3-5-12-3-6-11-4-5-11-
     3-6-11-3-5-12-3-5-11-4-5-12-3-6-11-
     3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-
     3-5-11-4-5-11-3-6-11-3-5-12-3-6-11-
     4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-
     4-5-12-3-5-11-4-5-12-3-6-11-3-5-12-
     3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-
     4-5-12-3-6-11-3-5-12-3-6-11-4-5-11-
     3-6-11-4-5-12-3-5-11-4-5-11-3-6-11-
     3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-
     3-5-11-4-5-12-3-6-11-3-5-12-3-5-11-
     4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-
     3-5-12-3-5-11-4-5-12-3-6-11-3-5-12-
     3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-
     4-5-11-3-6-11-3-5-12-3-6-11-4-5-11-
     3-6-11-4-5-12-3-5-11-4-5-12-3-6-11-
     3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-
     3-5-11-4-5-11-3-6-11-3-5-12-3-6-11-
     4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-
     4-5-12-3-5-11-4-5-11-3-6-11-3-5-12-
     3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-
     4-5-12-3-6-11-3-5-12-3-5-11-4-5-11-
     3-6-11-4-5-12-3-5-11-4-5-12-3-6-11-
     3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-
     3-5-11-4-5-12-3-6-11-3-5-12-3-5-11-
     4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-
     4-5-12-3-5-11-4-5-12-3-6-11-3-5-12-
     3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-
     4-5-11-3-6-11-3-5-12-3-6-11-4-5-11-
     3-6-11-3-5-12-3-5-11-4-5-12-3-6-11-
     3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-
     3-5-11-4-5-11-3-6-11-3-5-12-3-6-11-
     4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-
     4-5-12-3-5-11-4-5-12-3-6-11-3-5-12-
     3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-
     4-5-12-3-6-11-3-5-12-3-6-11-4-5-11-
     3-6-11-4-5-12-3-5-11-4-5-11-3-6-11-
     3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-
     3-5-11-4-5-12-3-6-11-3-5-12-3-5-11-
     4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-
     3-5-12-3-5-11-4-5-12-3-6-11-3-5-12-
     3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-
     4-5-11-3-6-11-3-5-12-3-6-11-4-5-11-
     3-6-11-    



Tester
                     X                  X                 X
  12 3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-5-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-3-5-12-3-5-11-4-5-12-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-4-5-12-3-5-11-4-5-11-
     3-6-11-3-5-12-3-6-11-4-5-11-3-6-11-    




just inside maxbox
         ____    ___   _      ____    _   _   _
        |  _ \  |  _| | |    |  _ \  | | | | | |
        | | . | | |_  | |    | |_| | | |_| | | |
        | | | | |  _| | |    |  __/  |  _  | | |          
        | |_. | | |_  | |__  | |     | | | | | |                      
        |____/  |___| |____| |_|     |_| |_| |_| 
                                     

Old
--5-------6--------7-------8------ 5-->7, 6-->8
b to c  b to c   b to a  b to a   5 6 7 8  a,b,c 
b to a  b to a   b to c  b to c
c to a  c to a   a to c  a to c
b to c  c to b   b to a  a to b
