Version:0.9
StartHTML:0000000105
EndHTML:0000084818
StartFragment:0000001037
EndFragment:0000084802
<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>mXScriptasHTML</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="generator" content="SynEdit HTML exporter" />
<style type="text/css">
<!--
body { color: #000000; background-color: #FFFFFF; }
.pas1-assembler { }
.pas1-character { text-decoration: underline; }
.pas1-comment { color: #000080; font-style: italic; }
.pas1-float { color: #800080; }
.pas1-hexadecimal { color: #FF00FF; }
.pas1-identifier { }
.pas1-number { color: #FF0000; }
.pas1-preprocessor { font-style: italic; }
.pas1-reservedword { color: #000000; font-weight: bold; }
.pas1-space { }
.pas1-string { color: #008080; }
.pas1-symbol { color: #000000; }
-->
</style>
</head>
<body>
<!--StartFragment--><pre><code><span class="pas1-comment">{***************************************************************
2  *            bITbox
3  * Project  : boolean logic education system bITbox
4  * Unit Name: 308_bitbox3.txt
5  * Purpose  : Demonstrates all boolean circuits and all 16 boolean logics
6  * Date     : 18/10/2012  -  14:38:56, loc's=466, 39 intf
7  *
8  ****************************************************************}
</span><span class="pas1-number">9</span><span class="pas1-space"> </span><span class="pas1-comment">//shows structure of procedure types, max@kleiner.com ex. _299
</span><span class="pas1-number">10</span><span class="pas1-space"> </span><span class="pas1-comment">//compilerswitch $N- turns the coprocessor off, {$mode objfpc}{$H+} loc's =1
</span><span class="pas1-number">11</span><span class="pas1-space"> 
</span><span class="pas1-number">12</span><span class="pas1-space"> </span><span class="pas1-reservedword">PROGRAM</span><span class="pas1-space"> Animation_BooleanLAB;
</span><span class="pas1-number">13</span><span class="pas1-space"> 
</span><span class="pas1-number">14</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TFrm1_FormPaint(Sender: TObject); </span><span class="pas1-reservedword">forward</span><span class="pas1-symbol">;
</span><span class="pas1-number">15</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TFrm1_timerRedrawTimer(Sender: TObject); </span><span class="pas1-reservedword">forward</span><span class="pas1-symbol">;
</span><span class="pas1-number">16</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TFrm1_CloseClick(Sender: TObject); </span><span class="pas1-reservedword">forward</span><span class="pas1-symbol">;
</span><span class="pas1-number">17</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TFrm1_PauseClick(Sender: TObject); </span><span class="pas1-reservedword">forward</span><span class="pas1-symbol">;
</span><span class="pas1-number">18</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TFrm1_trackSpeedChange(Sender: TObject); </span><span class="pas1-reservedword">forward</span><span class="pas1-symbol">;
</span><span class="pas1-number">19</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TFrm1_closeForm(Sender: TObject; </span><span class="pas1-reservedword">var</span><span class="pas1-space"> Action: TCloseAction); </span><span class="pas1-reservedword">forward</span><span class="pas1-symbol">;
</span><span class="pas1-number">20</span><span class="pas1-space"> 
</span><span class="pas1-number">21</span><span class="pas1-space"> </span><span class="pas1-reservedword">Const</span><span class="pas1-space"> MILLISECONDS = </span><span class="pas1-number">50</span><span class="pas1-symbol">; </span><span class="pas1-comment">//for timer, sync with trackbar 1000/50= position 20
</span><span class="pas1-number">22</span><span class="pas1-space">  
</span><span class="pas1-number">23</span><span class="pas1-space"> </span><span class="pas1-reservedword">type
</span><span class="pas1-number">24</span><span class="pas1-space">   TBoolean_func = </span><span class="pas1-reservedword">Function</span><span class="pas1-symbol">(a,b: boolean): boolean; 
</span><span class="pas1-number">25</span><span class="pas1-space">   
</span><span class="pas1-number">26</span><span class="pas1-space"> </span><span class="pas1-reservedword">var</span><span class="pas1-space"> 
</span><span class="pas1-number">27</span><span class="pas1-space">   aFrm: TForm;
</span><span class="pas1-number">28</span><span class="pas1-space">   mT: TTimer;
</span><span class="pas1-number">29</span><span class="pas1-space">   tB: TTrackBar;
</span><span class="pas1-number">30</span><span class="pas1-space">   CurStep: Double;
</span><span class="pas1-number">31</span><span class="pas1-space">   btna, btnb, btnc: TBitBtn;
</span><span class="pas1-number">32</span><span class="pas1-space">   btnabool,btnbbool, astate,bstate,ledstate: boolean;
</span><span class="pas1-number">33</span><span class="pas1-space">   statbar: TStatusbar;
</span><span class="pas1-number">34</span><span class="pas1-space">   </span><span class="pas1-comment">//boolfct: TBoolean_func;
</span><span class="pas1-number">35</span><span class="pas1-space">   Lbox: TLISTBOX;
</span><span class="pas1-number">36</span><span class="pas1-space">   boxidx: byte;
</span><span class="pas1-number">37</span><span class="pas1-space"> 
</span><span class="pas1-number">38</span><span class="pas1-space"> 
</span><span class="pas1-number">39</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> DrawRosette2;
</span><span class="pas1-number">40</span><span class="pas1-space"> </span><span class="pas1-reservedword">var</span><span class="pas1-space"> m,p: TPoint;
</span><span class="pas1-number">41</span><span class="pas1-space">   rho,phi: real;
</span><span class="pas1-number">42</span><span class="pas1-space">   i,r: integer;
</span><span class="pas1-number">43</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">44</span><span class="pas1-space">    </span><span class="pas1-reservedword">with</span><span class="pas1-space"> afrm.Canvas </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">45</span><span class="pas1-space">      Pen.Width:= </span><span class="pas1-number">2</span><span class="pas1-symbol">;
</span><span class="pas1-number">46</span><span class="pas1-space">      Pen.Color:= clyellow;
</span><span class="pas1-number">47</span><span class="pas1-space">      </span><span class="pas1-comment">//Brush.Color:= clblue;
</span><span class="pas1-number">48</span><span class="pas1-space">      Brush.Style:= bsClear;
</span><span class="pas1-number">49</span><span class="pas1-space">      </span><span class="pas1-comment">//compute centerpoint and draw circle
</span><span class="pas1-number">50</span><span class="pas1-space">      m.x:=</span><span class="pas1-number">170</span><span class="pas1-symbol">; m.y:=</span><span class="pas1-number">165</span><span class="pas1-symbol">; r:=</span><span class="pas1-number">75</span><span class="pas1-symbol">;
</span><span class="pas1-number">51</span><span class="pas1-space">      rho:=</span><span class="pas1-number">360</span><span class="pas1-symbol">/</span><span class="pas1-number">18</span><span class="pas1-symbol">;
</span><span class="pas1-number">52</span><span class="pas1-space">      </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i:=</span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> </span><span class="pas1-number">18</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">53</span><span class="pas1-space">        phi:=i*rho*pi/</span><span class="pas1-number">180</span><span class="pas1-symbol">;
</span><span class="pas1-number">54</span><span class="pas1-space">        p.x:=m.x+round(r*cos(phi));
</span><span class="pas1-number">55</span><span class="pas1-space">        p.y:=m.y+round(r*sin(phi));
</span><span class="pas1-number">56</span><span class="pas1-space">        Ellipse(p.x-r,p.y-r,p.x+r,p.y+r);
</span><span class="pas1-number">57</span><span class="pas1-space">        Ellipse(p.x-</span><span class="pas1-number">3</span><span class="pas1-symbol">,p.y-</span><span class="pas1-number">3</span><span class="pas1-symbol">,p.x+</span><span class="pas1-number">3</span><span class="pas1-symbol">,p.y+</span><span class="pas1-number">3</span><span class="pas1-symbol">);
</span><span class="pas1-number">58</span><span class="pas1-space">      </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">59</span><span class="pas1-space">      </span><span class="pas1-comment">//application.processMessages;
</span><span class="pas1-number">60</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">61</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">62</span><span class="pas1-space"> 
</span><span class="pas1-number">63</span><span class="pas1-space"> 
</span><span class="pas1-number">64</span><span class="pas1-space"> </span><span class="pas1-reservedword">function</span><span class="pas1-space"> TForm1_RotatePoint(APoint,ACenter: TPoint; AAngle: Double): TPoint;
</span><span class="pas1-number">65</span><span class="pas1-space"> </span><span class="pas1-reservedword">var</span><span class="pas1-space"> dx,dy: Double;
</span><span class="pas1-number">66</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">67</span><span class="pas1-space">   dx:= (ACenter.Y * Sin(AAngle)) - (ACenter.X * Cos(AAngle)) + ACenter.X;
</span><span class="pas1-number">68</span><span class="pas1-space">   dy:= -(ACenter.X * Sin(AAngle)) - (ACenter.Y * Cos(AAngle)) + ACenter.Y;
</span><span class="pas1-number">69</span><span class="pas1-space">   Result.X:= Round((APoint.X * Cos(AAngle)) - (APoint.Y * Sin(AAngle)) + dx);
</span><span class="pas1-number">70</span><span class="pas1-space">   Result.Y:= Round((APoint.X * Sin(AAngle)) + (APoint.Y * Cos(AAngle)) + dy);
</span><span class="pas1-number">71</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">72</span><span class="pas1-space">   
</span><span class="pas1-number">73</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TForm1_RotatePolygon(</span><span class="pas1-reservedword">var</span><span class="pas1-space"> APoints: </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> TPoint; AAngle: Double);
</span><span class="pas1-number">74</span><span class="pas1-space"> </span><span class="pas1-reservedword">var</span><span class="pas1-space"> aCentr: TPoint;
</span><span class="pas1-number">75</span><span class="pas1-space">     i: Integer;
</span><span class="pas1-number">76</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">77</span><span class="pas1-space">   aCentr:= Point(</span><span class="pas1-number">8</span><span class="pas1-symbol">, </span><span class="pas1-number">20</span><span class="pas1-symbol">);
</span><span class="pas1-number">78</span><span class="pas1-space">   </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i:= </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> Length(APoints)-</span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">79</span><span class="pas1-space">     aCentr.X:= aCentr.X + APoints[i].X;
</span><span class="pas1-number">80</span><span class="pas1-space">     aCentr.Y:= aCentr.Y + APoints[i].Y;
</span><span class="pas1-number">81</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">82</span><span class="pas1-space">   aCentr.X:= aCentr.X </span><span class="pas1-reservedword">div</span><span class="pas1-space"> Length(APoints);
</span><span class="pas1-number">83</span><span class="pas1-space">   aCentr.Y:= aCentr.Y </span><span class="pas1-reservedword">div</span><span class="pas1-space"> Length(APoints);
</span><span class="pas1-number">84</span><span class="pas1-space">   </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i:= </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> Length(APoints)-</span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-number">85</span><span class="pas1-space">     APoints[i]:= TForm1_RotatePoint(APoints[i], aCentr, AAngle);
</span><span class="pas1-number">86</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">87</span><span class="pas1-space"> 
</span><span class="pas1-number">88</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TFrm1_FormPaint(Sender: TObject);
</span><span class="pas1-number">89</span><span class="pas1-space"> </span><span class="pas1-reservedword">var
</span><span class="pas1-number">90</span><span class="pas1-space">   </span><span class="pas1-comment">//lPoints: array[0..2] of TPoint;
</span><span class="pas1-number">91</span><span class="pas1-space">   lPoints: </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> TPoint;
</span><span class="pas1-number">92</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">93</span><span class="pas1-space">   SetLength(lpoints,</span><span class="pas1-number">3</span><span class="pas1-symbol">);
</span><span class="pas1-number">94</span><span class="pas1-space">   lPoints[</span><span class="pas1-number">0</span><span class="pas1-symbol">].X:= </span><span class="pas1-number">100</span><span class="pas1-symbol">;
</span><span class="pas1-number">95</span><span class="pas1-space">   lPoints[</span><span class="pas1-number">0</span><span class="pas1-symbol">].Y:= </span><span class="pas1-number">250</span><span class="pas1-symbol">;
</span><span class="pas1-number">96</span><span class="pas1-space">   lPoints[</span><span class="pas1-number">1</span><span class="pas1-symbol">].X:= </span><span class="pas1-number">200</span><span class="pas1-symbol">;
</span><span class="pas1-number">97</span><span class="pas1-space">   lPoints[</span><span class="pas1-number">1</span><span class="pas1-symbol">].Y:= </span><span class="pas1-number">20</span><span class="pas1-symbol">;
</span><span class="pas1-number">98</span><span class="pas1-space">   lPoints[</span><span class="pas1-number">2</span><span class="pas1-symbol">].X:= </span><span class="pas1-number">200</span><span class="pas1-symbol">;
</span><span class="pas1-number">99</span><span class="pas1-space">   lPoints[</span><span class="pas1-number">2</span><span class="pas1-symbol">].Y:= </span><span class="pas1-number">200</span><span class="pas1-symbol">;
</span><span class="pas1-number">100</span><span class="pas1-space">   TForm1_RotatePolygon(lpoints, CurStep);
</span><span class="pas1-number">101</span><span class="pas1-space">   afrm.Canvas.Pen.color:= clBlue;
</span><span class="pas1-number">102</span><span class="pas1-space">   afrm.Canvas.Pen.Width:= </span><span class="pas1-number">15</span><span class="pas1-symbol">;
</span><span class="pas1-number">103</span><span class="pas1-space">   afrm.Canvas.Polygon(lPoints);
</span><span class="pas1-number">104</span><span class="pas1-space">   Drawrosette2;
</span><span class="pas1-number">105</span><span class="pas1-space">   </span><span class="pas1-reservedword">if</span><span class="pas1-space"> ledstate </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">106</span><span class="pas1-space">     afrm.Canvas.Rectangle(</span><span class="pas1-number">600</span><span class="pas1-symbol">,</span><span class="pas1-number">320</span><span class="pas1-symbol">,</span><span class="pas1-number">350</span><span class="pas1-symbol">,</span><span class="pas1-number">180</span><span class="pas1-symbol">)
</span><span class="pas1-number">107</span><span class="pas1-space">     afrm.Canvas.Rectangle(</span><span class="pas1-number">170</span><span class="pas1-symbol">,</span><span class="pas1-number">165</span><span class="pas1-symbol">,</span><span class="pas1-number">450</span><span class="pas1-symbol">,</span><span class="pas1-number">180</span><span class="pas1-symbol">)
</span><span class="pas1-number">108</span><span class="pas1-space">   </span><span class="pas1-reservedword">end
</span><span class="pas1-number">109</span><span class="pas1-space">   </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">110</span><span class="pas1-space">     afrm.Canvas.Pen.color:= clblack;
</span><span class="pas1-number">111</span><span class="pas1-space">     afrm.Canvas.Rectangle(</span><span class="pas1-number">600</span><span class="pas1-symbol">,</span><span class="pas1-number">320</span><span class="pas1-symbol">,</span><span class="pas1-number">350</span><span class="pas1-symbol">,</span><span class="pas1-number">180</span><span class="pas1-symbol">);
</span><span class="pas1-number">112</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">113</span><span class="pas1-space">   </span><span class="pas1-comment">//application.processMessages;
</span><span class="pas1-number">114</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">115</span><span class="pas1-space"> 
</span><span class="pas1-number">116</span><span class="pas1-space"> 
</span><span class="pas1-number">117</span><span class="pas1-space">  </span><span class="pas1-reservedword">FUNCTION</span><span class="pas1-space"> boolFCT(solutionstring: </span><span class="pas1-reservedword">shortstring</span><span class="pas1-symbol">; bfct: TBoolean_func;
</span><span class="pas1-number">118</span><span class="pas1-space">                                                   fct_name: </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">): boolean;
</span><span class="pas1-number">119</span><span class="pas1-space">   </span><span class="pas1-reservedword">BEGIN
</span><span class="pas1-number">120</span><span class="pas1-space">     </span><span class="pas1-comment">//Writeln('debug boolean x | '+solutionstring+'  ' + fct_name);
</span><span class="pas1-number">121</span><span class="pas1-space">     statbar.panels.items[</span><span class="pas1-number">1</span><span class="pas1-symbol">].text:= fct_name +</span><span class="pas1-string">' of: '</span><span class="pas1-symbol">+solutionstring;
</span><span class="pas1-number">122</span><span class="pas1-space">     result:= bfct(astate,bstate);    </span><span class="pas1-comment">//boolfct rec.!
</span><span class="pas1-number">123</span><span class="pas1-space">   </span><span class="pas1-reservedword">END</span><span class="pas1-symbol">;
</span><span class="pas1-number">124</span><span class="pas1-space">  
</span><span class="pas1-number">125</span><span class="pas1-space"> 
</span><span class="pas1-number">126</span><span class="pas1-space"> </span><span class="pas1-comment">//************************* 16 all booleans ******************************//    
</span><span class="pas1-number">127</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> Contradiction(a,b: boolean): boolean;  </span><span class="pas1-comment">//1 FALSE Contradiction
</span><span class="pas1-number">128</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">129</span><span class="pas1-space">     result:= false;
</span><span class="pas1-number">130</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
</span><span class="pas1-number">131</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> Conjunction_AND(a,b: boolean):boolean; </span><span class="pas1-comment">//2 AND Conjunction x*y
</span><span class="pas1-number">132</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">133</span><span class="pas1-space">     result:= a </span><span class="pas1-reservedword">AND</span><span class="pas1-space"> b;
</span><span class="pas1-number">134</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
</span><span class="pas1-number">135</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> Inhibition(a,b: boolean): boolean;     </span><span class="pas1-comment">//3 Inhibition x*^y
</span><span class="pas1-number">136</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">137</span><span class="pas1-space">     result:= a </span><span class="pas1-reservedword">AND</span><span class="pas1-space"> </span><span class="pas1-reservedword">NOT</span><span class="pas1-space"> b;
</span><span class="pas1-number">138</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
</span><span class="pas1-number">139</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> Praependence(a,b: boolean): boolean;   </span><span class="pas1-comment">//4 Praependence x
</span><span class="pas1-number">140</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">141</span><span class="pas1-space">     result:= a;
</span><span class="pas1-number">142</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
</span><span class="pas1-number">143</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> Praesection(a,b: boolean): boolean;    </span><span class="pas1-comment">//5 Praesection ^x*y
</span><span class="pas1-number">144</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">145</span><span class="pas1-space">     result:= </span><span class="pas1-reservedword">NOT</span><span class="pas1-space"> a </span><span class="pas1-reservedword">AND</span><span class="pas1-space"> b;
</span><span class="pas1-number">146</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
</span><span class="pas1-number">147</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> Postpendence(a,b: boolean): boolean;   </span><span class="pas1-comment">//6 Postpendence y
</span><span class="pas1-number">148</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">149</span><span class="pas1-space">     result:= b;
</span><span class="pas1-number">150</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
</span><span class="pas1-number">151</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> EXOR(a,b: boolean): boolean;           </span><span class="pas1-comment">//7 exclusive OR XOR= x*^y+^x*y
</span><span class="pas1-number">152</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">153</span><span class="pas1-space">     </span><span class="pas1-comment">//result:= a XOR b; //alternative
</span><span class="pas1-number">154</span><span class="pas1-space">     </span><span class="pas1-comment">//result:= a AND NOT b OR NOT a AND b;
</span><span class="pas1-number">155</span><span class="pas1-space">     result:= </span><span class="pas1-reservedword">NOT</span><span class="pas1-symbol">(A=B);    </span><span class="pas1-comment">//!
</span><span class="pas1-number">156</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
</span><span class="pas1-number">157</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> Disjunction_OR(a,b: boolean): boolean; </span><span class="pas1-comment">//8 Disjunction OR = x+y
</span><span class="pas1-number">158</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">159</span><span class="pas1-space">     </span><span class="pas1-comment">//result:= a XOR b;
</span><span class="pas1-number">160</span><span class="pas1-space">     result:= a </span><span class="pas1-reservedword">OR</span><span class="pas1-space"> b;
</span><span class="pas1-number">161</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
</span><span class="pas1-number">162</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> NOR(a,b: boolean): boolean;            </span><span class="pas1-comment">//9 Rejection
</span><span class="pas1-number">163</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">164</span><span class="pas1-space">     result:= </span><span class="pas1-reservedword">NOT</span><span class="pas1-symbol">(a </span><span class="pas1-reservedword">OR</span><span class="pas1-space"> b);
</span><span class="pas1-number">165</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
</span><span class="pas1-number">166</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> Aequivalence(a,b: boolean): boolean;   </span><span class="pas1-comment">//10 double implication ^x*^y+x*y
</span><span class="pas1-number">167</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">168</span><span class="pas1-space">     result:= (</span><span class="pas1-reservedword">NOT</span><span class="pas1-space"> a </span><span class="pas1-reservedword">OR</span><span class="pas1-space"> b) </span><span class="pas1-reservedword">AND</span><span class="pas1-space"> (</span><span class="pas1-reservedword">NOT</span><span class="pas1-space"> b </span><span class="pas1-reservedword">or</span><span class="pas1-space"> a);
</span><span class="pas1-number">169</span><span class="pas1-space">     </span><span class="pas1-comment">//result:= NOT a AND NOT b OR a AND b
</span><span class="pas1-number">170</span><span class="pas1-space">     </span><span class="pas1-comment">//result:= NOT(a XOR b);
</span><span class="pas1-number">171</span><span class="pas1-space">     </span><span class="pas1-comment">//result:= NOT(EXOR(a,b));
</span><span class="pas1-number">172</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;   
</span><span class="pas1-number">173</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> NegationY(a,b: boolean): boolean;      </span><span class="pas1-comment">//11 ynegation ^y
</span><span class="pas1-number">174</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">175</span><span class="pas1-space">     result:= </span><span class="pas1-reservedword">NOT</span><span class="pas1-space"> b;
</span><span class="pas1-number">176</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;   
</span><span class="pas1-number">177</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> ImplicationY(a,b: boolean): boolean;   </span><span class="pas1-comment">//12 yimplication y--&gt;x; x+^y
</span><span class="pas1-number">178</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">179</span><span class="pas1-space">     result:=  a </span><span class="pas1-reservedword">OR</span><span class="pas1-space"> </span><span class="pas1-reservedword">NOT</span><span class="pas1-space"> b;
</span><span class="pas1-number">180</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;   
</span><span class="pas1-number">181</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> NegationX(a,b: boolean): boolean;      </span><span class="pas1-comment">//13 ynegation ^x
</span><span class="pas1-number">182</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">183</span><span class="pas1-space">     result:= </span><span class="pas1-reservedword">NOT</span><span class="pas1-space"> a;
</span><span class="pas1-number">184</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;   
</span><span class="pas1-number">185</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> ImplicationX(a,b: boolean): boolean;   </span><span class="pas1-comment">//14 ximplication x--&gt;y; ^x+y
</span><span class="pas1-number">186</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">187</span><span class="pas1-space">     result:=  </span><span class="pas1-reservedword">NOT</span><span class="pas1-space"> a </span><span class="pas1-reservedword">OR</span><span class="pas1-space"> b;
</span><span class="pas1-number">188</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;   
</span><span class="pas1-number">189</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> NAND(a,b: boolean): boolean;           </span><span class="pas1-comment">//15 NAND Exclusion
</span><span class="pas1-number">190</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">191</span><span class="pas1-space">     result:= </span><span class="pas1-reservedword">NOT</span><span class="pas1-symbol">(a </span><span class="pas1-reservedword">AND</span><span class="pas1-space"> b);
</span><span class="pas1-number">192</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
</span><span class="pas1-number">193</span><span class="pas1-space">   </span><span class="pas1-reservedword">function</span><span class="pas1-space"> Tautologic(a,b: boolean): boolean;     </span><span class="pas1-comment">//16 TRUE Tautologic
</span><span class="pas1-number">194</span><span class="pas1-space">   </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">195</span><span class="pas1-space">     result:= true;
</span><span class="pas1-number">196</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
</span><span class="pas1-number">197</span><span class="pas1-space"> </span><span class="pas1-comment">//************************* 16 all booleans end *****************************//    
</span><span class="pas1-number">198</span><span class="pas1-space"> 
</span><span class="pas1-number">199</span><span class="pas1-space">   
</span><span class="pas1-number">200</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> addAllBooleans;
</span><span class="pas1-number">201</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">202</span><span class="pas1-space">   </span><span class="pas1-comment">//S:= StringOfChar(' ',i div 2) +S+ StringOfChar(' ',i-i div 2); 
</span><span class="pas1-number">203</span><span class="pas1-space">    lbox.Clear;
</span><span class="pas1-number">204</span><span class="pas1-space">    </span><span class="pas1-reservedword">with</span><span class="pas1-space"> LBox.Items </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">205</span><span class="pas1-space">    add(</span><span class="pas1-string">'All 16 Boolean Functions'</span><span class="pas1-symbol">);
</span><span class="pas1-number">206</span><span class="pas1-space">    add(</span><span class="pas1-string">'--------------------------------------------------------------'</span><span class="pas1-symbol">);
</span><span class="pas1-number">207</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'01 FALSE(Contradiction)=0 %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">21</span><span class="pas1-symbol">,</span><span class="pas1-string">'0000'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">208</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'02 AND(Conjunction)=xy %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">27</span><span class="pas1-symbol">,</span><span class="pas1-string">'0001'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">209</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'03 Inhibition=x^y %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">42</span><span class="pas1-symbol">,</span><span class="pas1-string">'0010'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">210</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'04 Prependence=x %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">37</span><span class="pas1-symbol">,</span><span class="pas1-string">'0011'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">211</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'05 Presection=^xy %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">38</span><span class="pas1-symbol">,</span><span class="pas1-string">'0100'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">212</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'06 Postpendence=y %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">35</span><span class="pas1-symbol">,</span><span class="pas1-string">'0101'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">213</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'07 XOR(Exclusive OR)=x^y+^xy %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">12</span><span class="pas1-symbol">,</span><span class="pas1-string">'0110'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">214</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'08 OR(Disjunction)=x+y %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">29</span><span class="pas1-symbol">,</span><span class="pas1-string">'0111'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">215</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'09 NOR(Rejection)=^(x+y) %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">23</span><span class="pas1-symbol">,</span><span class="pas1-string">'1000'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">216</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'10 Aequivalence(BiCond)=^x^y+xy %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">05</span><span class="pas1-symbol">,</span><span class="pas1-string">'1001'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">217</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'11 NegationY=^y %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">40</span><span class="pas1-symbol">,</span><span class="pas1-string">'1010'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">218</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'12 ImplicationY(y--&gt;x)=x+^y %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">21</span><span class="pas1-symbol">,</span><span class="pas1-string">'1011'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">219</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'13 NegationX=^x %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">41</span><span class="pas1-symbol">,</span><span class="pas1-string">'1100'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">220</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'14 ImplicationX(x--&gt;y)=^x+y %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">21</span><span class="pas1-symbol">,</span><span class="pas1-string">'1101'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">221</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'15 NAND(Exclusion)=^(xy) %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">22</span><span class="pas1-symbol">,</span><span class="pas1-string">'1110'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">222</span><span class="pas1-space">    add(format(</span><span class="pas1-string">'16 TRUE(Tautologic)=1 %*s'</span><span class="pas1-symbol">,[</span><span class="pas1-number">27</span><span class="pas1-symbol">,</span><span class="pas1-string">'1111'</span><span class="pas1-symbol">]));
</span><span class="pas1-number">223</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;    
</span><span class="pas1-number">224</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">; 
</span><span class="pas1-number">225</span><span class="pas1-space"> 
</span><span class="pas1-number">226</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> boxClick(Sender: TObject);
</span><span class="pas1-number">227</span><span class="pas1-space"> </span><span class="pas1-comment">//var idx: integer;
</span><span class="pas1-number">228</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin</span><span class="pas1-space"> 
</span><span class="pas1-number">229</span><span class="pas1-space">    boxidx:= lbox.itemindex;
</span><span class="pas1-number">230</span><span class="pas1-space">    </span><span class="pas1-comment">//writeln((Lbox.Items[boxidx]))
</span><span class="pas1-number">231</span><span class="pas1-space">    statbar.panels.items[</span><span class="pas1-number">1</span><span class="pas1-symbol">].text:= Lbox.Items[boxidx]+</span><span class="pas1-string">' is set active'</span><span class="pas1-symbol">;
</span><span class="pas1-number">232</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">233</span><span class="pas1-space"> 
</span><span class="pas1-number">234</span><span class="pas1-space"> </span><span class="pas1-comment">//*************************************************************************
</span><span class="pas1-number">235</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> SetLEDStates;
</span><span class="pas1-number">236</span><span class="pas1-space"> </span><span class="pas1-comment">//var ledstate: boolean;
</span><span class="pas1-number">237</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">238</span><span class="pas1-space">   </span><span class="pas1-comment">//ledstate:= ImplicationX(astate, bstate);
</span><span class="pas1-number">239</span><span class="pas1-space">   </span><span class="pas1-comment">//statbar.panels.items[1].text:= 'Implication';
</span><span class="pas1-number">240</span><span class="pas1-space">   </span><span class="pas1-reservedword">case</span><span class="pas1-space"> boxidx </span><span class="pas1-reservedword">of
</span><span class="pas1-number">241</span><span class="pas1-space">     </span><span class="pas1-number">2</span><span class="pas1-symbol">:  ledstate:= boolFCT(</span><span class="pas1-string">'0000'</span><span class="pas1-symbol">, @Contradiction, </span><span class="pas1-string">'Contradiction'</span><span class="pas1-symbol">);
</span><span class="pas1-number">242</span><span class="pas1-space">     </span><span class="pas1-number">3</span><span class="pas1-symbol">:  ledstate:= boolFCT(</span><span class="pas1-string">'0001'</span><span class="pas1-symbol">, @Conjunction_AND, </span><span class="pas1-string">'Conjunction'</span><span class="pas1-symbol">);
</span><span class="pas1-number">243</span><span class="pas1-space">     </span><span class="pas1-number">4</span><span class="pas1-symbol">:  ledstate:= boolFCT(</span><span class="pas1-string">'0010'</span><span class="pas1-symbol">, @Inhibition, </span><span class="pas1-string">'Inhibition'</span><span class="pas1-symbol">);
</span><span class="pas1-number">244</span><span class="pas1-space">     </span><span class="pas1-number">5</span><span class="pas1-symbol">:  ledstate:= boolFCT(</span><span class="pas1-string">'0011'</span><span class="pas1-symbol">, @Praependence, </span><span class="pas1-string">'Praependence'</span><span class="pas1-symbol">);
</span><span class="pas1-number">245</span><span class="pas1-space">     </span><span class="pas1-number">6</span><span class="pas1-symbol">:  ledstate:= boolFCT(</span><span class="pas1-string">'0100'</span><span class="pas1-symbol">, @Praesection, </span><span class="pas1-string">'Praesection'</span><span class="pas1-symbol">);
</span><span class="pas1-number">246</span><span class="pas1-space">     </span><span class="pas1-number">7</span><span class="pas1-symbol">:  ledstate:= boolFCT(</span><span class="pas1-string">'0101'</span><span class="pas1-symbol">, @Postpendence, </span><span class="pas1-string">'Postpendence'</span><span class="pas1-symbol">);
</span><span class="pas1-number">247</span><span class="pas1-space">     </span><span class="pas1-number">8</span><span class="pas1-symbol">:  ledstate:= boolFCT(</span><span class="pas1-string">'0110'</span><span class="pas1-symbol">, @EXOR, </span><span class="pas1-string">'Exclusive OR'</span><span class="pas1-symbol">);
</span><span class="pas1-number">248</span><span class="pas1-space">     </span><span class="pas1-number">9</span><span class="pas1-symbol">:  ledstate:= boolFCT(</span><span class="pas1-string">'0111'</span><span class="pas1-symbol">, @Disjunction_OR, </span><span class="pas1-string">'Disjunction OR'</span><span class="pas1-symbol">);
</span><span class="pas1-number">249</span><span class="pas1-space">     </span><span class="pas1-number">10</span><span class="pas1-symbol">: ledstate:= boolFCT(</span><span class="pas1-string">'1000'</span><span class="pas1-symbol">, @NOR, </span><span class="pas1-string">'NOR Rejection'</span><span class="pas1-symbol">);
</span><span class="pas1-number">250</span><span class="pas1-space">     </span><span class="pas1-number">11</span><span class="pas1-symbol">: ledstate:= boolFCT(</span><span class="pas1-string">'1001'</span><span class="pas1-symbol">, @Aequivalence, </span><span class="pas1-string">'Bi Implication'</span><span class="pas1-symbol">);
</span><span class="pas1-number">251</span><span class="pas1-space">     </span><span class="pas1-number">12</span><span class="pas1-symbol">: ledstate:= boolFCT(</span><span class="pas1-string">'1010'</span><span class="pas1-symbol">, @NegationY, </span><span class="pas1-string">'Negation of Y'</span><span class="pas1-symbol">);
</span><span class="pas1-number">252</span><span class="pas1-space">     </span><span class="pas1-number">13</span><span class="pas1-symbol">: ledstate:= boolFCT(</span><span class="pas1-string">'1011'</span><span class="pas1-symbol">, @ImplicationY, </span><span class="pas1-string">'Implication of Y'</span><span class="pas1-symbol">);
</span><span class="pas1-number">253</span><span class="pas1-space">     </span><span class="pas1-number">14</span><span class="pas1-symbol">: ledstate:= boolFCT(</span><span class="pas1-string">'1100'</span><span class="pas1-symbol">, @NegationX, </span><span class="pas1-string">'Negation of X'</span><span class="pas1-symbol">);
</span><span class="pas1-number">254</span><span class="pas1-space">     </span><span class="pas1-number">15</span><span class="pas1-symbol">: ledstate:= boolFCT(</span><span class="pas1-string">'1101'</span><span class="pas1-symbol">, @ImplicationX, </span><span class="pas1-string">'Implication of X'</span><span class="pas1-symbol">);
</span><span class="pas1-number">255</span><span class="pas1-space">     </span><span class="pas1-number">16</span><span class="pas1-symbol">: ledstate:= boolFCT(</span><span class="pas1-string">'1110'</span><span class="pas1-symbol">, @NAND, </span><span class="pas1-string">'Not AND'</span><span class="pas1-symbol">);
</span><span class="pas1-number">256</span><span class="pas1-space">     </span><span class="pas1-number">17</span><span class="pas1-symbol">: ledstate:= boolFCT(</span><span class="pas1-string">'1111'</span><span class="pas1-symbol">, @Tautologic, </span><span class="pas1-string">'Tautologic'</span><span class="pas1-symbol">);
</span><span class="pas1-number">257</span><span class="pas1-space">     </span><span class="pas1-comment">//ledstate:= boolFCT('1,0,0,1', @Aequivalence, 'Bi Implication');
</span><span class="pas1-number">258</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">259</span><span class="pas1-space">   </span><span class="pas1-comment">//ledstate:= Aequivalence(astate,bstate)
</span><span class="pas1-number">260</span><span class="pas1-space">   </span><span class="pas1-comment">//statbar.panels.items[1].text:= 'Bi Implication';
</span><span class="pas1-number">261</span><span class="pas1-space">   </span><span class="pas1-reservedword">if</span><span class="pas1-space"> ledstate </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">262</span><span class="pas1-space">     btnc.glyph.LoadFromResourceName(getHINSTANCE,</span><span class="pas1-string">'LEDREDON'</span><span class="pas1-symbol">)
</span><span class="pas1-number">263</span><span class="pas1-space">     statbar.panels.items[</span><span class="pas1-number">0</span><span class="pas1-symbol">].text:= </span><span class="pas1-string">'LED is ON'</span><span class="pas1-symbol">;
</span><span class="pas1-number">264</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-space"> </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin</span><span class="pas1-space"> 
</span><span class="pas1-number">265</span><span class="pas1-space">     btnc.glyph.LoadFromResourceName(getHINSTANCE,</span><span class="pas1-string">'LEDREDOFF'</span><span class="pas1-symbol">);
</span><span class="pas1-number">266</span><span class="pas1-space">     statbar.panels.items[</span><span class="pas1-number">0</span><span class="pas1-symbol">].text:= </span><span class="pas1-string">'LED is OFF'</span><span class="pas1-symbol">;
</span><span class="pas1-number">267</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">268</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">269</span><span class="pas1-space"> 
</span><span class="pas1-number">270</span><span class="pas1-space"> 
</span><span class="pas1-number">271</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> btnAClick(Sender: TObject);
</span><span class="pas1-number">272</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">273</span><span class="pas1-space">   btnabool:= </span><span class="pas1-reservedword">NOT</span><span class="pas1-space"> btnabool;
</span><span class="pas1-number">274</span><span class="pas1-space">   astate:= btnabool;
</span><span class="pas1-number">275</span><span class="pas1-space">   SetLEDStates;
</span><span class="pas1-number">276</span><span class="pas1-space">   </span><span class="pas1-reservedword">if</span><span class="pas1-space"> btnabool </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">277</span><span class="pas1-space">     btna.glyph.LoadFromResourceName(getHINSTANCE,</span><span class="pas1-string">'CL_MPPLAY'</span><span class="pas1-symbol">); 
</span><span class="pas1-number">278</span><span class="pas1-space">     btna.spacing:= </span><span class="pas1-number">22</span><span class="pas1-symbol">;
</span><span class="pas1-number">279</span><span class="pas1-space">     btna.caption:= </span><span class="pas1-string">'ON'</span><span class="pas1-symbol">; 
</span><span class="pas1-number">280</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-space"> </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">281</span><span class="pas1-space">     btna.glyph.LoadFromResourceName(getHINSTANCE,</span><span class="pas1-string">'CL_MPSTOP'</span><span class="pas1-symbol">); 
</span><span class="pas1-number">282</span><span class="pas1-space">     btna.spacing:= </span><span class="pas1-number">15</span><span class="pas1-symbol">;
</span><span class="pas1-number">283</span><span class="pas1-space">     btna.caption:= </span><span class="pas1-string">'OFF'</span><span class="pas1-symbol">; 
</span><span class="pas1-number">284</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">; 
</span><span class="pas1-number">285</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">; 
</span><span class="pas1-number">286</span><span class="pas1-space">   
</span><span class="pas1-number">287</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> btnBClick(Sender: TObject);
</span><span class="pas1-number">288</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">289</span><span class="pas1-space">   btnbbool:= </span><span class="pas1-reservedword">NOT</span><span class="pas1-space"> btnbbool;
</span><span class="pas1-number">290</span><span class="pas1-space">   bstate:= btnbbool;
</span><span class="pas1-number">291</span><span class="pas1-space">   SetLEDStates;
</span><span class="pas1-number">292</span><span class="pas1-space">   </span><span class="pas1-reservedword">if</span><span class="pas1-space"> btnbbool </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">293</span><span class="pas1-space">     btnb.glyph.LoadFromResourceName(getHINSTANCE,</span><span class="pas1-string">'CL_MPPLAY'</span><span class="pas1-symbol">); 
</span><span class="pas1-number">294</span><span class="pas1-space">     </span><span class="pas1-comment">//btnb.Layout:= blGlyphRight;
</span><span class="pas1-number">295</span><span class="pas1-space">     btnb.spacing:= </span><span class="pas1-number">22</span><span class="pas1-symbol">;
</span><span class="pas1-number">296</span><span class="pas1-space">     btnb.caption:= </span><span class="pas1-string">'ON'</span><span class="pas1-symbol">; 
</span><span class="pas1-number">297</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-space"> </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">298</span><span class="pas1-space">     btnb.glyph.LoadFromResourceName(getHINSTANCE,</span><span class="pas1-string">'CL_MPSTOP'</span><span class="pas1-symbol">); 
</span><span class="pas1-number">299</span><span class="pas1-space">     btnb.spacing:= </span><span class="pas1-number">15</span><span class="pas1-symbol">;
</span><span class="pas1-number">300</span><span class="pas1-space">     btnb.caption:= </span><span class="pas1-string">'OFF'</span><span class="pas1-symbol">; 
</span><span class="pas1-number">301</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">; 
</span><span class="pas1-number">302</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">; 
</span><span class="pas1-number">303</span><span class="pas1-space"> 
</span><span class="pas1-number">304</span><span class="pas1-space"> 
</span><span class="pas1-number">305</span><span class="pas1-space"> </span><span class="pas1-comment">//**************************Form Builder*******************************
</span><span class="pas1-number">306</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> loadForm;
</span><span class="pas1-number">307</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">308</span><span class="pas1-space">   aFrm:= TForm.Create(self);
</span><span class="pas1-number">309</span><span class="pas1-space">   mT:= TTimer.Create(self);
</span><span class="pas1-number">310</span><span class="pas1-space">   mt.onTimer:= @TFrm1_timerRedrawTimer;
</span><span class="pas1-number">311</span><span class="pas1-space">   mt.interval:= MILLISECONDS;
</span><span class="pas1-number">312</span><span class="pas1-space">   btnabool:= false; btnbbool:= false; </span><span class="pas1-comment">//init
</span><span class="pas1-number">313</span><span class="pas1-space">   </span><span class="pas1-comment">//mt.free;  in on close
</span><span class="pas1-number">314</span><span class="pas1-space">   </span><span class="pas1-reservedword">with</span><span class="pas1-space"> aFrm </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">315</span><span class="pas1-space">     caption:= </span><span class="pas1-string">'************Boolean_Animation************'</span><span class="pas1-symbol">;  
</span><span class="pas1-number">316</span><span class="pas1-space">     height:= </span><span class="pas1-number">510</span><span class="pas1-symbol">;
</span><span class="pas1-number">317</span><span class="pas1-space">     width:= </span><span class="pas1-number">950</span><span class="pas1-symbol">;
</span><span class="pas1-number">318</span><span class="pas1-space">     Position:= poScreenCenter;
</span><span class="pas1-number">319</span><span class="pas1-space">     onClose:= @TFrm1_closeForm;
</span><span class="pas1-number">320</span><span class="pas1-space">     onPaint:= @TFrm1_FormPaint;
</span><span class="pas1-number">321</span><span class="pas1-space">     Canvas.Pen.color:= clBlue;
</span><span class="pas1-number">322</span><span class="pas1-space">     Canvas.Pen.Width:= </span><span class="pas1-number">15</span><span class="pas1-symbol">;
</span><span class="pas1-number">323</span><span class="pas1-space">     Show;
</span><span class="pas1-number">324</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">325</span><span class="pas1-space">   </span><span class="pas1-reservedword">with</span><span class="pas1-space"> TBitBtn.Create(aFrm) </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">326</span><span class="pas1-space">     Parent:= aFrm;
</span><span class="pas1-number">327</span><span class="pas1-space">     setbounds(</span><span class="pas1-number">310</span><span class="pas1-symbol">, </span><span class="pas1-number">350</span><span class="pas1-symbol">,</span><span class="pas1-number">150</span><span class="pas1-symbol">, </span><span class="pas1-number">55</span><span class="pas1-symbol">);
</span><span class="pas1-number">328</span><span class="pas1-space">     caption:= </span><span class="pas1-string">'Pause'</span><span class="pas1-symbol">;
</span><span class="pas1-number">329</span><span class="pas1-space">     font.size:= </span><span class="pas1-number">12</span><span class="pas1-symbol">;
</span><span class="pas1-number">330</span><span class="pas1-space">     glyph.LoadFromResourceName(getHINSTANCE,</span><span class="pas1-string">'CL_MPPAUSE'</span><span class="pas1-symbol">); 
</span><span class="pas1-number">331</span><span class="pas1-space">     mXButton(</span><span class="pas1-number">05</span><span class="pas1-symbol">,</span><span class="pas1-number">05</span><span class="pas1-symbol">,width, height,</span><span class="pas1-number">12</span><span class="pas1-symbol">,</span><span class="pas1-number">12</span><span class="pas1-symbol">,handle);
</span><span class="pas1-number">332</span><span class="pas1-space">     </span><span class="pas1-comment">//event handler
</span><span class="pas1-number">333</span><span class="pas1-space">     onclick:= @TFrm1_PauseClick;
</span><span class="pas1-number">334</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">335</span><span class="pas1-space">   </span><span class="pas1-reservedword">with</span><span class="pas1-space"> TBitBtn.Create(aFrm) </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">336</span><span class="pas1-space">     Parent:= aFrm;
</span><span class="pas1-number">337</span><span class="pas1-space">     setbounds(</span><span class="pas1-number">480</span><span class="pas1-symbol">, </span><span class="pas1-number">350</span><span class="pas1-symbol">,</span><span class="pas1-number">150</span><span class="pas1-symbol">, </span><span class="pas1-number">55</span><span class="pas1-symbol">);
</span><span class="pas1-number">338</span><span class="pas1-space">     caption:= </span><span class="pas1-string">'Close'</span><span class="pas1-symbol">;
</span><span class="pas1-number">339</span><span class="pas1-space">     font.size:= </span><span class="pas1-number">12</span><span class="pas1-symbol">;
</span><span class="pas1-number">340</span><span class="pas1-space">     glyph.LoadFromResourceName(getHINSTANCE,</span><span class="pas1-string">'CL_MPSTOP'</span><span class="pas1-symbol">); 
</span><span class="pas1-number">341</span><span class="pas1-space">     mXButton(</span><span class="pas1-number">05</span><span class="pas1-symbol">,</span><span class="pas1-number">05</span><span class="pas1-symbol">,width, height,</span><span class="pas1-number">12</span><span class="pas1-symbol">,</span><span class="pas1-number">12</span><span class="pas1-symbol">,handle);
</span><span class="pas1-number">342</span><span class="pas1-space">     onclick:= @TFrm1_CloseClick;
</span><span class="pas1-number">343</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">344</span><span class="pas1-space">   btna:= TBitBtn.Create(aFrm);
</span><span class="pas1-number">345</span><span class="pas1-space">   </span><span class="pas1-reservedword">with</span><span class="pas1-space"> btna </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">346</span><span class="pas1-space">     Parent:= aFrm;
</span><span class="pas1-number">347</span><span class="pas1-space">     setbounds(</span><span class="pas1-number">310</span><span class="pas1-symbol">, </span><span class="pas1-number">290</span><span class="pas1-symbol">,</span><span class="pas1-number">150</span><span class="pas1-symbol">, </span><span class="pas1-number">55</span><span class="pas1-symbol">);
</span><span class="pas1-number">348</span><span class="pas1-space">     caption:= </span><span class="pas1-string">'ON'</span><span class="pas1-symbol">;
</span><span class="pas1-number">349</span><span class="pas1-space">     font.size:= </span><span class="pas1-number">12</span><span class="pas1-symbol">;
</span><span class="pas1-number">350</span><span class="pas1-space">     glyph.LoadFromResourceName(getHINSTANCE,</span><span class="pas1-string">'CL_MPPLAY'</span><span class="pas1-symbol">); 
</span><span class="pas1-number">351</span><span class="pas1-space">     mXButton(</span><span class="pas1-number">05</span><span class="pas1-symbol">,</span><span class="pas1-number">05</span><span class="pas1-symbol">,width, height,</span><span class="pas1-number">12</span><span class="pas1-symbol">,</span><span class="pas1-number">12</span><span class="pas1-symbol">,handle);
</span><span class="pas1-number">352</span><span class="pas1-space">     onclick:= @btnaClick;
</span><span class="pas1-number">353</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">354</span><span class="pas1-space">   btnb:= TBitBtn.Create(aFrm);
</span><span class="pas1-number">355</span><span class="pas1-space">   </span><span class="pas1-reservedword">with</span><span class="pas1-space"> btnb </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">356</span><span class="pas1-space">     Parent:= aFrm;
</span><span class="pas1-number">357</span><span class="pas1-space">     setbounds(</span><span class="pas1-number">480</span><span class="pas1-symbol">, </span><span class="pas1-number">290</span><span class="pas1-symbol">,</span><span class="pas1-number">150</span><span class="pas1-symbol">, </span><span class="pas1-number">55</span><span class="pas1-symbol">);
</span><span class="pas1-number">358</span><span class="pas1-space">     caption:= </span><span class="pas1-string">'OFF'</span><span class="pas1-symbol">;
</span><span class="pas1-number">359</span><span class="pas1-space">     font.size:= </span><span class="pas1-number">12</span><span class="pas1-symbol">;
</span><span class="pas1-number">360</span><span class="pas1-space">     glyph.LoadFromResourceName(getHINSTANCE,</span><span class="pas1-string">'CL_MPSTOP'</span><span class="pas1-symbol">); 
</span><span class="pas1-number">361</span><span class="pas1-space">     mXButton(</span><span class="pas1-number">05</span><span class="pas1-symbol">,</span><span class="pas1-number">05</span><span class="pas1-symbol">,width, height,</span><span class="pas1-number">12</span><span class="pas1-symbol">,</span><span class="pas1-number">12</span><span class="pas1-symbol">,handle);
</span><span class="pas1-number">362</span><span class="pas1-space">     onclick:= @btnbClick;
</span><span class="pas1-number">363</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">364</span><span class="pas1-space">    btnc:= TBitBtn.Create(aFrm);
</span><span class="pas1-number">365</span><span class="pas1-space">   </span><span class="pas1-reservedword">with</span><span class="pas1-space"> btnc </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">366</span><span class="pas1-space">     Parent:= aFrm;
</span><span class="pas1-number">367</span><span class="pas1-space">     setbounds(</span><span class="pas1-number">445</span><span class="pas1-symbol">, </span><span class="pas1-number">150</span><span class="pas1-symbol">,</span><span class="pas1-number">60</span><span class="pas1-symbol">, </span><span class="pas1-number">60</span><span class="pas1-symbol">);
</span><span class="pas1-number">368</span><span class="pas1-space">     caption:= </span><span class="pas1-string">''</span><span class="pas1-symbol">;  
</span><span class="pas1-number">369</span><span class="pas1-space">     glyph.LoadFromResourceName(getHINSTANCE,</span><span class="pas1-string">'LEDREDON'</span><span class="pas1-symbol">); 
</span><span class="pas1-number">370</span><span class="pas1-space">     mXButton(</span><span class="pas1-number">0</span><span class="pas1-symbol">,</span><span class="pas1-number">0</span><span class="pas1-symbol">,width, height,</span><span class="pas1-number">12</span><span class="pas1-symbol">,</span><span class="pas1-number">12</span><span class="pas1-symbol">,handle);
</span><span class="pas1-number">371</span><span class="pas1-space">     </span><span class="pas1-comment">//onclick:= @TFrm1_CloseClick;
</span><span class="pas1-number">372</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">373</span><span class="pas1-space">   tB:= TTrackBar.create(aFrm);
</span><span class="pas1-number">374</span><span class="pas1-space">    </span><span class="pas1-reservedword">with</span><span class="pas1-space"> tB </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">375</span><span class="pas1-space">       parent:= aFrm;
</span><span class="pas1-number">376</span><span class="pas1-space">       setBounds(</span><span class="pas1-number">40</span><span class="pas1-symbol">,</span><span class="pas1-number">360</span><span class="pas1-symbol">,</span><span class="pas1-number">230</span><span class="pas1-symbol">,</span><span class="pas1-number">40</span><span class="pas1-symbol">);
</span><span class="pas1-number">377</span><span class="pas1-space">       Min:= </span><span class="pas1-number">10</span><span class="pas1-symbol">; Max:= </span><span class="pas1-number">100
378</span><span class="pas1-space">       Frequency:= </span><span class="pas1-number">10
379</span><span class="pas1-space">       Position:= </span><span class="pas1-number">1000</span><span class="pas1-space"> </span><span class="pas1-reservedword">div</span><span class="pas1-space"> MILLISECONDS;
</span><span class="pas1-number">380</span><span class="pas1-space">       linesize:= </span><span class="pas1-number">4</span><span class="pas1-symbol">;
</span><span class="pas1-number">381</span><span class="pas1-space">       ThumbLength:= </span><span class="pas1-number">30</span><span class="pas1-symbol">;
</span><span class="pas1-number">382</span><span class="pas1-space">       SetFocus;
</span><span class="pas1-number">383</span><span class="pas1-space">       OnChange:= @TFrm1_trackSpeedChange;
</span><span class="pas1-number">384</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">385</span><span class="pas1-space">   statbar:= TStatusBar.create(aFrm);
</span><span class="pas1-number">386</span><span class="pas1-space">   </span><span class="pas1-reservedword">with</span><span class="pas1-space"> statbar </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">387</span><span class="pas1-space">     parent:= aFrm;
</span><span class="pas1-number">388</span><span class="pas1-space">     </span><span class="pas1-comment">//simplepanel:= true;
</span><span class="pas1-number">389</span><span class="pas1-space">     showhint:= true;
</span><span class="pas1-number">390</span><span class="pas1-space">     hint:= </span><span class="pas1-string">'LED Logger States'</span><span class="pas1-symbol">;
</span><span class="pas1-number">391</span><span class="pas1-space">      Panels.add;
</span><span class="pas1-number">392</span><span class="pas1-space">      panels.items[</span><span class="pas1-number">0</span><span class="pas1-symbol">].width:= </span><span class="pas1-number">200</span><span class="pas1-symbol">;
</span><span class="pas1-number">393</span><span class="pas1-space">      panels.items[</span><span class="pas1-number">0</span><span class="pas1-symbol">].text:= </span><span class="pas1-string">'LED Data Log'</span><span class="pas1-symbol">;
</span><span class="pas1-number">394</span><span class="pas1-space">      Panels.add;
</span><span class="pas1-number">395</span><span class="pas1-space">      panels.items[</span><span class="pas1-number">1</span><span class="pas1-symbol">].width:= </span><span class="pas1-number">150</span><span class="pas1-symbol">;
</span><span class="pas1-number">396</span><span class="pas1-space">      panels.items[</span><span class="pas1-number">1</span><span class="pas1-symbol">].text:= </span><span class="pas1-string">'Logic Logger State'</span><span class="pas1-symbol">;
</span><span class="pas1-number">397</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">398</span><span class="pas1-space">   lbox:= TListbox.Create(aFrm)
</span><span class="pas1-number">399</span><span class="pas1-space">    </span><span class="pas1-reservedword">with</span><span class="pas1-space"> lbox </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">400</span><span class="pas1-space">     Parent:= afrm;
</span><span class="pas1-number">401</span><span class="pas1-space">     SetBounds(</span><span class="pas1-number">645</span><span class="pas1-symbol">,</span><span class="pas1-number">20</span><span class="pas1-symbol">,</span><span class="pas1-number">285</span><span class="pas1-symbol">,</span><span class="pas1-number">430</span><span class="pas1-symbol">)
</span><span class="pas1-number">402</span><span class="pas1-space">     font.size:= </span><span class="pas1-number">10</span><span class="pas1-symbol">;
</span><span class="pas1-number">403</span><span class="pas1-space">     </span><span class="pas1-comment">//color:= clsilver;
</span><span class="pas1-number">404</span><span class="pas1-space">     font.name:= </span><span class="pas1-string">'MS Sans Serif'</span><span class="pas1-space">  </span><span class="pas1-comment">//or Courier
</span><span class="pas1-number">405</span><span class="pas1-space">     font.color:= clblack;
</span><span class="pas1-number">406</span><span class="pas1-space">     </span><span class="pas1-comment">//Style:= csOwnerDrawFixed;
</span><span class="pas1-number">407</span><span class="pas1-space">     onClick:= @boxClick;
</span><span class="pas1-number">408</span><span class="pas1-space">     </span><span class="pas1-comment">//onDrawItem:= @Listbox1DrawItem;
</span><span class="pas1-number">409</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">410</span><span class="pas1-space">   addAllbooleans;
</span><span class="pas1-number">411</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;  
</span><span class="pas1-number">412</span><span class="pas1-space"> 
</span><span class="pas1-number">413</span><span class="pas1-space"> 
</span><span class="pas1-number">414</span><span class="pas1-space"> </span><span class="pas1-comment">//**************************Event Handlers*******************************
</span><span class="pas1-number">415</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TFrm1_trackSpeedChange(Sender: TObject);
</span><span class="pas1-number">416</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">417</span><span class="pas1-space">   mt.Interval:= </span><span class="pas1-number">1000</span><span class="pas1-space"> </span><span class="pas1-reservedword">div</span><span class="pas1-space"> tB.Position;
</span><span class="pas1-number">418</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">419</span><span class="pas1-space"> 
</span><span class="pas1-number">420</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TFrm1_timerRedrawTimer(Sender: TObject);
</span><span class="pas1-number">421</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">422</span><span class="pas1-space">   CurStep:= CurStep + </span><span class="pas1-float">0.1</span><span class="pas1-symbol">;
</span><span class="pas1-number">423</span><span class="pas1-space">   </span><span class="pas1-reservedword">if</span><span class="pas1-space"> CurStep &gt; </span><span class="pas1-number">360</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> CurStep:= </span><span class="pas1-number">0</span><span class="pas1-symbol">;
</span><span class="pas1-number">424</span><span class="pas1-space">   afrm.Invalidate;  </span><span class="pas1-comment">//redraw
</span><span class="pas1-number">425</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">426</span><span class="pas1-space"> 
</span><span class="pas1-number">427</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TFrm1_closeForm(Sender: TObject; </span><span class="pas1-reservedword">var</span><span class="pas1-space"> Action: TCloseAction);
</span><span class="pas1-number">428</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">429</span><span class="pas1-space">   </span><span class="pas1-reservedword">if</span><span class="pas1-space"> mt &lt;&gt; </span><span class="pas1-reservedword">NIL</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">430</span><span class="pas1-space">     mT.enabled:= false;
</span><span class="pas1-number">431</span><span class="pas1-space">     mT.Free;
</span><span class="pas1-number">432</span><span class="pas1-space">     mT:= </span><span class="pas1-reservedword">NIL</span><span class="pas1-symbol">;
</span><span class="pas1-number">433</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">434</span><span class="pas1-space">   </span><span class="pas1-comment">///afrm.Free;  
</span><span class="pas1-number">435</span><span class="pas1-space">   action:= caFree;
</span><span class="pas1-number">436</span><span class="pas1-space">   afrm:= </span><span class="pas1-reservedword">NIL</span><span class="pas1-symbol">;
</span><span class="pas1-number">437</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">438</span><span class="pas1-space"> 
</span><span class="pas1-number">439</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TFrm1_CloseClick(Sender: TObject);
</span><span class="pas1-number">440</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">441</span><span class="pas1-space">   afrm.Close;
</span><span class="pas1-number">442</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">443</span><span class="pas1-space"> 
</span><span class="pas1-number">444</span><span class="pas1-space"> </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TFrm1_PauseClick(Sender: TObject);
</span><span class="pas1-number">445</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-number">446</span><span class="pas1-space">   </span><span class="pas1-reservedword">if</span><span class="pas1-space"> mT &lt;&gt; </span><span class="pas1-reservedword">NIL</span><span class="pas1-space"> </span><span class="pas1-reservedword">then
</span><span class="pas1-number">447</span><span class="pas1-space">     mt.enabled:= </span><span class="pas1-reservedword">not</span><span class="pas1-space"> mt.enabled;
</span><span class="pas1-number">448</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-number">449</span><span class="pas1-space"> 
</span><span class="pas1-number">450</span><span class="pas1-space"> </span><span class="pas1-reservedword">var</span><span class="pas1-space">    </span><span class="pas1-comment">//test vars
</span><span class="pas1-number">451</span><span class="pas1-space">    str3: </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-number">452</span><span class="pas1-space">    sstr: </span><span class="pas1-reservedword">shortstring</span><span class="pas1-symbol">;
</span><span class="pas1-number">453</span><span class="pas1-space">   </span><span class="pas1-comment">//main form list call  
</span><span class="pas1-number">454</span><span class="pas1-space">   </span><span class="pas1-reservedword">Begin
</span><span class="pas1-number">455</span><span class="pas1-space">     </span><span class="pas1-comment">//calls some test functions
</span><span class="pas1-number">456</span><span class="pas1-space">     writeln(floattostr(</span><span class="pas1-reservedword">maxCalc</span><span class="pas1-symbol">(</span><span class="pas1-string">'e^ln(2)'</span><span class="pas1-symbol">)));
</span><span class="pas1-number">457</span><span class="pas1-space">     printF(</span><span class="pas1-string">'this is %.18f '</span><span class="pas1-symbol">,[</span><span class="pas1-reservedword">maxCalc</span><span class="pas1-symbol">(</span><span class="pas1-string">'ln(2)^e'</span><span class="pas1-symbol">)]);
</span><span class="pas1-number">458</span><span class="pas1-space">     printF(</span><span class="pas1-string">'this is %.18f '</span><span class="pas1-symbol">,[</span><span class="pas1-reservedword">maxCalc</span><span class="pas1-symbol">(</span><span class="pas1-string">'sqr(cos(ln(2)^e))'</span><span class="pas1-symbol">)]);
</span><span class="pas1-number">459</span><span class="pas1-space">     printF(</span><span class="pas1-string">'this is %.4f '</span><span class="pas1-symbol">,[</span><span class="pas1-reservedword">maxCalc</span><span class="pas1-symbol">(</span><span class="pas1-string">'sqrt(e^(ln(2)))'</span><span class="pas1-symbol">)]);
</span><span class="pas1-number">460</span><span class="pas1-space">     writeln(getVersionString(exepath+</span><span class="pas1-string">'maxbox3.exe'</span><span class="pas1-symbol">));
</span><span class="pas1-number">461</span><span class="pas1-space">     str3:= loadFileAsString(exepath+</span><span class="pas1-string">'maxbox_functions_all.pdf'</span><span class="pas1-symbol">);
</span><span class="pas1-number">462</span><span class="pas1-space">     writeln(</span><span class="pas1-string">'file compare j: '</span><span class="pas1-symbol">+inttoStr(CompText(str3, str3)));
</span><span class="pas1-number">463</span><span class="pas1-space">     writeln(intToStr(length(str3)));
</span><span class="pas1-number">464</span><span class="pas1-space">  </span><span class="pas1-comment">//--------------------------Main Topic--------------------------
</span><span class="pas1-number">465</span><span class="pas1-space">     loadForm;
</span><span class="pas1-number">466</span><span class="pas1-space"> </span><span class="pas1-reservedword">End</span><span class="pas1-symbol">.
</span><span class="pas1-number">467</span><span class="pas1-space">   
</span><span class="pas1-number">468</span><span class="pas1-space"> 
</span><span class="pas1-number">469</span><span class="pas1-space"> 
</span><span class="pas1-number">470</span><span class="pas1-space">  </span><span class="pas1-comment">//ShellExecute in W64
</span><span class="pas1-number">471</span><span class="pas1-space">     </span><span class="pas1-comment">//ExecuteCommand('cmd','/k FC /L /N C:\maxbook\maxbox3\maxbox391.exe C:\maxbook\maxbox3\maxbox3.exe')
</span><span class="pas1-number">472</span><span class="pas1-space">  </span><span class="pas1-comment">//  ExecuteCommand('cmd','/k FC /L /N C:\maxbook\maxbox3\maxboxdef1.ini C:\maxbook\maxbox3\maxboxdef2.ini')
</span><span class="pas1-number">473</span><span class="pas1-space">    
</span><span class="pas1-number">474</span><span class="pas1-space"> 
</span><span class="pas1-number">475</span><span class="pas1-space"> getRulesbyContract  
</span></code></pre><!--EndFragment--></body>
</html>