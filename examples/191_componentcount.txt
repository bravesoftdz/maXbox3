{***************************************************************
 *
 * Project  : System Information Series
 * App Name: 191_componentcount.txt, loc's = 99 
 * Purpose  : Demonstrates the functions of TApplication and components
 * Date  : 16/02/2011  -  14:56
 * History  : add classname to TComponent
 *          : show index# in case of no-name
 ****************************************************************}
Program ComponentCount;
{BOOL WINAPI MessageBeep(
  __in  UINT uType
);}

function  MessageBeep(para: integer): byte;
  external 'MessageBeep@user32.dll stdcall';  

var
  count: integer;

procedure signal_Sounds;
var sound: integer;
begin
for sound:= 1 to 100 do
  if sound mod 10 = 0 then begin
    MessageBeep(sound)
    sleep(1500)
  end  
end;


procedure Apploop_Tester;
var i,j: integer;
    c: TComponent;
begin
  for i:= 0 to Application.ComponentCount - 1 do begin
    // all components of a Form
    for j:= 0 to Application.Components[i].ComponentCount - 1 do begin
      c:= Application.Components[i].Components[j];
      if c is TComponent then
        writeln(inttostr64(j)+ ' '+c.name +' '+ c.classname)
    end;
  end; 
end;  


function ComponentFullName(comp: TComponent): string;
var
  mycomp: TComponent;
begin
  result:= comp.Name;
   //if no component name then at least an index
  if result = '' then
    result:= '#'+IntToStr64(comp.ComponentIndex);
  mycomp:= comp;
  //to the top of the owner
  while mycomp.Owner <> NIL do begin
    mycomp:= mycomp.Owner;
    if Length(mycomp.Name) > 0 then
      result:= mycomp.Name+'.'+result;
  end;
end;

function ComponentFullNameAndClass(comp: TComponent): string;
begin
  Result:= ComponentFullName(comp)+': '+comp.Classname;
end;

procedure DumpComponents(comp: TComponent; list: TStrings);
var
  i: Integer;
begin
  if Assigned(comp) then begin
    list.Add('id: '+ inttostr64(count)+ ' '+ComponentFullNameAndClass(comp));
    inc(count)
    for i:= 0 to comp.ComponentCount-1 do begin
      //recursion!
      DumpComponents(comp.Components[i], list);
    end;
  end;
end;    


procedure FindComponents(comp: TComponent; list: TStrings);
var
  i: Integer;
begin
  if Assigned(comp) then begin
    list.Add('id: '+ inttostr64(count)+ ' '+ComponentFullNameAndClass(comp));
    inc(count)
    for i:= 0 to comp.ComponentCount-1 do begin
      //recursion!
         comp.FindComponent(list[i]);
    end;
  end;
end;    


var
  complist: TStringList;

begin
  count:= 0;
  Apploop_tester;
  complist:= TStringList.create;
  dumpComponents(application, complist) 
  for count:= 0 to complist.count -1 do
     writeln(complist.strings[count]);
  complist.Free;
  //writeln('machine name is: '+getHostName)
  writeln('user name is: '+getUserName)
  //writeln('proc id is: '+inttostr(currentprocessid))
  //signal_Sounds;
  //memo2.font.name:= 'Terminal';
end.   

There is no place like 127.0.0.1 

//----------------------------------------------
 DiskSize returns -1 if the drive number is invalid. Drive parameter can be set to: 0 = Current drive, 1 = A, 2 = B, 3 = C and so on. 


