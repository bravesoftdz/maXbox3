program LottoGeneratorTest;
// first interpreter of runmax _15, locs=58
// lotto generator and recursion test, TASK: set a service

const lotnumb = 6;

type 
  TLottolist = array[1..lotnumb] of byte;
  T_status =(success, failure, third);

var i, irange: byte;
    larray: TLottolist;
    status: T_status; 

function initarray: boolean;
begin
 for i:= 1 to lotnumb do 
   larray[i]:= 0;
 result:= true
end;

procedure putnumbers(vrange: byte);
var ti, z, myrand: byte;
     dup: boolean;
begin
  ti:= 1;
  randomize
  //precondition set by validation
  if vrange < lotnumb then vrange:= 6; 
  repeat
    myrand:= random(vrange)+1;     
    dup:= false;
    for z:= 1 to lotnumb do 
      if (larray[z] = myrand) then dup:= true;
    if (not dup) then begin
      larray[ti]:= myrand;
      ti:= ti + 1;
    end;
  //postcondition
  until ti = lotnumb + 1
end;  

procedure viewnumbers;
begin
 for i:= 1 to lotnumb do
   writeln(inttostr(i) +': '+inttostr(larray[i]))
end;

// main script
begin
  //irange:= strtoint(readln('how great is the range ?'));
  irange:= 45;  
  if initarray then begin
    putnumbers(irange)
    viewnumbers;
  end;
  writeln(floattoStr(fact(10)));
end.
