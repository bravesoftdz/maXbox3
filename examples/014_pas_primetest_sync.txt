program Primtester;

// simple primtester between range _14_2
// has a function and procedure to save, no globals; loc's=45

function checkPrim(acti: integer): boolean;
var
  j: Integer;
  isprim: boolean;
begin
  isprim:= true;
  for j:= 2 to round(sqrt(acti)) do 
   if ((acti mod j) = 0) then begin
     isprim:= false;
     break
   end;
 result:= isprim;
end;

procedure testPrimNumbers(vrange: integer);
var acti: integer;
begin
  with TStringlist.create do begin
    try
      for acti:= 2 to vrange do begin
        inc(acti)
        //writeln('debug count'+inttostr(acti))
        if checkprim(acti) then begin
          add(inttostr(acti))
          writeln(inttostr(acti))
        end
      end;
    finally
      savetofile('primlist5001.txt') 
      Free;
    end //try
  end //with    
end;

//main script
begin
  //irange:= strtoint(readln('how great is the range ?'));
    testPrimNumbers(5001);
  //orthogonal and idempotent
end.
