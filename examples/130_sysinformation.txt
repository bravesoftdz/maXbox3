{***************************************************************
 * Project  : SystemInformation
 * App  Name: 130_sysinformation
 * Purpose  : Show some admin functions
 * Date  : 21/11/2010  -  14:38:56, locs=87
 * History  : integrate with indy net
 *
 ****************************************************************}
//uses  IdURI;

//{$IFDEF MSWINDOWS}{$R *.dfm}{$ELSE}{$R *.xfm}{$ENDIF}

procedure DoItParseURI;
var URI: TIdURI;
begin
  URI:= TIdURI.Create('http://127.0.0.1:80/index.htm');
  try
    writeln(URI.Protocol);
    writeln(URI.Host);
    writeln(URI.Port);
    writeln(URI.Path);
    writeln(URI.Document);
  finally
    URI.Free;
  end;
end;

var
  mytimestamp: TDateTime;
  ostype: TIdWin32Type;
  before, after, mytext : string;
  Attributes: Word;
  ReadOnly, Archive, System, Hidden: boolean;
  fileHandle1: integer;
  //myth: TThread
  
begin
  DoItParseURI
  writeln(domainname('localhost'));
  writeln('hostname is: '+getHostname)
  writeln('username is: '+getUsername)
  mytimestamp:= GetFileCreationTime(exepath+'income.dll')
  writeln(dateTimetoStr(mytimestamp)+' for income dll')
  writeln('Size of income.dll :'+IntToStr(fileSizeByName(exePath+'income.dll')))
  ostype:= Win32Type;
  writeln(inttostr(ord(osType)));
  writeln('ProcessID :'+intToStr(CurrentProcessID))
  mytimestamp:= TimeZoneBias
  writeln('time zone ' +timetoStr(mytimestamp))
  writeln(datetimetostr((now2)))
  //writeln(TIdWin32Type(ostype))
  before := 'This is a way to live A big life';
  after  := StringReplace(before, ' a ', ' THE ',[rfReplaceAll, rfIgnoreCase]);
  //ShowMessage('Before = '+before);
  //ShowMessage('After  = '+after);
  writeln(inttostr(strToIntDef('this is',5)))
  
//description
//Fills a string list with substrings parsed from a delimited list.
  //example 1 - requires TMemo named "Memo1"
    ExtractStrings([';',','], [' '], 
               'about: delphi; pascal, maxbox programming ', 
               memo2.Lines);
 //would result in 3 strings added to memo:
 //about: delphi
 //pascal
 //programming

//example 2
  ExtractStrings([], [' '], (DateToStr(Date)), memo2.Lines);
//would result in 3 strings: day month and year of the currnet date
//for example '06', '25' ,'2009'
  attributes:= FileGetAttr(exePath+'income.dll');
  ReadOnly:= (Attributes and faReadOnly) = faReadOnly;
  Archive:= (Attributes and faArchive) = faArchive;
  System:= (Attributes and faSysFile) = faSysFile;
  Hidden:= (Attributes and faHidden) = faHidden;
  if Readonly then showmessage('maxbox is readonly');
   FileHandle1:= FileCreate('sysinformation_fromMemo.txt');
   mytext:= memo2.text;
   FileWrite(FileHandle1, mytext, length(mytext));
   FileClose(filehandle1);
   ShowMessage('Looking for more Sysfunctions ?');
   SearchAndOpenDoc(ExePath+'maxbox_functions_all.pdf');
   //deletefile('SaveDialog1FileName.txt')
   //createDir('testDir')
end.
