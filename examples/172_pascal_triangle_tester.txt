program Pascal_Triangle;
//**************************************************

//http://mathforum.org/dr.math/faq/faq.pascal.triangle.html 
//the logic I used is nCr => n!/(r!*(n-r)!)

{for example the outer loop counter is 'n' and the inner loop counter is 'r' , 
then the corresponding element of the pascal's triangle will be nCr.}

var
  num,i,j,k, space1: integer;
  difffact,diff,n,r,x,y,comb,nfact,rfact: integer;
  //space, k: byte;
  
    TWeek : array[4..7] of Integer;
  
begin //main
  maxForm1.Console1Click(self);
  difffact:= 1;
  comb:= 0;
  nfact:= 1;
  rfact:= 1;
  num:= 10;
  
//printf('please enter the number of lines'\n");
//scanf("%d",&num);

  k:= num-1;
  space1:= num-1;
  //for(i=0;i<num;i++)
  for i:= 0 to num -1 do begin
   //k=space--;
    dec(space1)
    k:= space1;
   //for(;k>0;k--)
    for k:= k downto 0 do
      write('  ');
    //for(j=0;j<=i;j++)
    for j:= 0 to i do begin
      comb:= 0;
      nfact:= 1;
      rfact:= 1;
      difffact:= 1;
      //for(n=i;n>=1;n--)
      for n:= i downto 1 do
        nfact:= nfact*n;
      //for(r=j;r>=1;r--)
      for r:=j downto 1 do
        rfact:= rfact*r;
      diff:= i-j;
      //for(;diff>=1;diff--)
      for diff:= diff downto 1 do
        difffact:= difffact*diff;
      comb:= (nfact div (rfact*difffact));      
      write(format('  %d',[comb]));
    end;
    writeln('') 
  //printf("\n");
  end;
    writeln(datetimetostr(now))
    writeln(inttostr(low(tweek)))

end.

//----------------------------------------------------------------------
Read more: http://wiki.answers.com/Q/What_is_the_Code_for_Pascal's_Triangle_in_C_Language#ixzz1S7CPOy4Q


  st_String:= 'File Extented App';
  Writeln(st_String)
  time1:= time;
  //operations...
  time2:= time;
  Diff:= time2 - time1; 
  writeln(FormatDateTime('"--- File Module run time is:" nn:ss:zzz',Diff));
  Writeln(st_String)
  maxForm1.SaveOutput1Click(self);
  writeln(datetimetostr(now))
end.

Pascal's Triangle is an arithmetical triangle you can use for some neat things in mathematics. Here's how you construct it:

                             1
                           1   1
                         1   2   1
                       1   3   3   1
                     1   4   6   4   1
                   1   5  10   10  5   1
                 1   6  15  20   15  6   1
               1   7  21  35   35  21  7   1
                             .
                             .
                             .

You start out with the top two rows: 1, and 1 1. Then to construct each entry in the next row, you look at the two entries above it (i.e. the one above it and to the right, and the one above it and to the left). At the beginning and the end of each row, when there's only one number above, put a 1. You might even think of this rule (for placing the 1's) as included in the first rule: for instance, to get the first 1 in any line, you add up the number above and to the left (since there is no number there, pretend it's zero) and the number above and to the right (1), and get a sum of 1.


just maXbox
         ____    ___   _      ____    _   _   _
        |  _ \  |  _| | |    |  _ \  | | | | | |
        | | . | | |_  | |    | |_| | | |_| | | |
        | | | | |  _| | |    |  __/  |  _  | | |          
        | |_. | | |_  | |__  | |     | | | | | |                      
        |____/  |___| |____| |_|     |_| |_| |_| 
        
        
Where do we use Pascal's Triangle?

Pascal's Triangle is more than just a big triangle of numbers. There are two major areas where Pascal's Triangle is used, in Algebra and in Probability / Combinatorics.

  
  
the logic i have used is nCr => n!/(r!*(n-r)!)

for example the outer loop counter is 'n' and the inner loop counter is 'r' , then the corresponding element of the pascal's triangle will be nCr.

keep in mind that both the loops will have to start from zero.

#include<stdio.h>

main()
{
int num,i,j,k,space;
int difffact=1,diff,n,r,x,y,comb=0,nfact=1,rfact=1;
printf("please enter the number of lines\n");
scanf("%d",&num);

k=num-1;
space=num-1;
for(i=0;i<num;i++)
{
k=space--;
for(;k>0;k--)
{
printf(" ");
}
for(j=0;j<=i;j++)
{
comb=0;
nfact=1;
rfact=1;
difffact=1;

for(n=i;n>=1;n--)
nfact=nfact*n;

for(r=j;r>=1;r--)
rfact=rfact*r;

diff=i-j;
for(;diff>=1;diff--)
difffact=difffact*diff;

comb=(nfact/(rfact*difffact));
printf("%d ",comb);
}
printf("\n");
}
}

                                       

