program Primtester_First;
// tutorial primtester between range _14, locs=44
// has a function and procedure, //http://www.sciencesource.info/

var count: cardinal;


function checkPrim(acti: integer): boolean;
var
  j: Integer;
  isprim: boolean;
begin
  isprim:= true;
  for j:= 2 to round(sqrt(acti)) do 
   if ((acti mod j) = 0) then begin
     isprim:= false;
     break
   end;
 result:= isprim;
end;


procedure testPrimNumbers(vrange: integer);
var acti: integer;
begin
  count:= 0;
  writeln('1: 2')
  inc(count)
  for acti:= 2 to vrange do begin
    inc(acti)
    if checkprim(acti) then begin
      inc(count)
      writeln(inttostr(count) +': '+inttostr(acti))
    end
  end
end;

//main script
begin
  //irange:= strtoint(readln('how great is the range ?'));
    testPrimNumbers(5000);
    maxform1.TerminalStyle1Click(self)
  //orthogonal and idempotent
End.


Verteilung der Primzahlen top
Es sei pi(n) die Anzahl der Primzahlen kleiner als n, n ist eine natürliche Zahl.
Es gilt:
pi(n)

--------------------------------------------------------------------	
n        1000     100000     1000000    10 000 000     100 000 000
pi(n)    168      9592       78498      664 579        5 761 455
pi(n)/n  16,8%    9,6%       7,8%       6,6%           5,8%
--------------------------------------------------------------------	

	

