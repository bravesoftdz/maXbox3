//maxBox as an Object Based Scripting Tool!
//designed for teaching and analyzing methods _35
//runs under Win/Linux (CLX) to build Delphi in a Box, #locs=98
//#sign:max: APSN21: 13.09.2013 19:16:18 
//*************************************************************************

{function IntToHex(Value: Integer; Digits: Integer): string;
//  FmtStr(Result, '%.*x', [Digits, Value]);
asm
        CMP     EDX, 32        // Digits < buffer length?
        JBE     @A1
        XOR     EDX, EDX
@A1:    PUSH    ESI
        MOV     ESI, ESP
        SUB     ESP, 32
        PUSH    ECX            // result ptr
        MOV     ECX, 16        // base 16 EDX = Digits = field width
        CALL    CvtInt
        MOV     EDX, ESI
        POP     EAX            // result ptr
        CALL    System.@LStrFromPCharLen
        ADD     ESP, 32
        POP     ESI
end;}


Program CRC_16_Checksum;


Const HVALUE = '010310260002';    //Modbus Master Request

var MyCRC: string;

function HexToInt2(HexNum: string): LongInt;
begin
  Result:=StrToInt('$' + HexNum);
end;

function IntToBin(Int: Integer): String;
var
  i: integer;
begin
  Result:= '';
  for i:= 7 downto 0 do
  Result:= Result + IntToStr((Int shr i) and 1);
end;

function BinToInt(Binary: String): Integer;
var
  i: integer;
begin
  Result:= 0;
  for i:= Length(Binary) downto 1 do begin
    result:= StrToInt(Binary[i]) * 1 shl (Length(Binary) - i)
    Inc(result);
  end  
end;

//checksumme crc16
function CRC16(statement: string): string;
var crc: word;
  n,m,i, manz: integer;
  buff: array[1..256] of byte;
begin
  manz:= round(length(statement)/2);
  i:= 1
  m:= 1;
  //convert string in byte integer values
  for n:= 1 to manz do begin
    buff[m]:= hexToInt(copy(statement,i,2));
    m:= m+1
    i:= i+2
  end;
   // compute CRC16 if GeneratorPolynom 
   crc:= $FFFF;
   for m:= 1 to manz do begin
     crc:= crc Xor buff[m]
     for n:= 1 to 8 do begin
      if ((crc And $0001) = 1) then
        crc:= ((crc Shr 1) Xor $A001)
      else 
        crc:= crc Shr 1
      //showmessage('testcase: '+ inttobin(crc)+' round: '+intToStr(m));
     end
   end; 
   // convert crc to turning string 
   result:= Copy(intToHex(crc,4),3,2)+Copy(intToHex(crc,4),1,2);
end;     


Begin   //main
  //mycrc:= CRC16('E93650074D4FEF0F0733CAF57E62C8E0')
  MyCRC:= CRC16(HVALUE) //from Schleicher Script Prozesstechnik
  //myCRC:= CRC16('E93650')
  writeln('CRC from Modbus Control: '+MyCRC)
  //writeln(inttostr(bintoint('1001')))
  //... add your code here
End.


just inside maXbox
         ____    ___   _      ____    _   _   _
        |  _ \  |  _| | |    |  _ \  | | | | | |
        | | . | | |_  | |    | |_| | | |_| | | |
        | | | | |  _| | |    |  __/  |  _  | | |          
        | |_. | | |_  | |__  | |     | | | | | |                      
        |____/  |___| |____| |_|     |_| |_| |_|                                   

