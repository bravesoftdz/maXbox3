
{<!-- end banner code -->
<pre> __________________________________________________________________________
|                                                                               |
| A PASCAL Tutorial For Newbie Programmers Start with Game Programming.         |
|                                                                               |
|                                                                               |
| For More tutorials: http://www.softwareschule.ch/maxbox.htm                   |
|_______________________________________________________________________________|


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }
program Box_Black_Jack;  //mX3™ 
 
type
   TNumbs = (a16,b17,c18,d19,e20,f21);
   TNumbSet = set of Byte;
   TCharSet2 = set of Char;
   TDay = (Mon, Tue, Wed, Thu, Fri, Sat, Sun);   // Enumeration values

var (* declaring variables for our game *)
comp,tot,tot_p_one,x,x2,z,z2: integer;
a,b,c,d,a2,b2,c2,e,f,g,h,e2,f2,g2,num,num_comp,mone,mone2: integer;
title,title_comp,num_wr,num_wr_comp,cool,cool2, player, enter: string;
q1,q2,q3,q4,q5,q6: char;
T: boolean;

   
function GetASCII: string;
var i: integer;
begin
  for i:= 1 to 255 do
  result:= result +#13#10+ Format('This Number: %4d is this ASCII %2s',[i, Chr(i)])
end;  


procedure card; 
(* This procedure is using the ASCII code list, to build the card's sides, the "qX" variables are the one which will include the value which will build the sides of each card *)
 
 begin
  //setlength(numss, 10)
  //numss:=  [23];
  //[16,17,18,19,20,21];
  q1:=chr(91);  //  [
  q2:=chr(175);  //205  -
  q3:=chr(93);  //187 ]
  q4:=chr(124);   //186
  q5:=chr(95);  //188  _
  q6:=chr(91);  //200 
  //ChartoOem(PChar(key),PChar(Key));
  //Writeln(GetASCII);
   //if CharInSet(AnsiChar(InputText[i]), ['0'..'9', 'a'..'z', 'R(']) then

 end;
 
procedure p_one;
(* The Player's turn procedure *)
 begin
   //textbackground(green);
  memo2.clear;
  memo2.color:= clgreen;
  //clrscr;
  a:=0; b:=0; c:=0; d:=0; a2:=0; b2:=0; c2:=0; mone:=0;
  tot_p_one:= 0; (* the variable counts the Total-Sum of the Player's cards *)
  player:= 'y';
  memo2.font.color:= clwhite;  
  writeln('Your`s!');
  while (player='y') and (tot_p_one<=18) do begin
    x:= Random(14+1-6)+6;  
    case x of  
     6: num_wr:='6';
     7: num_wr:='7';
     8: num_wr:='8';
     9: num_wr:='9';
     10: num_wr:='10';
     11: num_wr:='J';
     12: num_wr:='Q';
     13: num_wr:='K';
     14: num_wr:='A';
    end;  (* the end of the case *)
    case x of (* This is another "Case" on the same Random number, this "Case" we need to determine the Card's value in the game... Like: King(K) is the number 13 but in
     the game it's value will be 4 *)
     6: num:=6;
     7: num:=7;
     8: num:=8;
     9: num:=9;
     10: num:=10;
     11: num:=2;
     12: num:=3;
     13: num:=4;
     14: num:=11;
    end; (* the end of the case *)
   x2:= Random(4)+1;  (* Random number for the type of the card *)
    if x2=1 then begin title:=chr(3); memo2.font.color:= clred; end;
    if x2=2 then begin title:=chr(4); memo2.font.color:= clred; end;
    if x2=3 then begin title:=chr(5); memo2.font.color:= clblack; end;
    if x2=4 then begin title:=chr(6); memo2.font.color:= clblack; end;
     inc(mone);
    if mone=1 then a:=num;
    if mone=2 then b:=num;
    if mone=3 then c:=num;
    if mone=4 then d:=num;
    if mone=5 then a2:=num;
    if mone=6 then b2:=num;
    if mone=7 then c2:=num;
      cool:=cool+num_wr+title+', ';  (* "cool" is a string of all card, this
                                        variable will show you at the end
                                        of the game the card you had*)
     if ((a+b >=16) and (a+b <=21)) and (c=11) then c:=1;
     if (a+b+c >=16) and (a+b+c <=21) and(d=11) then d:=1;
     if (a+b+c+d >=16) and (a+b+c+d <=21) and(a2=11) then a2:=1;
     if (a+b+c+d+a2 >=16) and (a+b+c+d+a2 <=21) and(b2=11) then b2:=1;
     //if (a+b+c+d+a2+b2 in nums)and(c2=11) then c2:=1;
     if (a+b+c+d+a2+b2 >=16) and (a+b+c+d+a2+b2 <=21) and(c2=11) then c2:=1;

      tot_p_one:=a+b+c+d+a2+b2+c2; (* the total sum of the cards! *)
    if (num_wr<>'10')then begin
     (* the '10' includes 'two chars', 1 and 0, this will move the one small 
      of the card, and mess it's struction, we need to check the  card before printing the card's struction. *)
      writeln(q1+q2+q2+q2+q2+q3);
      //writeln(q4,'':3,q4);
      writeln(q4+' '+num_wr+title+' '+q4);
      writeln(q1+'      '+q3);
      writeln(q6+q2+q2+q2+q2);
     end
    else  begin
      writeln(q1+q2+q2+q2+q2+q3);
      writeln(q4+num_wr+title+' '+q4);
      writeln(q1+'      '+q3);
      writeln(q6+q2+q2+q2+q2);
     end;
  writeln('Another Card? by now: '+intToStr(tot_p_one));  
  player:= readln('More cards type Y or N');
 end;
  T:= True;
end;
 
procedure Computer;
begin
  tot:=0;
  comp:=0;
   writeln('Computer`s');
   writeln('');
    e:=0; f:=0; g:=0; h:=0; e2:=0; f2:=0; g2:=0;
  while (comp=0)and(tot<=16) do begin
    (*random and checking of variables are much the same as the player's fucntion *)
    z:=random(14+1-6)+6;
     case z of
      6: num_wr_comp:='6';
      7: num_wr_comp:='7';
      8: num_wr_comp:='8';
      9: num_wr_comp:='9';
      10: num_wr_comp:='10';
      11: num_wr_comp:='J';
      12: num_wr_comp:='Q';
      13: num_wr_comp:='K';     
      14: num_wr_comp:='A';
     end;
     case z of
      6: num_comp:=6;
      7: num_comp:=7;
      8: num_comp:=8;
      9: num_comp:=9;
      10: num_comp:=10;
      11: num_comp:=2;
      12: num_comp:=3;
      13: num_comp:=4;
      14: num_comp:=11;
     end;
    z2:=random(4)+1;
     if (z2=1) then begin title_comp:=chr(3); memo2.font.color:=clred; end;
     if (z2=2) then begin title_comp:=chr(4); memo2.font.color:=clred; end;
     if (z2=3) then begin title_comp:=chr(5); memo2.font.color:=clblack; end;
     if (z2=4) then begin title_comp:=chr(6); memo2.font.color:=clblack; end;
      inc(mone2);
     if (mone2=1) then e:=num_comp;
     if (mone2=2) then f:=num_comp;
     if (mone2=3) then g:=num_comp;
     if (mone2=4) then h:=num_comp;
     if (mone2=5) then e2:=num_comp;
     if (mone2=6) then f2:=num_comp;
     if (mone2=7) then g2:=num_comp;
       cool2:=cool2+num_wr_comp+title_comp+', ';
      //if (e+f in nums)and(g=11) then g:=1;
      if (e+f >=16) and (e+f <=21)and(g=11) then g:=1;
      if (e+f+g >=16) and (e+f+g <=21) and (h=11) then h:=1;
      if (e+f+g+h >=16) and (e+f+g+h <=21)and(e2=11) then e2:=1;
      if (e+f+g+h+e2 >=16) and (e+f+g+h+e2 <=21)and(f2=11) then f2:=1;
      if (e+f+g+h+e2+f2 >=16) and (e+f+g+h+e2+f2 <=21)and(g2=11) then g2:=1;
     if (num_wr_comp<>'10') then begin
        //gotoXY(m,n);
       writeln(q1+q2+q2+q2+q2+q3);
       writeln(q4+' '+num_wr_comp+title_comp+' '+q4);
       //writeln(q4,'':3,q4);
        writeln(q1+'      '+q3);
       writeln(q6+q2+q2+q2+q2);
      end 
     else begin
        //gotoXY(m,n);
       writeln(q1+q2+q2+q2+q2+q3);
       writeln(q4+num_wr_comp+title+' '+q4);
        writeln(q1+'      '+q3);
       writeln(q6+q2+q2+q2+q2);
       writeln('');
      end;
       tot:= e+f+g+h+e2+f2+g2;  (* the total sum of the computer's cards! *)
   end;
 end;
 
procedure blackexit;
(* just a stupid exit procedure for the game's main *)
 begin
  //clrscr;
   //textbackground(white);
    memo2.font.color:= clyellow;
  writeln('You had played: The "Devil Black-Jack"!');
  writeln('You played nice, thank you come again!');
  writeln('');   //voice
 end;
 
procedure crediet;
(* the game's crediets procedure, also for the game's main! *)
 begin
  //clrscr;
   memo2.clear;
   //textbackground(white);
   //textcolor(black);
  writeln('This is version v1.1 of the Box Black-Jack"');
  writeln('');
   memo2.font.color:= clyellow;
  writeln('Press (g) to go to the Game!');
  writeln('Or Press (q) to Exit the game!');
   write(' '+'Press Now: ');
  enter:= readln('enter');
  if (enter='g') then
   p_one;
  if (enter='q') then
   exit;
 end;
 
procedure help;
(* the help procedure of the game, also used from the game's main *)
 begin
  //clrscr;
  memo2.color:= clblack;
  writeln('This is the most easiest game of cards, rules are simple:');
  writeln('All you need is not to pass the 21; By this numbers of cards:');
  writeln('"6" => 6, "7" => 7, "8" => 8, "9" => 9, "10" => 10,');
  writeln('"J" => 2, "Q" => 3, "K" => 4, "A" => 11');
   memo2.font.color:= clred;
  writeln('(But when the sum of the present numbers is more than 15,');
  writeln('then the next "ACE" will be "A" => 1)');
  writeln('');
  memo2.font.color:= clyellow;

    writeln('Go to the Game - Press (g)!');
    writeln('Or Press (q) to Quit!');
    writeln(' '+'Press Now: ');
    enter:= readln('your choice');
     if (enter='g') then p_one;
     if (enter='q') then exit;
 end;

procedure main;
 begin
 repeat
  with memo2.font do begin
    color:= clblue;
    size:= 18;
   writeln('Black Jack Box Game');  
  writeln('*******************');   
  writeln(''); 
  write('To the(');
    color:= clred;
  write('g');
  write(')ame | (');
  write('h');
  write(')elp | (');
  write('c');
  write(')redit | (');
  write('q');
  //style:= style -[fsbold];
  write(')uit');
  writeln('');
  write('Your Choice: ');
     color:= clred;
  writeln('');
  enter:= readln('Enter your Choice');

  end;
 until (enter='g')or(enter='h')or(enter='c')or(enter='q');
   if (enter='g') then p_one;
   if (enter='h') then help;
   if (enter='c') then crediet;
   if (enter='q') then exit;
 end;

Begin
 Randomize; (*so the random numbers
              won't repeat itselfs... *)
 with memo2 do begin
    height:= 390;
    color:= clgreen;
    clear;
   T:=false;
   card;
   main;
 if T then begin(* while the T is true *)
   computer;
   writeln('');
    color:= clblack;
    font.color:= clwhite;
  write('Your`s: ');
  write(cool +': '+inttoStr(tot_p_one));
  writeln('');  
  write('Computer`s: ');
  write(cool2 +': '+inttoStr(tot));
  writeln('');
  font.color:= clred;
  end;
   if (tot_p_one>21) and (tot<=21) then
    writeln('You Lost!!');
   if (tot_p_one<=21) and (tot<=21) then begin
     if (tot_p_one>tot) then writeln('You Won!');
     if (tot_p_one<tot) then writeln('You Lost!');
     if (tot_p_one=tot) then writeln('No One Wins!');
    end;
   if (tot_p_one<=21) and (tot>21) then
    writeln('You Won!');
   if (tot_p_one>21) and (tot>21) then
    writeln('Every one lost!!');
      writeln('');
      writeln('');
   end;
End.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Glückauf

Herr, wirf Hirn vom Himmel

Ein Leben ohne Code ist möglich, aber sinnlos ( Max )
Der beste Platz für Politiker ist das Wahlplakat. Dort ist er tragbar, geräuschlos und leicht zu entfernen ( Loriot )

Es gibt Leute, die fühlen sich überall gedemütigt, wo sie nicht frech sein dürfen ( Otto Weiss )


 - EOF -</pre></body></html>