Program OCX_Player2;

///////////////////////////////////////////////////////////////////////////
//  #sign:Administrator: PC08: 12/03/2014 07:49:54 AM 
//  Purpose: how to call OCX Windows Media Player IWMPRemoteMediaServices 
//  #path>ples\E:\maxbox3\mXGit39988\maxbox3\examples\               
//  Lines of Code #locs:90
///////////////////////////////////////////////////////////////////////////

Const TEXTOUT = 'hi world of playMAX maXboy';
      OCXPIC  = 'ocx_mediaplayer.png';

{$DEFINE MSWINDOWS}

//############################################################################
// OCX OLE Automation Media Demo
//############################################################################
//TODO: Button with stop event, change color and save bitmap as png
//TODO: make a file or URL parameter to PlayMedia()!
  
  procedure GetVersionEx3(out verinfo: TOSVersionInfo); //var verinfo: TOSVersionInfo
     External  'GetVersionExA@kernel32.dll stdcall';
 
function CheckPSAPILoaded: Boolean;
var hPSAPI: THandle;
begin
  if hPSAPI = 0 then begin
{$IFDEF MSWINDOWS}
    hPSAPI:= LoadLibrary('PSAPI.dll');
    //writeln('debug DLL handle '+inttostr(hPSAPI));
    if hPSAPI > 32 then result:= true;
    if hPSAPI < 32 then begin
      hPSAPI:= 0;
      Result:= False;
      Exit;
    end;
 {$ENDIF}   
  end; 
end;

function JclGUIDToString(const GUID: TGUID): string;
begin
  {$IFDEf CLR}
  Result:= GUID.ToString();
  {$ELSE}
  Result:= Format('{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}',
    [GUID.D1, GUID.D2, GUID.D3, GUID.D4[0], GUID.D4[1], GUID.D4[2],
     GUID.D4[3], GUID.D4[4], GUID.D4[5], GUID.D4[6], GUID.D4[7]]);
  {$ENDIF CLR}
end;

  
procedure PlayMedia;
var wmp: Variant; 
 //Maybe you'll be more comfortable with automation.
 //I believe it would provide most of the functionality as the interfaces provide.
begin
   wmp:= CreateOleObject('WMPlayer.OCX');
   //wmp.OpenPlayer(Exepath+'examples\maxbox.wav');
   if ISInternet then begin
     wmp.URL:= 'http://www.softwareschule.ch/download/airmaxloop3.mp3';
     wmp.OpenPlayer(wmp.URL);
   end else
     wmp.OpenPlayer(Exepath+'examples\maxbox.wav');
  //wmp.controls.play;
end; 


function GetOsVersionInfo3: TOSVersionInfo; 
var verInfo: TOSVersionInfo;
begin
  verinfo.dwOSVersionInfoSize:= sizeof(verinfo);
  GetVersionEx3(Verinfo);
  result:= Verinfo;
end; 

function IsWindowsVista: boolean;
var verInfo: TOSVersionInfo;
begin
  verinfo.dwOSVersionInfoSize:= Sizeof(verinfo);
  GetVersionEx(Verinfo);
  result:= Verinfo.dwMajorVersion >=6;
end;


Begin  //Main
  PlayMedia; 
  if FileExists(Exepath+'examples\'+OCXPIC) then 
    OpenDoc(Exepath+'examples\'+OCXPIC); 
End. 



//DOC
Small set for arduino and android unit testing 

My read of the documentation is that those interfaces are not meant to control a running instance of media player from your program, but to work with a embedded player and let the player show in full mode while staying attached to your application.

http://glscene.sourceforge.net/wikka/HomePage

----Simple Browser started----
----Simple Browser started----