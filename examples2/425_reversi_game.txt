PROGRAM Othello_Reversi;

//////////////////////////////////////////////////////////////////////
//  #sign:max: APSN21: 18.12.2013 10:04:20 
//  Purpose: preset the reversi game with OpenGL, items see below   //
//  #path>ples\E:\maxbox\maxbox3\examples\                          //
//  precondition: data directory in ../source/Opengldata
//  Lines of Code #locs:59
//////////////////////////////////////////////////////////////////////

Const TEXTOUT = 'hi world of code coverage with cover age';

//############################################################################
// Othello OpenGL App       mX4 Script Studio
//############################################################################
//TODO: change cursor to hand and save bitmap as png
//TODO: transfer the Algo to a LED Matrix on Arduino ex. I^2C Adafruit Shield!!

{TYPE <Type declarations>} 

  var FWait, switch: Boolean;
      ComPorts: TStrings;
      //aert: TQueryKeyInfo; //TRegIniMode; //TRegIniType

//<FUNCTION>
//<PROCEDURE> 

procedure startOthello(sender: TObject);
begin
  FWait:= false;
  writeln('othello demo started...');
    screen.cursor:= CRHandpoint;
    //maxform1.cursor:= CRHandpoint;;
    maxform1.reversi1click(sender);
    screen.cursor:= CRDefault;
  writeln('othello demo stopped...');
  FWait:= true;
  //MaxBufSize
end; 


Begin  //Main
//<Executable statements>
  //TOutlookExport_Spy;
  Writeln('');
  ComPorts:= TStringlist.Create;
  try
    EnumComPorts(ComPorts);
    Writeln('Start COM Port Command of Arduino COM: '+ComPorts[0]);  
  except
    Writeln('No COM Ports');
  end;    
  ComPorts.Free;
//<Definitions>  

  //ares:= TResolver.create;
 { with TResolver.create do begin
   //writeln(inttostr(GetHostByName(gethostname)));
    Free;
   end;  }
   startOthello(self);
   
END. 


unit uPSI_delphi_arduino_Unit1;
{
   arduino tester
}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_delphi_arduino_Unit1 = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TForm1(CL: TPSPascalCompiler);
procedure SIRegister_delphi_arduino_Unit1(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TForm1(CL: TPSRuntimeClassImporter);
procedure RIRegister_delphi_arduino_Unit1(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   Windows
  ,Messages
  ,Variants
  ,Graphics
  ,Controls
  ,Forms
  ,Dialogs
  ,StdCtrls
  ,ComCtrls
  ,CPort
  ,CPortCtl
  ,Menus
  ,delphi_arduino_Unit1
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_delphi_arduino_Unit1]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TForm1(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TForm', 'TForm1') do
  with CL.AddClassN(CL.FindClass('TForm'),'TledForm') do
  begin
    RegisterProperty('btn_connect', 'TButton', iptrw);
    RegisterProperty('ComPort1', 'TComPort', iptrw);
    RegisterProperty('StatusBar1', 'TStatusBar', iptrw);
    RegisterProperty('btn_Setup', 'TButton', iptrw);
    RegisterProperty('chk_led1', 'TCheckBox', iptrw);
    RegisterProperty('chk_led2', 'TCheckBox', iptrw);
    RegisterProperty('chk_led3', 'TCheckBox', iptrw);
    RegisterProperty('chk_led4', 'TCheckBox', iptrw);
    RegisterProperty('chk_led5', 'TCheckBox', iptrw);
    RegisterProperty('btn_loop', 'TButton', iptrw);
    RegisterProperty('Label1', 'TLabel', iptrw);
    RegisterProperty('Label2', 'TLabel', iptrw);
    RegisterProperty('Label3', 'TLabel', iptrw);
    RegisterProperty('Label4', 'TLabel', iptrw);
    RegisterProperty('Label5', 'TLabel', iptrw);
    RegisterProperty('Label6', 'TLabel', iptrw);
    RegisterProperty('Label7', 'TLabel', iptrw);
    RegisterProperty('Label8', 'TLabel', iptrw);
    RegisterProperty('Label9', 'TLabel', iptrw);
    RegisterProperty('Label10', 'TLabel', iptrw);
    RegisterProperty('Label11', 'TLabel', iptrw);
    RegisterProperty('Label12', 'TLabel', iptrw);
    RegisterMethod('Procedure btn_connectClick( Sender : TObject)');
    RegisterMethod('Procedure btn_SetupClick( Sender : TObject)');
    RegisterMethod('Procedure FormCreate( Sender : TObject)');
    RegisterMethod('Procedure chk_led1Click( Sender : TObject)');
    RegisterMethod('Procedure chk_led2Click( Sender : TObject)');
    RegisterMethod('Procedure chk_led3Click( Sender : TObject)');
    RegisterMethod('Procedure chk_led4Click( Sender : TObject)');
    RegisterMethod('Procedure chk_led5Click( Sender : TObject)');
    RegisterMethod('Procedure FormClose( Sender : TObject; var Action : TCloseAction)');
    RegisterMethod('Procedure btn_loopClick( Sender : TObject)');
  end;
end;




//############################################################################
// Archimedes Spiral App
//############################################################################

unit ArchSpiralMain;

interface

uses
  w3system, w3components, w3ctrls, w3application, w3game, w3gameapp,
  w3polygons, w3inet, w3graphics;

type
  TApplication = class(TW3CustomGameApplication)
  private
    FValueA: Float;
    FValueB: Float;
    FWait: Boolean;
    procedure HandleClick(Sender:TObject);
  protected
    procedure ApplicationStarting; override;
    procedure ApplicationClosing; override;
    procedure PaintView(Canvas: TW3Canvas); override;
  end;

implementation

//############################################################################
// TApplication
//############################################################################

 
  http://i1-win.softpedia-static.com/screenshots/maXbox_5.png?1381322021
  
    RegisterMethod('Constructor Create(AOwner: TComponent)');
    RegisterConstructor(@TJvMail.Create, 'Create');
  
  
   RegisterMethod('Procedure Free');
   RegisterMethod(@TJvMail.Destroy, 'Free');
   


----app_template_loaded_code----