{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red128\green0\blue128;\red0\green0\blue128;\red0\green128\blue128;\red255\green0\blue0;}
{\info{\comment Generated by the SynEdit RTF exporter}
{\title Untitled}}
\deflang1033\pard\plain\f0\fs20 \cf0\b Program\b0  GEOs_MAP_BOX2\cf1 ;
\par 
\par \cf2\i //#sign 4 AM max: MAXBOX8: 9/22/2014 10:29:51 AM PM 
\par //#path:ples\\C:\\maXbook\\maxbox3\\mX3999\\maxbox3\\examples\\mX39998_7\\
\par //TODO: Save the map to webserver_file, #locs:147
\par //ref--> http://open.mapquestapi.com/nominatim/
\par \i0\cf0                                
\par \b Const
\par \b0    AFILENAME2\cf1 =\cf0  \cf3 'maxmapfile.html'\cf1 ;
\par \cf0    
\par    UrlGoogleQrCode1\cf1 =\cf3 'http://spreadsheets.google.com/tq?key=pCQbetd-CptGXxxQIG7VFIQ&pub=1'\cf1 ;\cf2\i ////'query':'SELECT A,D WHERE D > 100 ORDER BY D',
\par \i0\cf0   \cf2\i // 'options': \{'title':'Population Density (people/km^2)', 'legend':'none'\}';
\par \i0\cf0      
\par      UrlGoogleQrCode2\cf1 =\cf3 'http://chart.apis.google.com/chart?'
\par \cf0                \cf1 +\cf0  \cf3 'chs=400x200'\cf0   \cf2\i // graphic size
\par \i0\cf0                \cf1 +\cf0  \cf3 '&amp;cht=bvs'\cf0  \cf2\i // bar vertical chart
\par \i0\cf0                \cf1 +\cf0  \cf3 '&amp;chco=ff0000'\cf0     \cf2\i // color
\par \i0\cf0                \cf2\i //+ '&amp;chd=t:';
\par \i0\cf0                \cf1 +\cf0  \cf3 '&amp;chd=%s'\cf1 ;
\par \cf0     \cf2\i //http://haignet.co.uk/google-chart-example.htm           
\par \i0\cf0                
\par    UrlGoogleQrCode3\cf1 =\cf3 'http://chart.apis.google.com/chart?chs=245x100&cht=gom&chd=t:35&chl=mXConnections'\cf1 ;\cf2\i //" alt="???"      
\par \i0\cf0    
\par    UrlGoogleQrCode4\cf1 =\cf3 'http://chart.apis.google.com/chart?cht=bhs&chd=t:86,68,62,59,55,51&chs=300x200&chxl=0:|0 wins|25 wins|50 wins|75 wins|100 wins|1:|Rickoos|Reefer|Meka Dragon|maXbox|Aliboy|pb&chxt=x,y'\cf1 ;\cf0  \cf2\i //"    
\par \i0\cf0    
\par    UrlGoogleQrCode5\cf1 =\cf3 'http://open.mapquestapi.com/nominatim/v1/search.php?format=html&json_callback=renderBasicSearchNarrative&q=westminster+abbey'\cf1 ;\cf0   
\par   
\par    UrlGoogleQrCode6\cf1 =\cf3 'http://open.mapquestapi.com/nominatim/v1/search.php?format=html&json_callback=renderBasicSearchNarrative&q=cathedral+cologne'\cf1 ;\cf0   
\par 
\par    UrlGoogleQrCode7\cf1 =\cf3 'http://open.mapquestapi.com/nominatim/v1/search.php?format=html&json_callback=renderBasicSearchNarrative&q=dom+cologne'\cf1 ;\cf0   
\par 
\par     UrlMapQuestAPICode\cf1 =\cf3 'http://open.mapquestapi.com/nominatim/v1/search.php?format=html&json_callback=renderBasicSearchNarrative&q=%s'\cf1 ;\cf0   
\par 
\par     UrlMapQuestAPICode2\cf1 =\cf3 'http://open.mapquestapi.com/nominatim/v1/search.php?format=%s&json_callback=renderBasicSearchNarrative&q=%s'\cf1 ;\cf0   
\par  
\par \b type
\par \b0   TFcntHook \cf1 =\cf0  \b function\b0\cf1 (\cf0 Wnd\cf1 :\cf0 HWND\cf1 ;\cf0  uiMsg\cf1 :\cf0 UINT\cf1 ;\cf0  wParam\cf1 :\cf0  WPARAM\cf1 ;\cf0  lParam\cf1 :\cf0 LPARAM\cf1 ):\cf0 UINT_PTR\cf1 ;
\par \cf0    \cf2\i //stdcall;
\par 
\par \i0\cf0\b procedure\b0  GetQrCodeInet\cf1 (\cf0 Wid\cf1 ,\cf0 Heig\cf1 :\cf0 Word\cf1 ;\cf0 C_Level\cf1 ,\cf0 apath\cf1 :\cf0\b string\b0\cf1 ;\cf0  \b const\b0  Data\cf1 :\cf0\b string\b0\cf1 );
\par \cf0\b var\b0  encodedURL\cf1 :\cf0  \b string\b0\cf1 ;
\par \cf0     pngStream\cf1 :\cf0  TMemoryStream\cf1 ;
\par \cf0\b begin
\par \b0   \cf2\i //encodedURL:= Format(UrlGoogleQrCode,[Width,Height, C_Level, HTTPEncode(Data)]);
\par \i0\cf0   \cf2\i //encodedURL:= Format(UrlGoogleQrCode2,[HTTPEncode(Data)]);
\par \i0\cf0   encodedURL\cf1 :=\cf0  Format\cf1 (\cf0 UrlGoogleQrCode3\cf1 ,[]);
\par \cf0   pngStream\cf1 :=\cf0  TMemoryStream\cf1 .\cf0 create\cf1 ;
\par \cf0   HttpGet\cf1 (\cf0 EncodedURL\cf1 ,\cf0  pngStream\cf1 );\cf0    \cf2\i //WinInet
\par \i0\cf0   \b with\b0  TLinearBitmap\cf1 .\cf0 Create \b do\b0  \b try
\par \b0     pngStream\cf1 .\cf0 Position\cf1 :=\cf0  \cf4 0\cf1 ;
\par \cf0     LoadFromStream2\cf1 (\cf0 pngStream\cf1 ,\cf3 'PNG'\cf1 );
\par \cf0     SaveToFile\cf1 (\cf0 apath\cf1 );
\par \cf0     OpenDoc\cf1 (\cf0 apath\cf1 );
\par \cf0   \b finally
\par \b0     Dispose\cf1 ;
\par \cf0     Free\cf1 ;
\par \cf0     pngStream\cf1 .\cf0 Free\cf1 ;
\par \cf0   \b end\b0\cf1 ;
\par \cf0\b end\b0\cf1 ;
\par 
\par 
\par \cf0\b procedure\b0  GetMapScript\cf1 (\cf0 C_form\cf1 ,\cf0 apath\cf1 :\cf0  \b string\b0\cf1 ;\cf0  \b const\b0  Data\cf1 :\cf0  \b string\b0\cf1 );
\par \cf0\b var\b0  encodedURL\cf1 :\cf0  \b string\b0\cf1 ;
\par \cf0     mapStream\cf1 :\cf0  TMemoryStream\cf1 ;
\par \cf0\b begin
\par \b0   \cf2\i //encodedURL:= Format(UrlGoogleQrCode,[Width,Height, C_Level, HTTPEncode(Data)]);
\par \i0\cf0   encodedURL\cf1 :=\cf0  Format\cf1 (\cf0 UrlMapQuestAPICode2\cf1 ,[\cf0 c_form\cf1 ,\cf0 HTTPEncode\cf1 (\cf0 Data\cf1 )]);
\par \cf0   mapStream\cf1 :=\cf0  TMemoryStream\cf1 .\cf0 create\cf1 ;
\par \cf0   \b try
\par \b0     HttpGet\cf1 (\cf0 EncodedURL\cf1 ,\cf0  mapStream\cf1 );\cf0    \cf2\i //WinInet
\par \i0\cf0     mapStream\cf1 .\cf0 Position\cf1 :=\cf0  \cf4 0\cf1 ;
\par \cf0     mapStream\cf1 .\cf0 Savetofile\cf1 (\cf0 apath\cf1 )
\par \cf0     OpenDoc\cf1 (\cf0 apath\cf1 );
\par \cf0   \b finally
\par \b0     mapStream\cf1 .\cf0 Free\cf1 ;
\par \cf0   \b end\b0\cf1 ;
\par \cf0\b end\b0\cf1 ;
\par 
\par 
\par \cf0\b function\b0  GetMapXScript\cf1 (\cf0 C_form\cf1 ,\cf0 apath\cf1 :\cf0  \b string\b0\cf1 ;\cf0  \b const\b0  Data\cf1 :\cf0  \b string\b0\cf1 ):\cf0  boolean\cf1 ;
\par \cf0\b var\b0  encodedURL\cf1 :\cf0  \b string\b0\cf1 ;
\par \cf0\b begin
\par \b0   \cf2\i //encodedURL:= Format(UrlGoogleQrCode,[Width,Height, C_Level, HTTPEncode(Data)]);
\par \i0\cf0   encodedURL\cf1 :=\cf0  Format\cf1 (\cf0 UrlMapQuestAPICode2\cf1 ,[\cf0 c_form\cf1 ,\cf0 HTTPEncode\cf1 (\cf0 Data\cf1 )]);
\par \cf0   \b try
\par \b0    \cf2\i //HttpGet(EncodedURL, mapStream);   //WinInet
\par \i0\cf0   Result\cf1 :=\cf0  UrlDownloadToFile\cf1 (\cf0\b Nil\b0\cf1 ,\cf0 PChar\cf1 (\cf0 encodedURL\cf1 ),\cf0 PChar\cf1 (\cf0 apath\cf1 ),\cf4 0\cf1 ,\cf0\b Nil\b0\cf1 )=\cf0  \cf4 0\cf1 ;
\par \cf0   OpenDoc\cf1 (\cf0 apath\cf1 );
\par \cf0   \b finally
\par \b0     encodedURL\cf1 :=\cf0  \cf3 ''\cf1 ;
\par \cf0   \b end\b0\cf1 ;
\par \cf0\b end\b0\cf1 ;
\par 
\par 
\par \cf0\b function\b0  DownloadFile\cf1 (\cf0 SourceFile\cf1 ,\cf0  DestFile\cf1 :\cf0  \b string\b0\cf1 ):\cf0  Boolean\cf1 ;
\par \cf0\b begin
\par \b0   \cf2\i //TCIPStatus //TBindStatus
\par \i0\cf0   \cf2\i //TUrlTemplate
\par \i0\cf0   \cf2\i //TUrlZoneReg of URLMon
\par \i0\cf0   \b try
\par \b0     Result\cf1 :=\cf0  UrlDownloadToFile\cf1 (\cf0\b Nil\b0\cf1 ,\cf0 PChar\cf1 (\cf0 SourceFile\cf1 ),\cf0 PChar\cf1 (\cf0 DestFile\cf1 ),\cf4 0\cf1 ,\cf0\b Nil\b0\cf1 )=\cf0  \cf4 0\cf1 ;
\par \cf0   \b except
\par \b0     Result\cf1 :=\cf0  False\cf1 ;
\par \cf0   \b end\b0\cf1 ;
\par \cf0\b end\b0\cf1 ;
\par 
\par \cf0    
\par \cf2\i //TODO:#1 Returns the QR Code direct of the last modification of the given File
\par 
\par \i0\cf0\b begin
\par \b0   Writeln\cf1 (\cf0 datetimetostr\cf1 (\cf0 FileTimeGMT\cf1 (\cf0 exepath\cf1 +\cf3 'maxbox3.exe'\cf1 )));
\par \cf0    
\par   \cf2\i //call of the script with a graphic on return
\par \i0\cf0   \cf2\i //GetQrCodeInet(150,150,'Q',ExePath+'mX3QRCode2map3.png','123456789');
\par \i0\cf0   \cf2\i //GetMAP(150,150,'Q',ExePath+'cologne2map3.html','dom cologne');
\par \i0\cf0   \cf2\i //GetMAP('html',ExePath+'cologne2map345.html','cathedral cologne');
\par \i0\cf0   
\par   \cf2\i //internals
\par \i0\cf0   
\par   GetGeoMAP\cf1 (\cf3 'html'\cf1 ,\cf0 ExePath\cf1 +\cf0 AFILENAME2\cf1 ,\cf3 'dom cologne'\cf1 )\cf0  
\par   
\par   \b if\b0  GetMAPX\cf1 (\cf3 'html'\cf1 ,\cf0 ExePath\cf1 +\cf3 'cologne2mapX.html'\cf1 ,\cf3 'cathedral cologne'\cf1 )\cf0  \b then
\par \b0     writeln\cf1 (\cf3 'cologne map found'\cf1 );
\par 
\par \cf0   \cf2\i //isvalidPNG
\par \i0\cf0   \cf2\i //UrlDownloadToFile 
\par \i0\cf0   \cf2\i //wGetX(UrlGoogleQrCode6, exepath+'mapdatacologne.html');
\par \i0\cf0   \cf2\i //wGet2('http://max.kleiner.com/images/texturemap.jpg','texturemap7.jpg');
\par \i0\cf0   \cf2\i //DownloadFile('http://max.kleiner.com/images/texturemap.jpg','texturemap77.jpg')
\par 
\par \i0\cf0   \b maxCalcF\b0\cf1 (\cf3 'SQRT(PI)'\cf1 );
\par \cf0   
\par   \cf2\i //LimitFloat( const eValue, eMin, eMax : Extended) : Extended');
\par \i0\cf0   \cf2\i //AngleToRadians( iAngle : Extended) : Extended');
\par \i0\cf0   \cf2\i //RadiansToAngle( eRad : Extended) : Extended');
\par \i0\cf0   \cf2\i //Cross180( iLong : Double) : Boolean');
\par \i0\cf0   \cf2\i //Mod180( Value : integer) : Integer');
\par \i0\cf0   \cf2\i //Mod180Float( Value : Extended) : Extended');
\par \i0\cf0   \cf2\i //MulDivFloat( a, b, d : Extended) : Extended');
\par \i0\cf0   \cf2\i //LongDiff( iLong1, iLong2 : Double) : Double');
\par \i0\cf0   \cf2\i //Bmp_AssignFromPersistent( Source : TPersistent; Bmp : TbitMap)');
\par \i0\cf0   \cf2\i //Bmp_CreateFromPersistent( Source : TPersistent) : TbitMap');
\par \i0\cf0   \cf2\i //FixFilePath( const Inpath, CheckPath : string) : string');
\par \i0\cf0   \cf2\i //UnFixFilePath( const Inpath, CheckPath : string) : string');
\par \i0\cf0   \cf2\i //FillStringList( sl : TStringList; const aText : string)');
\par \i0\cf0   \cf2\i //openmapX
\par \i0\cf0\b End\b0\cf1 .\cf0   
\par 
\par \b Doc\b0  \b Ref\b0\cf1 :
\par \cf0   http\cf1 :\cf2\i //open.mapquestapi.com/nominatim/
\par \i0\cf0   
\par   	The following example demonstrates a simple search request \b for\b0  \cf1 "\cf0 Westminster Abbey\cf1 "\cf0  \b using\b0  Nominatim\cf1 .\cf0  Only three parameters are being requested\cf1 :
\par 
\par \cf0     format \cf1 -\cf0  Output format being called\cf1 .\cf0  \cf1 [\cf0 html\cf1 /\cf0 json\cf1 /\cf0 xml\cf1 ]
\par \cf0     json_callback \cf1 -\cf0  Callback \b function\b0  used \b to\b0  display the results below\cf1 .
\par \cf0     q \cf1 -\cf0  Query \b string\b0  being searched\cf1 .
\par 
\par \cf0 The JavaScript code which sends the request \b and\b0  displays the result can be viewed here\cf1 .\cf0  
\par 
\par   
\par \cf1 ----\cf0 app_template_loaded_code\cf1 ----
\par }