PROGRAM ASCII_GridForm_Solution;
//shows ASCII&Pascal Triangle Variation (odd&even) of the binominal coefficients  
//shows the work of a StringList with a StringGrid to sort the ASCII Table!
//Task 226, locs=222

Const
   CROW = 18;
   CCOL = 25;
   CTRI = (CCOL +1) DIV 2;    //NCR-1                       
   //CCOL = 2 * CTRI-1;
   LotNR = 300;
   LotRANGE = 45;
   TheSeparator = '@';
   RESPATH ='examples\images\';         //path to memory --> examples
   DECK = 'deck2.bmp';


Var 
//<Variable declarations>
    quadrat,square: extended;
    j,i: integer;
    larr: array[0..lotNR] of integer; 
    bigstring: string;
    sGrid1: TStringGrid;  
    mForm: Tform;
    Bmp: TBitmap;


procedure FormKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #27 then mForm.close;
end;

procedure CreateDrawForm;
begin
  mForm:= TForm.create(self);
  with mForm do begin
    FormStyle:= fsStayOnTop;
    Position:= poScreenCenter;
    color:= clred;
    Caption:= 'ASCII Pascal BITMAP GRID Tester';
    Width:= 1000;
    Height:= 645;
    BorderStyle:= bsDialog;
    //onClose:= @FormClose;
    onKeyPress:= @FormKeyPress
    Show
  end;
  sGrid1:= TStringGrid.Create(self);
  with sGrid1 do begin
    parent:= mForm;
    top:= 20;
    //SetBounds
    defaultColwidth:= 34;
    defaultRowheight:= 28;
    GridLineWidth:= 5;
    colcount:= CCOL;  
    rowcount:= CROW;
    color:= clteal;
    height:= CROW *(defaultRowHeight+GridLineWidth);
    width:= CCOL * (defaultColWidth+GridLineWidth);
    borderStyle:= bsNone;
    scrollbars:= false;
  end;
end;

//http://www.delphitricks.com/source-code/components/sort_a_stringgrid.html
procedure SortStringGrid(var GenStrGrid: TStringGrid; ThatCol: Integer);
var
  CountItem, I, J, K, ThePosition: integer;
  MyList: TStringList;
  MyString, TempString: string;
begin
  CountItem := GenStrGrid.RowCount;
  MyList        := TStringList.Create;
  MyList.Sorted := False;
  try
    begin
      for I := 1 to (CountItem - 1) do
        MyList.Add(GenStrGrid.Rows[I].Strings[ThatCol] + TheSeparator +
          GenStrGrid.Rows[I].Text);
      Mylist.Sort;
      for K := 1 to Mylist.Count do
      begin
        MyString := MyList.Strings[(K - 1)];
        ThePosition := Pos(TheSeparator, MyString);
        TempString  := '';
        {Eliminate the Text of the column on which we have sorted the StringGrid}
        TempString := Copy(MyString, (ThePosition + 1), Length(MyString));
        MyList.Strings[(K - 1)] := '';
        MyList.Strings[(K - 1)] := TempString;
      end;
      for J := 1 to (CountItem - 1) do
        GenStrGrid.Rows[J].Text := MyList.Strings[(J - 1)];
    end;
  finally
    MyList.Free;
  end;
end;


procedure NumberGrid;
begin
  for I:= 1 to (CROW * CCOL)-1 do begin
     sGrid1.Cells[I ,0]:= inttoStr(I);
     sGrid1.Cells[0,(I div CCOL)+1]:= inttoStr(I+1);//-47);   
   end; 
end;     

procedure TForm5_Image1Click(Sender: TObject);
var
  RS: TResourceStream;
  JPGImage: TJPEGImage;
  image1: TImage;
begin
  JPGImage:= TJPEGImage.Create;
  try
    //RS:= TResourceStream.Create(hInstance, 'JpgImage', RT_RCDATA);
    try
      JPGImage.LoadFromStream(RS);
      Image1.Picture.Graphic := JPGImage;
      Image1.Picture.Bitmap.LoadFromResourceName(HInstance, 'SampleBitmap');
      Image1.Picture.Bitmap.LoadFromResourceID(HInstance, 2345);
    finally
      RS.Free;
    end;
  finally
    JPGImage.Free;
  end;
end;

procedure TForm6_Button1Click(Sender: TObject);
var
  h : THandle;
  bmp : TBitmap;
begin
  h := LoadLibrary('demoData.dll');
  try
    if h <> 0 then
    begin
      bmp := TBitmap.Create();
      try
        bmp.LoadFromResourceId(h, 100); // Here I get the exception
        TForm(sender).Canvas.Draw(10,10,bmp);
      finally
        bmp.Free;
      end;
    end;
  finally
    FreeLibrary(h);
  end;
end; 

procedure TForm1_Button1Click(Sender: TObject) ;
 var
   hFind, hRes: THandle;
   Song: PChar;
 begin
  hFind := FindResource(HInstance, 'MailBeep', 'WAVE') ;
  if hFind <> 0 then begin
    hRes:=LoadResource(HInstance, hFind) ;
    if hRes <> 0 then begin
      Song:=LockResource(hRes) ;
      //if Assigned(Song) then PlaySound(Song, snd_ASync or snd_Memory) ;
      UnlockResource(hRes) ;
    end;
    FreeResource(hFind) ;
  end;
 end;
 
 
 procedure ConvertIconToBitmap( IcoFile,BmpFile : string );
var
  Icon1 : TIcon;
  Bitmap1 : TBitmap;
begin
  Icon1 := TIcon.Create;
  Icon1.LoadFromFile(IcoFile);
  Bitmap1 := TBitmap.Create;
  Bitmap1.Height := Icon1.Height;
  Bitmap1.Width := Icon1.Width;
  Bitmap1.Canvas.Draw(0, 0, Icon1);
  Bitmap1.SaveToFile(BmpFile);
  Bitmap1.Free;
  Icon1.Free;
end;


procedure TForm1_GetResButton1Click(Sender: TObject);
Var
  MyInstance: THandle;
  bmPicture: TBitMap;
  Rsrc: HRSRC;
begin
  bmPicture := TBitMap.Create;
  //MyInstance := LoadLibrary('E:\maxbox3\mXGit39988\maxbox3\maxbox3.exe');
  Rsrc:= FindResource(HInstance, '#1', 'RT_BITMAP');
  
   //MAKEINTRESOURCE(1)

  //Rsrc := FindResource(MyInstance, pchar('#1'), RT_ICON);
  //bmPicture.LoadFromResourceID(MyInstance, Rsrc);
  //Image1.Canvas.Draw(1, 1, bmPicture);
  bmPicture.Free;
  UnlockResource(rsrc);
  FreeLibrary(MyInstance);
end; 

function LoadImageListFromBitmap(ImgList: TCustomImageList; const Bitmap: TBitmap;
  MaskColor: TColor; AutoMaskColor: Boolean): Integer; //overload;
var
  Bmp: TBitmap;
  Width, Height: Integer;
  i: Integer;
  TempImageList: TCustomImageList;
begin
  Result := 0;
  if (ImgList = nil) or (ImgList.Width = 0) or (ImgList.Height = 0) or
     (Bitmap = nil) then
    Exit;

  Width := ImgList.Width;
  Height := ImgList.Height;
  Result := Bitmap.Width div Width; // count
  if (Result = 0) and (Bitmap.Width > 0) then
    Result := 1;
  TempImageList := TCustomImageList.CreateSize(Width, Height);
  Bmp := TBitmap.Create;
  try
    Bmp.PixelFormat := Bitmap.PixelFormat;
    

   // split Bitmap and add all bitmaps to ImgList
    for i := 0 to Result - 1 do
    begin
      if AutoMaskColor then
        MaskColor := Bitmap.Canvas.Pixels[i * Width, Height - 1];

      Bmp.Canvas.Brush.Color := MaskColor;
      Bmp.Width := 0; // clear bitmap
      Bmp.Width := Width;
      Bmp.Height := Height;
      
      Bmp.Canvas.CopyRect(Rect(0, 0, Width, Height),
        Bitmap.Canvas, Rect(i * Width, 0, (i + 1) * Width, Height));
      

      TempImageList.AddMasked(Bmp, MaskColor);
    end;
    ImgList.AddImages(TempImageList);
  finally
    Bmp.Free;
    TempImageList.Free;
  end;
end;

function LoadImageListFromBitmap2(ImgList: TCustomImageList; const Bitmap: TBitmap;
  MaskBitmap: TBitmap): Integer; //overload;
var
  Bmp, MaskBmp: TBitmap;
  Width, Height: Integer;
  i: Integer;
  TempImageList: TCustomImageList;
begin
  Result := 0;
  if (ImgList = nil) or (ImgList.Width = 0) or (ImgList.Height = 0) or
     (Bitmap = nil) or (MaskBitmap = nil) then
    Exit;

  Width := ImgList.Width;
  Height := ImgList.Height;
  Result := Bitmap.Width div Width; // calc count
  if (Result = 0) and (Bitmap.Width > 0) then
    Result := 1;
  TempImageList := TCustomImageList.CreateSize(Width, Height);
  Bmp := TBitmap.Create;
  MaskBmp := TBitmap.Create;
  try
    Bmp.PixelFormat := Bitmap.PixelFormat;
    MaskBmp.PixelFormat := MaskBitmap.PixelFormat;

    

   // split Bitmap and add all bitmaps to ImgList
    for i := 0 to Result - 1 do
    begin
      Bmp.Width := 0; // clear bitmap
      Bmp.Width := Width;
      Bmp.Height := Height;
      
      Bmp.Canvas.CopyRect(Rect(0, 0, Width, Height),
        Bitmap.Canvas, Rect(i * Width, 0, (i + 1) * Width, Height));
      

      MaskBmp.Width := 0; // clear bitmap
      MaskBmp.Width := Width;
      MaskBmp.Height := Height;
      
      MaskBmp.Canvas.CopyRect(Rect(0, 0, Width, Height),
        MaskBitmap.Canvas, Rect(i * Width, 0, (i + 1) * Width, Height));
      

      TempImageList.Add(Bmp, MaskBmp);
    end;
    ImgList.AddImages(TempImageList);
  finally
    Bmp.Free;
    TempImageList.Free;
  end;
end;

procedure TJvImageList_SlicePictureToImageList;
var
  Bmp: TBitmap;
  OwnBitmap: Boolean;
  MaskColor: TColor;
  FPicture: TPicture;
  afrm: TForm;
  //FTransparentMode: TJvImageListTransparentMode;
    FTransparentColor: TColor;
    //FPicture: TPicture;
    FFileName: TFileName;
   TempImageList: TCustomImageList;

begin
  //TempImageList.BeginUpdate;
  try
    TempImageList.Clear;
    if FPicture.Graphic = nil then
      Exit;

    OwnBitmap := False;
    if FPicture.Graphic is TBitmap then
      Bmp := FPicture.Bitmap
    else
    begin
      OwnBitmap := True;
      Bmp := TBitmap.Create;
      //Bmp.Canvas.Brush.Color := FTransparentColor;
      Bmp.Width := FPicture.Width;
      Bmp.Height := FPicture.Height;
      Bmp.Canvas.Draw(0, 0, FPicture.Graphic);
    end;
    try
      {if afrm.TransparentMode = tmNone then
        MaskColor := clNone
      else
        MaskColor := TransparentColor;
       }
      LoadImageListFromBitmap(TempImageList, Bmp, MaskColor, true);
    finally
      if OwnBitmap then
        Bmp.Free;
    end;
  finally
    //EndUpdate;
  end;
end;

procedure TJvImageList_ResourceIdsToImageList;
var
  Bmp: TBitmap;
  ResStream: TResourceStream;
  i: Integer;
  MaskColor: TColor;
    TempImageList: TCustomImageList;
    ResourceIds: TStringList;
    TransparentMode: boolean;

begin
  //BeginUpdate;
  try
    TempImageList.Clear;
    if ResourceIds.Count = 0 then
      Exit;
    Bmp := TBitmap.Create;
    try
      for i := 0 to ResourceIds.Count - 1 do begin
        if Trim(ResourceIds[i]) <> '' then
        try
         // load resource
          ResStream := nil;
          try
            try
              ResStream := TResourceStream.Create(HInstance, ResourceIds[i], 'RT_BITMAP');
            except
              ResStream := nil;
            end;
            if ResStream <> nil then
              Bmp.LoadFromResourceName(HInstance, ResourceIds[i])
            else begin
              ResStream := TResourceStream.Create(HInstance, ResourceIds[i], 'RT_RCDATA');
              Bmp.LoadFromStream(ResStream);
            end;
          finally
            ResStream.Free;
          end;

         // add bitmap 
          if not Bmp.Empty and (Bmp.Width > 0) and (Bmp.Height > 0) then
          begin
            case TransparentMode of
              tmNone: MaskColor := clNone;
              //tmColor: MaskColor := TransparentColor;
              tmAuto: MaskColor := Bmp.Canvas.Pixels[0, Bmp.Height - 1];
            else
              MaskColor := clNone; // make the compiler happy
            end;
            TempImageList.AddMasked(Bmp, MaskColor);
          end;
        except
          // ignore exception
        end;
      end;
    finally
      Bmp.Free;
    end;
  finally
    //EndUpdate;
  end;
end;


 
Procedure FillBitmapGrid;
var i: integer;
    img: TImage;
    imagefile: string;
    hfind: integer;
    arect: TRect;
begin
   //Titellines
   Bmp:= TBitmap.Create;
   for I:= 1 to 255 do begin
     sGrid1.Cells[I ,0]:= inttoStr(I-1);
     sGrid1.Cells[0,(I div 16)+2]:= inttoStr(I+1);//-47);   
   end;   
   //for I:= 0 to 15 do 
     //sGrid1.Cells[I+1,0]:= inttoStr(I); 
  for I:= 1 to 48 do begin
     Imagefile:= ('bmp' + IntToStr(I)+'.bmp');
     Bmp.loadfromFile(ExePath+RESPATH+Imagefile)   
     //HInstance, 'SampleBitmap
     //Bmp.loadfromRes(HInstance, 'WPI_UNINDENT');
     if i mod 2 = 0 then 
     Bmp.loadfromRes(HInstance, 'TAFTERMINAL')
     else 
       Bmp.loadfromRes(HInstance, 'TDBCROSSTABSOURCE');
       
       if i mod 5 = 0 then
          Bmp.loadfromRes(HInstance, 'TZSQLProcessor') else
           if i mod 3 = 0 then
              Bmp.loadfromRes(HInstance, 'TZupdateSQL');
     
      //loadfromres
      //bmp.loadgetresourceid
      //Bmp.loadfromResourceID(HInstance,i+420);
      //Bmp.loadfromResourceID(HInstance,$1c8+$1389D04);
    {  for it:= 31246699 to 31256799 do begin
      try
        Bmp.loadfromResourceID(HInstance,i);
        writeln('found bid'+inttostr(i))
      except
      end;  
      end;  }
      //loadbitmap
      
      //Bmp.loadfromResourceID(HInstance,1);
      
     //hFind := FindResource(HInstance, 'WPI_UNINDENT', 'BITMAP');
     //hFind := FindResource(HInstance, 'WPI_UNINDENT', 'RT_BITMAP');
     
     //Writeln('LoadStr__25: '+LoadStr(64208));
     //Bmp.loadfromResourceID(HInstance,1828+i);   

   //for I:= 2 to 55 do 
     //sGrid1.Cells [I mod 16+1, I div 16+1]:= IntToStr(Random(I));   //char(i)
     //sGrid1.Objects[4,4]:= bmp;
     {aRect:=Rect(10,10,(I mod 10)* 50,(I div 10) *50+25);
     SGrid1.Canvas.StretchDraw(arect, bmp);}

     SGrid1.Canvas.Draw(((I mod 10)*110), ((I div 10) *110)+25, bmp);
   
   //sGrid1.Font.Size:= 14;
     //bmp.Free;
   end;
   bmp.Free;
end;


Procedure TestResID;
var i: integer;
    img: TImage;
    imagefile: string;
    hfind: integer;
begin
   //Titellines
   Bmp:= TBitmap.Create;
   //for I:= 0 to 15 do 
     //sGrid1.Cells[I+1,0]:= inttoStr(I); 
  //for I:= 1000000 to 2000000 do begin
  for I:= 10 to 2000 do begin
 
     //Imagefile:= ('bmp' + IntToStr(I)+'.bmp');
     //Bmp.loadfromFile(ExePath+RESPATH+Imagefile)   
     //HInstance, 'SampleBitmap
     //Bmp.loadfromRes(HInstance, 'WPI_UNINDENT');
     //hFind := FindResource(HInstance, 'WPI_UNINDENT', 'BITMAP');
     //hFind := FindResource(HInstance, 'WPI_UNINDENT', 'RT_BITMAP');
     
     //Writeln('LoadStr__25: '+LoadStr(64208));
     try
       Bmp.loadfromResourceID(HInstance,i);
       writeln('found '+inttostr(i));   
     except
       //write(inttostr(i)+':');
     end;  
     //bmp.Free;
   end;
   bmp.Free;
end;

Procedure FillASCIIGrid;
var i: integer;
begin
   //Titellines
   for I:= 1 to 255 do begin
     sGrid1.Cells[I ,0]:= inttoStr(I-1);
     sGrid1.Cells[0,(I div 16)+2]:= inttoStr(I+1);//-47);   
   end;   
   //for I:= 0 to 15 do 
     //sGrid1.Cells[I+1,0]:= inttoStr(I);   
   for I:= 32 to 255 do 
     sGrid1.Cells [I mod 16+1, I div 16+1]:= Chr(I);   //char(i)
   sGrid1.Font.Size:= 14;
end;

procedure FillPascalGrid;
var i, c, ct: integer;
begin
  j:= 1; c:= 1;
  ct:= CTRI;
  with sGrid1 do begin
    for i:= 0 to lotNr do begin
      if larr[i] = 1 then begin 
         dec(ct)
         c:= 0;
         repeat 
           if larr[i] <> 0 then  //zero filter
             Cells[ct+c, j]:= intToStr(larr[i]);
           //writeln(inttostr(j)+ ' '+intToStr(larr[i]) +' '+inttostr(i)) debug
           inc(c) //column
           inc(i)
         until c = (2*j-1);
       inc(j)  //row jump
      end
    end;
   Font.Size:= 15;
  end;  
end;


procedure FillPascalTriangle;
var
  num,i,j,k, spacei: integer;
  difffact,diff,n,r,comb,nfact,rfact, ar: integer;
begin
  //maxForm1.Console1Click(self);
  difffact:= 1;
  comb:= 0;
  nfact:= 1;
  rfact:= 1;
  num:= CTRI;
  //ar:= (CTRI -1)/2;
  ar:= 2;
  k:= num-1;
  spacei:= num-1;
  //for(i=0;i<num;i++)
  for i:= 0 to num -1 do begin
    dec(spacei)
    k:= spacei;
   //for(;k>0;k--)
    for k:= k downto 0 do begin
      write('    ')
      larr[ar]:= 0;
      //dec(ar)
      end;
    //for(j=0;j<=i;j++)
    for j:= 0 to i do begin
      comb:= 0;
      nfact:= 1;
      rfact:= 1;
      difffact:= 1;
      //for(n=i;n>=1;n--)
      for n:= i downto 1 do
        nfact:= nfact*n;
      //for(r=j;r>=1;r--)
      for r:= j downto 1 do
        rfact:= rfact*r;
      diff:= i-j;
      //for(;diff>=1;diff--)
      for diff:= diff downto 1 do
        difffact:= difffact*diff;
      comb:= (nfact div (rfact*difffact));      
      if comb > 100 then
      write(format('%.1d    ',[comb])) else
      write(format('%.1d      ',[comb]));
      //if not odd(i) then 
        larr[ar]:= comb //else 
        //larr[ar]:= comb
         ar:= ar + 2
    end;
    writeln('')
  end
end;

function GetBigIntFact(aval: byte): string;
  //unit mybigint
var mbResult: TMyBigInt;
    i: integer;
begin
  mbResult:= TMyBigInt.Create(1);
  try
    for i:= 1  to aval do 
      //mbResult.Multiply(mbresult, mbresult);
      mbResult.Multiply1(mbresult, i);
    Result:= mbResult.ToString;
  finally 
    mbResult.Free;
  end;
end;

function getPermutation(npr, k: integer): extended; 
//2. Permutation(Variation without repeating) = nPr = n!/(n-k)!
begin
  result:= (Fact(npr)/Fact(npr-k));
  //test 4 of 10 = 5040 = NPR(10,4)
end;

function getCombination(npr, k: integer): extended; 
//3. Combination (binominal coefficient)= nCr = nPr / k!
begin
  result:= (Fact(npr)/Fact(npr-k)/Fact(k));
  //ncr:= npr/round(fact(ncr))
  //test 4 of 20 = 4845 = NCR(20,4)
end;


BEGIN  //Main
  {x:= 100; quadrat:= power(x,2); 
  writeln(format('%f', [quadrat]))
  square:= sqrt(quadrat)
  writeln(format('%f', [square]))}

  CreateDrawForm;
  //FillASCIIGrid;
  FillBitmapGrid;
  //SortStringGrid(SGrid1, 1);     //!! just to show a logix with ASCII
  //FillASCIIGrid;
  
  //FillPascalTriangle;
  //FillPascalGrid;
  //NumberGrid;
    
  writeln(floattoStr(getPermutation(45,6)))
  writeln(floattoStr(getCombination(45,6)))
  writeln(floattoStr(getCombination(12,6)))
  writeln('Swap File Size: '+inttoStr(getSwapFileSize))

  (*comblist:= TStringlist.create;
  for i:= 1 to 12 {LotRANGE} do
    comblist.add(Format('case: %d is %f',[i, getCombination(12,i)]))
  for i:= 1 to 12 {LotRANGE} do
    Writeln(comblist[i-1]) 
  comblist.Free;*)
   //TestResID;

  //for i:= 1 to lotnr do 
    //Write(inttostr(larr[i])+ ' ');  //debug
  //Writeln(GetASCII)
 // writeln(sha1('E:\maxbox3\mXGit39991\maxbox3clx.tar.gz'));
 
   //TForm1_GetResButton1Click(self)
   
End. 

A41E81B084DEF49FE0E99A0524AFCCF7854EA321

----------------------------------------------
//teststring     SNCF 15018 TEE Iris la dette du diable
1   12    66    220  495  792  924  792  495  220  66    12    1   

procedure TForm30.btnAscii8Click(Sender: TObject);
var
I: Integer;
begin
ClearGrid;
for I:= 32 to 255 do begin
  StringGrid1.Cells [I mod 16 + 1,
I div 16 + 1 := AnsiChar (I);
end;
end;
In previous versions of Delphi you could obtain the same output by writing
the following simpler version (that uses Char rather than AnsiChar for the
conversion):
for I := 32 to 255 do begin
  StringGrid1.Cells [I mod 16 + 1,
I div 16 + 1] := Char (I);
end;
I don't think I really need to tell you how messy the situation is with the
various ISO 8859 encodings (there are 16 of them, still unable to cover the
more complex alphabets), Windows page codes, multi byte representations
to cover Chinese and other languages. With Unicode, this is all behind us,
even though the new standard has its own complexity and potential problems.

-----------------------------------------------------

  Dealing with Big Numbers (Integers)
  -----------------------------------
  
  As you may know there's no simple solution to print or store big numbers, for example you want to compute fact(70), your calculator shows:
  fact(70) = 1.1978571669969891796072783721689e+100
  
  but the maximum range on Delphi depends on your operating system types, means nowadays an int64 range is the big int.
  Now that the "signed" Words are finally up-to-par with the unsigned integer types, Delphi 4 introduces a new 64-bits integer type, called Int64, with a whopping range of -2^63..2^63 - 1  

 Another way is to use the type extended, but the limitation is precision like
   
    Writeln(FloatToStr(Fact(70)))
 
    it only shows 
    1.2E+0100

With a BigInt Library (bigintlib) you'll see the full range of Fact(70):

11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000
    
The call respectively the calculation goes like this:

function GetBigIntFact(aval: byte): string;
//call of unit mybigint
var mbRes: TMyBigInt;
    i: integer;
begin
  mbRes:= TMyBigInt.Create(1);
  try
    //multiplication of factor
    for i:= 1  to aval do 
      mbRes.Multiply1(mbresult, i);
    Result:= mbRes.ToString;
  finally 
    //FreeAndNil(mbResult);
    mbRes.Free;
  end;
end;
    
Or you want the power of 100        
2^100=
1267650600228229401496703205376
  
The definition of the function could be the following:

function GetBigIntPower(aval: integer): string;
var mbResult: TMyBigInt;
     i: integer;
begin
  mbResult:= TMyBigInt.Create(1);
  try
    for i:= 1 to aval do 
      mbResult.Multiply1(mbresult, 2);
    Result:= mbResult.ToString;
  finally 
    mbResult.Free;
  end;
end;
  
  
At least one really big, it's 2^1000

10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376


the class of the unit from swiss delphi:

  TMyBigInt = class
  private
    Len: Integer;
    Value: AnsiString;
    procedure Trim;
    procedure Shift(k: Integer);
    procedure MultiplyAtom(Multiplier1: TMyBigInt; Multiplier2: Integer);
  public
    constructor Create(iValue: Integer = 0);
    procedure Add(Addend1, Addend2: TMyBigInt);
    procedure Multiply(Multiplier1, Multiplier2: TMyBigInt); overload;
    procedure Multiply(Multiplier1: TMyBigInt; Multiplier2: Integer); overload;
    function ToString: string;
    procedure CopyFrom(mbCopy: TMyBigInt);
  end;
    
    
    
    Warning: At least one delay-load dependency module was not found.
Warning: At least one module has an unresolved import due to a missing export function in a delay-load dependent module.

--------------------------------------------------------------------------------
Starting profile on 11/11/2014 at 08:46:11 PM

Operating System: Microsoft Windows NT/2000/XP/2003/Vista based Ultimate (32-bit), version 6.01.7601 Service Pack 1
Program Executable: c:\windows\system32\NOTEPAD.EXE
Program Arguments: E:\maxbox3\maxbox3\examples\rec_files.txt
Starting Directory: e:\maxbox3\maxbox3\
Search Path: E:\Program Files\CodeGear\RAD Studio\5.0\bin;C:\Users\Public\Documents\RAD Studio\5.0\Bpl;%CommonProgramFiles%\Microsoft Shared\Windows Live;C:\Program Files\PC Connectivity Solution\;E:\Program Files\CodeGear\RAD Studio\6.0\bin;C:\Users\Public\Documents\RAD Studio\6.0\Bpl;E:\Program Files\Borland\Delphi7\Bin;E:\Program Files\Borland\Delphi7\Projects\Bpl\;C:\Program Files\Business Objects\Common\3.5\bin\NOTES\;C:\Program Files\Business Objects\Common\3.5\bin\NOTES\DATA\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;C:\Program Files\Microsoft Visual Studio 9.0\Common7\IDE\PrivateAssemblies\;C:\Program Files\Common Files\Acronis\SnapAPI\;C:\Users\js\Documents\tmssoftware\TMS Component Pack\bpl\;C:\Program Files\RemObjects Software\Everwood\Bin;E:\maxbox3\Pascal Script for Delphi\Dcu\D12;

Options Selected:
     Log DllMain calls for process attach and process detach messages.
     Hook the process to gather more detailed dependency information.
     Log LoadLibrary function calls.
     Log GetProcAddress function calls.
     Log debug output messages.
     Automatically open and profile child processes.
--------------------------------------------------------------------------------

Started "NOTEPAD.EXE" (process 0x1104) at address 0x00BA0000.  Successfully hooked module.
Loaded "NTDLL.DLL" at address 0x77560000.  Successfully hooked module.
Loaded "KERNEL32.DLL" at address 0x75AA0000.  Successfully hooked module.
Loaded "KERNELBASE.DLL" at address 0x75770000.  Successfully hooked module.
DllMain(0x75770000, DLL_PROCESS_ATTACH, 0x00000000) in "KERNELBASE.DLL" called.
DllMain(0x75770000, DLL_PROCESS_ATTACH, 0x00000000) in "KERNELBASE.DLL" returned 1 (0x1).
DllMain(0x75AA0000, DLL_PROCESS_ATTACH, 0x00000000) in "KERNEL32.DLL" called.
DllMain(0x75AA0000, DLL_PROCESS_ATTACH, 0x00000000) in "KERNEL32.DLL" returned 1 (0x1).
Injected "DEPENDS.DLL" at address 0x08370000.
DllMain(0x08370000, DLL_PROCESS_ATTACH, 0x00000000) in "DEPENDS.DLL" called.
DllMain(0x08370000, DLL_PROCESS_ATTACH, 0x00000000) in "DEPENDS.DLL" returned 1 (0x1).
Loaded "ADVAPI32.DLL" at address 0x75FE0000.  Successfully hooked module.
Loaded "MSVCRT.DLL" at address 0x764C0000.  Successfully hooked module.
Loaded "SECHOST.DLL" at address 0x77770000.  Successfully hooked module.
Loaded "RPCRT4.DLL" at address 0x75B80000.  Successfully hooked module.
Loaded "GDI32.DLL" at address 0x762D0000.  Successfully hooked module.
Loaded "USER32.DLL" at address 0x75E30000.  Successfully hooked module.
Loaded "LPK.DLL" at address 0x776C0000.  Successfully hooked module.
Loaded "USP10.DLL" at address 0x76570000.  Successfully hooked module.
Loaded "COMDLG32.DLL" at address 0x75A20000.  Successfully hooked module.
Loaded "SHLWAPI.DLL" at address 0x75D90000.  Successfully hooked module.
Loaded "COMCTL32.DLL" at address 0x745E0000.  Successfully hooked module.
Loaded "SHELL32.DLL" at address 0x767F0000.  Successfully hooked module.
Loaded "WINSPOOL.DRV" at address 0x71550000.  Successfully hooked module.
Loaded "OLE32.DLL" at address 0x75C30000.  Successfully hooked module.
Loaded "OLEAUT32.DLL" at address 0x75F00000.  Successfully hooked module.
Loaded "VERSION.DLL" at address 0x74B50000.  Successfully hooked module.
Entrypoint reached. All implicit modules have been loaded.
DllMain(0x764C0000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "MSVCRT.DLL" called.
DllMain(0x764C0000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "MSVCRT.DLL" returned 1 (0x1).
DllMain(0x75B80000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "RPCRT4.DLL" called.
DllMain(0x75B80000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "RPCRT4.DLL" returned 1975224833 (0x75BB8A01).
DllMain(0x77770000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "SECHOST.DLL" called.
DllMain(0x77770000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "SECHOST.DLL" returned 1 (0x1).
DllMain(0x75FE0000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "ADVAPI32.DLL" called.
DllMain(0x75FE0000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "ADVAPI32.DLL" returned 1 (0x1).
DllMain(0x75E30000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "USER32.DLL" called.
LoadLibraryW("C:\Windows\system32\IMM32.DLL") called from "USER32.DLL" at address 0x75E4E8EB.
Loaded "IMM32.DLL" at address 0x77740000.  Successfully hooked module.
Loaded "MSCTF.DLL" at address 0x76720000.  Successfully hooked module.
DllMain(0x76720000, DLL_PROCESS_ATTACH, 0x00000000) in "MSCTF.DLL" called.
DllMain(0x76720000, DLL_PROCESS_ATTACH, 0x00000000) in "MSCTF.DLL" returned 1 (0x1).
DllMain(0x77740000, DLL_PROCESS_ATTACH, 0x00000000) in "IMM32.DLL" called.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmWINNLSEnableIME") called from "USER32.DLL" at address 0x75E4DC0C and returned 0x77750171.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmWINNLSGetEnableStatus") called from "USER32.DLL" at address 0x75E4DC21 and returned 0x77750198.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSendIMEMessageExW") called from "USER32.DLL" at address 0x75E4DC36 and returned 0x77750426.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSendIMEMessageExA") called from "USER32.DLL" at address 0x75E4DC4B and returned 0x77750441.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmIMPGetIMEW") called from "USER32.DLL" at address 0x75E4DC60 and returned 0x7775069F.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmIMPGetIMEA") called from "USER32.DLL" at address 0x75E4DC75 and returned 0x777506D3.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmIMPQueryIMEW") called from "USER32.DLL" at address 0x75E4DC8A and returned 0x77750504.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmIMPQueryIMEA") called from "USER32.DLL" at address 0x75E4DC9F and returned 0x77750610.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmIMPSetIMEW") called from "USER32.DLL" at address 0x75E4DCB4 and returned 0x77750280.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmIMPSetIMEA") called from "USER32.DLL" at address 0x75E4DCC9 and returned 0x777503A8.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmAssociateContext") called from "USER32.DLL" at address 0x75E4DCDE and returned 0x77743515.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmEscapeA") called from "USER32.DLL" at address 0x75E4DCF3 and returned 0x7774A08A.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmEscapeW") called from "USER32.DLL" at address 0x75E4DD08 and returned 0x7774A309.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetCompositionStringA") called from "USER32.DLL" at address 0x75E4DD1D and returned 0x777484B9.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetCompositionStringW") called from "USER32.DLL" at address 0x75E4DD32 and returned 0x777477B0.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetCompositionWindow") called from "USER32.DLL" at address 0x75E4DD47 and returned 0x77742D44.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetContext") called from "USER32.DLL" at address 0x75E4DD5C and returned 0x7774299D.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetDefaultIMEWnd") called from "USER32.DLL" at address 0x75E4DD71 and returned 0x777427F2.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmIsIME") called from "USER32.DLL" at address 0x75E4DD86 and returned 0x77742CEB.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmReleaseContext") called from "USER32.DLL" at address 0x75E4DD9B and returned 0x77742A67.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmRegisterClient") called from "USER32.DLL" at address 0x75E4DDB0 and returned 0x777425B2.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetCompositionFontW") called from "USER32.DLL" at address 0x75E4DDC5 and returned 0x77746CA3.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetCompositionFontA") called from "USER32.DLL" at address 0x75E4DDDA and returned 0x77746C07.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSetCompositionFontW") called from "USER32.DLL" at address 0x75E4DDEF and returned 0x777447EF.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSetCompositionFontA") called from "USER32.DLL" at address 0x75E4DE04 and returned 0x77746D3F.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSetCompositionWindow") called from "USER32.DLL" at address 0x75E4DE19 and returned 0x77744772.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmNotifyIME") called from "USER32.DLL" at address 0x75E4DE2E and returned 0x777449CD.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmLockIMC") called from "USER32.DLL" at address 0x75E4DE43 and returned 0x77742827.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmUnlockIMC") called from "USER32.DLL" at address 0x75E4DE58 and returned 0x777428A8.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmLoadIME") called from "USER32.DLL" at address 0x75E4DE6D and returned 0x77742FC6.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSetOpenStatus") called from "USER32.DLL" at address 0x75E4DE82 and returned 0x77744D84.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmFreeLayout") called from "USER32.DLL" at address 0x75E4DE97 and returned 0x7774A548.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmActivateLayout") called from "USER32.DLL" at address 0x75E4DEAC and returned 0x77749B87.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetCandidateWindow") called from "USER32.DLL" at address 0x75E4DEC1 and returned 0x77742D87.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSetCandidateWindow") called from "USER32.DLL" at address 0x75E4DED6 and returned 0x77746EB9.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmConfigureIMEW") called from "USER32.DLL" at address 0x75E4DEEB and returned 0x77749EAC.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetConversionStatus") called from "USER32.DLL" at address 0x75E4DF00 and returned 0x777437DC.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSetConversionStatus") called from "USER32.DLL" at address 0x75E4DF15 and returned 0x77744C7D.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSetStatusWindowPos") called from "USER32.DLL" at address 0x75E4DF2A and returned 0x77746E51.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetImeInfoEx") called from "USER32.DLL" at address 0x75E4DF3F and returned 0x77742DD7.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmLockImeDpi") called from "USER32.DLL" at address 0x75E4DF54 and returned 0x77742AC6.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmUnlockImeDpi") called from "USER32.DLL" at address 0x75E4DF69 and returned 0x77742A79.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetOpenStatus") called from "USER32.DLL" at address 0x75E4DF7E and returned 0x77746766.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSetActiveContext") called from "USER32.DLL" at address 0x75E4DF93 and returned 0x77742B63.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmTranslateMessage") called from "USER32.DLL" at address 0x75E4DFA8 and returned 0x7774FDB9.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmLoadLayout") called from "USER32.DLL" at address 0x75E4DFBD and returned 0x77744356.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmProcessKey") called from "USER32.DLL" at address 0x75E4DFD2 and returned 0x777448BF.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmPutImeMenuItemsIntoMappedFile") called from "USER32.DLL" at address 0x75E4DFE7 and returned 0x7775599C.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetProperty") called from "USER32.DLL" at address 0x75E4DFFC and returned 0x77744AF6.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSetCompositionStringA") called from "USER32.DLL" at address 0x75E4E011 and returned 0x77749166.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSetCompositionStringW") called from "USER32.DLL" at address 0x75E4E026 and returned 0x7774918D.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmEnumInputContext") called from "USER32.DLL" at address 0x75E4E03B and returned 0x777440D2.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSystemHandler") called from "USER32.DLL" at address 0x75E4E050 and returned 0x7774BD2A.
GetProcAddress(0x77740000 [IMM32.DLL], "CtfImmTIMActivate") called from "USER32.DLL" at address 0x75E4E061 and returned 0x77742ED6.
GetProcAddress(0x77740000 [IMM32.DLL], "CtfImmRestoreToolbarWnd") called from "USER32.DLL" at address 0x75E4E072 and returned 0x77755C1A.
GetProcAddress(0x77740000 [IMM32.DLL], "CtfImmHideToolbarWnd") called from "USER32.DLL" at address 0x75E4E083 and returned 0x77755C51.
GetProcAddress(0x77740000 [IMM32.DLL], "CtfImmDispatchDefImeMessage") called from "USER32.DLL" at address 0x75E4E094 and returned 0x77741579.
GetProcAddress(0x77740000 [IMM32.DLL], "CtfImmNotify") called from "USER32.DLL" at address 0x75E4E0A5 and returned 0x7774152D.
GetProcAddress(0x77740000 [IMM32.DLL], "CtfImmSetDefaultRemoteKeyboardLayout") called from "USER32.DLL" at address 0x75E4E0B6 and returned 0x77755EB7.
GetProcAddress(0x77740000 [IMM32.DLL], "CtfImmGetCompatibleKeyboardLayout") called from "USER32.DLL" at address 0x75E4E0C7 and returned 0x77755EC7.
DllMain(0x77740000, DLL_PROCESS_ATTACH, 0x00000000) in "IMM32.DLL" returned 1 (0x1).
LoadLibraryW("C:\Windows\system32\IMM32.DLL") returned 0x77740000.
GetProcAddress(0x776C0000 [LPK.DLL], "LpkTabbedTextOut") called from "GDI32.DLL" at address 0x762D9FDD and returned 0x776C54F3.
GetProcAddress(0x776C0000 [LPK.DLL], "LpkPSMTextOut") called from "GDI32.DLL" at address 0x762D9FE8 and returned 0x776C4251.
GetProcAddress(0x776C0000 [LPK.DLL], "LpkDrawTextEx") called from "GDI32.DLL" at address 0x762D9FF3 and returned 0x776C1770.
GetProcAddress(0x776C0000 [LPK.DLL], "LpkEditControl") called from "GDI32.DLL" at address 0x762D9FFE and returned 0x776C706C.
DllMain(0x75E30000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "USER32.DLL" returned 1 (0x1).
DllMain(0x76570000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "USP10.DLL" called.
LoadLibraryA("gdi32.dll") called from "USP10.DLL" at address 0x76586010.
LoadLibraryA("gdi32.dll") returned 0x762D0000.
GetProcAddress(0x762D0000 [GDI32.DLL], "GetCharABCWidthsI") called from "USP10.DLL" at address 0x76586045 and returned 0x762DBD76.
DllMain(0x76570000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "USP10.DLL" returned 1 (0x1).
DllMain(0x776C0000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "LPK.DLL" called.
DllMain(0x776C0000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "LPK.DLL" returned 1 (0x1).
DllMain(0x762D0000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "GDI32.DLL" called.
DllMain(0x762D0000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "GDI32.DLL" returned 1 (0x1).
DllMain(0x75D90000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "SHLWAPI.DLL" called.
DllMain(0x75D90000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "SHLWAPI.DLL" returned 1 (0x1).
DllMain(0x745E0000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "COMCTL32.DLL" called.
GetProcAddress(0x776C0000 [LPK.DLL], "LpkEditControl") called from "COMCTL32.DLL" at address 0x7460E933 and returned 0x776C706C.
DllMain(0x745E0000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "COMCTL32.DLL" returned 1 (0x1).
DllMain(0x767F0000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "SHELL32.DLL" called.
DllMain(0x767F0000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "SHELL32.DLL" returned 1 (0x1).
DllMain(0x75A20000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "COMDLG32.DLL" called.
DllMain(0x75A20000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "COMDLG32.DLL" returned 1 (0x1).
DllMain(0x71550000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "WINSPOOL.DRV" called.
GetProcAddress(0x71550000 [WINSPOOL.DRV], 0x000000DA) called from "WINSPOOL.DRV" at address 0x71567C7F and returned 0x7156114B.
GetProcAddress(0x71550000 [WINSPOOL.DRV], 0x000000D9) called from "WINSPOOL.DRV" at address 0x71567C8C and returned 0x7156F6CA.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "SetDefaultPrinterW") called from "WINSPOOL.DRV" at address 0x71567C97 and returned 0x7156BD1C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "GetDefaultPrinterW") called from "WINSPOOL.DRV" at address 0x71567CA2 and returned 0x7156B8A5.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "GetPrinterDriverPackagePathW") called from "WINSPOOL.DRV" at address 0x71567CAD and returned 0x71574EE4.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "CorePrinterDriverInstalledW") called from "WINSPOOL.DRV" at address 0x71567CB8 and returned 0x71574DB4.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "GetCorePrinterDriversW") called from "WINSPOOL.DRV" at address 0x71567CC3 and returned 0x71574C24.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "UploadPrinterDriverPackageW") called from "WINSPOOL.DRV" at address 0x71567CCE and returned 0x71575144.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "InstallPrinterDriverFromPackageW") called from "WINSPOOL.DRV" at address 0x71567CD9 and returned 0x71574B04.
GetProcAddress(0x71550000 [WINSPOOL.DRV], 0x000000FB) called from "WINSPOOL.DRV" at address 0x71567CE4 and returned 0x71574218.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AddPrinterConnection2W") called from "WINSPOOL.DRV" at address 0x71567CEF and returned 0x71573D24.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "OpenPrinter2W") called from "WINSPOOL.DRV" at address 0x71567CFA and returned 0x7156C844.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeletePrinterKeyW") called from "WINSPOOL.DRV" at address 0x71567D05 and returned 0x7155DB90.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeletePrinterDataExW") called from "WINSPOOL.DRV" at address 0x71567D10 and returned 0x7155DAB0.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "EnumPrinterKeyW") called from "WINSPOOL.DRV" at address 0x71567D1B and returned 0x7155D8E0.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "EnumPrinterDataExW") called from "WINSPOOL.DRV" at address 0x71567D26 and returned 0x7155D748.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "GetPrinterDataExW") called from "WINSPOOL.DRV" at address 0x71567D31 and returned 0x7155D278.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "SetPrinterDataExW") called from "WINSPOOL.DRV" at address 0x71567D3C and returned 0x7155DD50.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeletePrinterDataW") called from "WINSPOOL.DRV" at address 0x71567D47 and returned 0x7155D9D8.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "EnumPrinterDataW") called from "WINSPOOL.DRV" at address 0x71567D52 and returned 0x7155D624.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "SpoolerPrinterEvent") called from "WINSPOOL.DRV" at address 0x71567D5D and returned 0x71565694.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "SetPortW") called from "WINSPOOL.DRV" at address 0x71567D68 and returned 0x7156037A.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DocumentPropertySheets") called from "WINSPOOL.DRV" at address 0x71567D73 and returned 0x715673D3.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DevicePropertySheets") called from "WINSPOOL.DRV" at address 0x71567D7E and returned 0x71567165.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "IsValidDevmodeW") called from "WINSPOOL.DRV" at address 0x71567D89 and returned 0x71560D77.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "IsValidDevmodeA") called from "WINSPOOL.DRV" at address 0x71567D94 and returned 0x71558EA0.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AddPortExW") called from "WINSPOOL.DRV" at address 0x71567D9F and returned 0x7155F98C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeletePrintProvidorW") called from "WINSPOOL.DRV" at address 0x71567DAA and returned 0x715640CC.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AddPrintProvidorW") called from "WINSPOOL.DRV" at address 0x71567DB5 and returned 0x7155F612.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeletePrintProcessorW") called from "WINSPOOL.DRV" at address 0x71567DC0 and returned 0x71564014.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeleteMonitorW") called from "WINSPOOL.DRV" at address 0x71567DCB and returned 0x71563F5C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AddMonitorW") called from "WINSPOOL.DRV" at address 0x71567DD6 and returned 0x71563E8C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "StartDocDlgW") called from "WINSPOOL.DRV" at address 0x71567DE4 and returned 0x7156416C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AdvancedDocumentPropertiesW") called from "WINSPOOL.DRV" at address 0x71567DF2 and returned 0x7155E529.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AdvancedDocumentPropertiesA") called from "WINSPOOL.DRV" at address 0x71567E00 and returned 0x7155A732.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DocumentPropertiesW") called from "WINSPOOL.DRV" at address 0x71567E0E and returned 0x71565C54.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeviceCapabilitiesW") called from "WINSPOOL.DRV" at address 0x71567E19 and returned 0x71565DAC.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeletePrinterIC") called from "WINSPOOL.DRV" at address 0x71567E27 and returned 0x7155F4E4.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "PlayGdiScriptOnPrinterIC") called from "WINSPOOL.DRV" at address 0x71567E35 and returned 0x7155F454.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "CreatePrinterIC") called from "WINSPOOL.DRV" at address 0x71567E43 and returned 0x7155F33F.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "SetJobW") called from "WINSPOOL.DRV" at address 0x71567E51 and returned 0x7155B310.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "GetJobW") called from "WINSPOOL.DRV" at address 0x71567E5F and returned 0x71561420.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "EnumJobsW") called from "WINSPOOL.DRV" at address 0x71567E6D and returned 0x715615B8.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AddPrinterW") called from "WINSPOOL.DRV" at address 0x71567E7B and returned 0x71561758.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "SetPrinterW") called from "WINSPOOL.DRV" at address 0x71567E89 and returned 0x7155B56C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "GetPrinterDriverW") called from "WINSPOOL.DRV" at address 0x71567E97 and returned 0x71562458.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "GetPrinterDriverDirectoryW") called from "WINSPOOL.DRV" at address 0x71567EA5 and returned 0x7156274C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "EnumPrintersW") called from "WINSPOOL.DRV" at address 0x71567EB3 and returned 0x71556CA7.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AddPrinterConnectionW") called from "WINSPOOL.DRV" at address 0x71567EC1 and returned 0x71573534.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeletePrinterConnectionW") called from "WINSPOOL.DRV" at address 0x71567ECF and returned 0x71573BB8.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AddPrinterDriverExW") called from "WINSPOOL.DRV" at address 0x71567EDD and returned 0x71561AF0.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AddPrinterDriverExA") called from "WINSPOOL.DRV" at address 0x71567EEB and returned 0x71557B68.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "EnumPrinterDriversW") called from "WINSPOOL.DRV" at address 0x71567EF9 and returned 0x71556F8D.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeletePrinterDriverW") called from "WINSPOOL.DRV" at address 0x71567F07 and returned 0x7156292C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeletePrinterDriverExW") called from "WINSPOOL.DRV" at address 0x71567F15 and returned 0x7156286C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AddPrintProcessorW") called from "WINSPOOL.DRV" at address 0x71567F23 and returned 0x715629E4.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "EnumPrintProcessorsW") called from "WINSPOOL.DRV" at address 0x71567F31 and returned 0x71562AAC.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "GetPrintProcessorDirectoryW") called from "WINSPOOL.DRV" at address 0x71567F3F and returned 0x71562B8C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "EnumPrintProcessorDatatypesW") called from "WINSPOOL.DRV" at address 0x71567F4D and returned 0x7155BFF4.
GetProcAddress(0x71550000 [WINSPOOL.DRV], 0x000000CF) called from "WINSPOOL.DRV" at address 0x71567F5B and returned 0x7155BDBD.
GetProcAddress(0x71550000 [WINSPOOL.DRV], 0x000000D1) called from "WINSPOOL.DRV" at address 0x71567F69 and returned 0x7155BE84.
GetProcAddress(0x71550000 [WINSPOOL.DRV], 0x000000D3) called from "WINSPOOL.DRV" at address 0x71567F77 and returned 0x7155BF2C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], 0x000000D4) called from "WINSPOOL.DRV" at address 0x71567F85 and returned 0x7155E29C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "SplDriverUnloadComplete") called from "WINSPOOL.DRV" at address 0x71567F93 and returned 0x7155DE48.
GetProcAddress(0x71550000 [WINSPOOL.DRV], 0x000000D5) called from "WINSPOOL.DRV" at address 0x71567FA1 and returned 0x7155E078.
GetProcAddress(0x71550000 [WINSPOOL.DRV], 0x000000D6) called from "WINSPOOL.DRV" at address 0x71567FAF and returned 0x7155E11C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "OpenPrinterW") called from "WINSPOOL.DRV" at address 0x71567FBD and returned 0x715568F0.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "OpenPrinterA") called from "WINSPOOL.DRV" at address 0x71567FCB and returned 0x715574D6.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "ResetPrinterW") called from "WINSPOOL.DRV" at address 0x71567FD9 and returned 0x71561294.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "StartDocPrinterW") called from "WINSPOOL.DRV" at address 0x71567FE7 and returned 0x71562C8C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "FlushPrinter") called from "WINSPOOL.DRV" at address 0x71567FF5 and returned 0x7155C540.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "GetPrinterDataW") called from "WINSPOOL.DRV" at address 0x71568003 and returned 0x7155D069.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "SetPrinterDataW") called from "WINSPOOL.DRV" at address 0x71568011 and returned 0x7155DC68.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AddJobW") called from "WINSPOOL.DRV" at address 0x7156801F and returned 0x71563888.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "ScheduleJob") called from "WINSPOOL.DRV" at address 0x7156802D and returned 0x71563B70.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "WaitForPrinterChange") called from "WINSPOOL.DRV" at address 0x7156803B and returned 0x7156B2B4.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "FindNextPrinterChangeNotification") called from "WINSPOOL.DRV" at address 0x71568049 and returned 0x7156AFBE.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "PrinterMessageBoxW") called from "WINSPOOL.DRV" at address 0x71568057 and returned 0x7155F60C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "ClosePrinter") called from "WINSPOOL.DRV" at address 0x71568065 and returned 0x7156CAE7.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AddFormW") called from "WINSPOOL.DRV" at address 0x71568073 and returned 0x7155E654.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeleteFormW") called from "WINSPOOL.DRV" at address 0x71568081 and returned 0x7155E780.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "GetFormW") called from "WINSPOOL.DRV" at address 0x7156808F and returned 0x7155E880.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "SetFormW") called from "WINSPOOL.DRV" at address 0x7156809D and returned 0x7155E9F0.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "EnumFormsW") called from "WINSPOOL.DRV" at address 0x715680AB and returned 0x7155EB10.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "EnumPortsW") called from "WINSPOOL.DRV" at address 0x715680B9 and returned 0x7155EC80.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "EnumMonitorsW") called from "WINSPOOL.DRV" at address 0x715680C7 and returned 0x7155EDEC.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "AddPortW") called from "WINSPOOL.DRV" at address 0x715680D5 and returned 0x71566014.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "ConfigurePortW") called from "WINSPOOL.DRV" at address 0x715680E3 and returned 0x7156626C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeletePortW") called from "WINSPOOL.DRV" at address 0x715680F1 and returned 0x715664CC.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "GetPrinterW") called from "WINSPOOL.DRV" at address 0x715680FF and returned 0x7155BA00.
GetProcAddress(0x71550000 [WINSPOOL.DRV], "DeletePrinterDriverPackageW") called from "WINSPOOL.DRV" at address 0x7156810D and returned 0x7157503C.
GetProcAddress(0x71550000 [WINSPOOL.DRV], 0x000000EA) called from "WINSPOOL.DRV" at address 0x7156811B and returned 0x71562485.
DllMain(0x71550000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "WINSPOOL.DRV" returned 1 (0x1).
DllMain(0x75C30000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "OLE32.DLL" called.
DllMain(0x75C30000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "OLE32.DLL" returned 1 (0x1).
DllMain(0x75F00000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "OLEAUT32.DLL" called.
DllMain(0x75F00000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "OLEAUT32.DLL" returned 1 (0x1).
DllMain(0x74B50000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "VERSION.DLL" called.
DllMain(0x74B50000, DLL_PROCESS_ATTACH, 0x0010F8F4) in "VERSION.DLL" returned 1 (0x1).
Loaded "CRYPTBASE.DLL" at address 0x75680000.  Successfully hooked module.
DllMain(0x75680000, DLL_PROCESS_ATTACH, 0x00000000) in "CRYPTBASE.DLL" called.
DllMain(0x75680000, DLL_PROCESS_ATTACH, 0x00000000) in "CRYPTBASE.DLL" returned 1 (0x1).
LoadLibraryExW("C:\Windows\system32\uxtheme.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) called from "USER32.DLL" at address 0x75E3EFDC.
Loaded "UXTHEME.DLL" at address 0x74460000.  Successfully hooked module.
DllMain(0x74460000, DLL_PROCESS_ATTACH, 0x00000000) in "UXTHEME.DLL" called.
DllMain(0x74460000, DLL_PROCESS_ATTACH, 0x00000000) in "UXTHEME.DLL" returned 1 (0x1).
LoadLibraryExW("C:\Windows\system32\uxtheme.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) returned 0x74460000.
GetProcAddress(0x74460000 [UXTHEME.DLL], "ThemeInitApiHook") called from "USER32.DLL" at address 0x75E3F01C and returned 0x7446B176.
LoadLibraryExW("C:\Windows\system32\uxtheme.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) called from "USER32.DLL" at address 0x75E3EFDC.
LoadLibraryExW("C:\Windows\system32\uxtheme.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) returned 0x74460000.
GetProcAddress(0x74460000 [UXTHEME.DLL], "ThemeInitApiHook") called from "USER32.DLL" at address 0x75E3F01C and returned 0x7446B176.
GetProcAddress(0x75E30000 [USER32.DLL], "IsProcessDPIAware") called from "UXTHEME.DLL" at address 0x7446B4EA and returned 0x75E4212E.
LoadLibraryExW("C:\Windows\system32\uxtheme.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) called from "USER32.DLL" at address 0x75E3EFDC.
LoadLibraryExW("C:\Windows\system32\uxtheme.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) returned 0x74460000.
GetProcAddress(0x74460000 [UXTHEME.DLL], "ThemeInitApiHook") called from "USER32.DLL" at address 0x75E3F01C and returned 0x7446B176.
LoadLibraryExW("C:\Windows\system32\uxtheme.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) called from "USER32.DLL" at address 0x75E3EFDC.
LoadLibraryExW("C:\Windows\system32\uxtheme.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) returned 0x74460000.
GetProcAddress(0x74460000 [UXTHEME.DLL], "ThemeInitApiHook") called from "USER32.DLL" at address 0x75E3F01C and returned 0x7446B176.
LoadLibraryExW("C:\Program Files\SweetIM\Messenger\mgAdaptersProxy.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) called from "USER32.DLL" at address 0x75E3EFDC.
Loaded "MGADAPTERSPROXY.DLL" at address 0x10000000.  Successfully hooked module.
Loaded "MSVCR71.DLL" at address 0x7C360000.  Successfully hooked module.
DllMain(0x7C360000, DLL_PROCESS_ATTACH, 0x00000000) in "MSVCR71.DLL" called.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "InitializeCriticalSectionAndSpinCount") called from "MSVCR71.DLL" at address 0x7C361705 and returned 0x75AEEA21.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "FlsAlloc") called from "MSVCR71.DLL" at address 0x7C3617AA and returned 0x75AEF189.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "FlsGetValue") called from "MSVCR71.DLL" at address 0x7C3617B7 and returned 0x75AF6C4F.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "FlsSetValue") called from "MSVCR71.DLL" at address 0x7C3617C4 and returned 0x75AF6C67.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "FlsFree") called from "MSVCR71.DLL" at address 0x7C3617D1 and returned 0x75AFB7C5.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "IsProcessorFeaturePresent") called from "MSVCR71.DLL" at address 0x7C36217F and returned 0x75AF6C1E.
DllMain(0x7C360000, DLL_PROCESS_ATTACH, 0x00000000) in "MSVCR71.DLL" returned 1 (0x1).
DllMain(0x10000000, DLL_PROCESS_ATTACH, 0x00000000) in "MGADAPTERSPROXY.DLL" called.
DllMain(0x10000000, DLL_PROCESS_ATTACH, 0x00000000) in "MGADAPTERSPROXY.DLL" returned 1 (0x1).
LoadLibraryExW("C:\Program Files\SweetIM\Messenger\mgAdaptersProxy.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) returned 0x10000000.
LoadLibraryExW("C:\Program Files\Unlocker\UnlockerHook.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) called from "USER32.DLL" at address 0x75E3EFDC.
Loaded "UNLOCKERHOOK.DLL" at address 0x00140000.  Successfully hooked module.
DllMain(0x00140000, DLL_PROCESS_ATTACH, 0x00000000) in "UNLOCKERHOOK.DLL" called.
DllMain(0x00140000, DLL_PROCESS_ATTACH, 0x00000000) in "UNLOCKERHOOK.DLL" returned 1 (0x1).
LoadLibraryExW("C:\Program Files\Unlocker\UnlockerHook.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) returned 0x00140000.
LoadLibraryExW("C:\Program Files\Logitech\SetPoint\lgscroll.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) called from "USER32.DLL" at address 0x75E3EFDC.
Loaded "LGSCROLL.DLL" at address 0x10100000.  Successfully hooked module.
Loaded "MSVCR80.DLL" at address 0x715B0000.  Successfully hooked module.
DllMain(0x715B0000, DLL_PROCESS_ATTACH, 0x00000000) in "MSVCR80.DLL" called.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "FlsAlloc") called from "MSVCR80.DLL" at address 0x715B3001 and returned 0x75AEF189.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "FlsGetValue") called from "MSVCR80.DLL" at address 0x715B300E and returned 0x75AF6C4F.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "FlsSetValue") called from "MSVCR80.DLL" at address 0x715B301B and returned 0x75AF6C67.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "FlsFree") called from "MSVCR80.DLL" at address 0x715B3028 and returned 0x75AFB7C5.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "EncodePointer") called from "MSVCR80.DLL" at address 0x715B2BBC and returned 0x775BA295.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "EncodePointer") called from "MSVCR80.DLL" at address 0x715B2BBC and returned 0x775BA295.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "EncodePointer") called from "MSVCR80.DLL" at address 0x715B2BBC and returned 0x775BA295.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "EncodePointer") called from "MSVCR80.DLL" at address 0x715B2BBC and returned 0x775BA295.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "EncodePointer") called from "MSVCR80.DLL" at address 0x715B2BBC and returned 0x775BA295.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "EncodePointer") called from "MSVCR80.DLL" at address 0x715B2BBC and returned 0x775BA295.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "EncodePointer") called from "MSVCR80.DLL" at address 0x715B2BBC and returned 0x775BA295.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "InitializeCriticalSectionAndSpinCount") called from "MSVCR80.DLL" at address 0x715B9668 and returned 0x75AEEA21.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "EncodePointer") called from "MSVCR80.DLL" at address 0x715B2BBC and returned 0x775BA295.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "EncodePointer") called from "MSVCR80.DLL" at address 0x715B2D3A and returned 0x775BA295.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2D4A and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "IsProcessorFeaturePresent") called from "MSVCR80.DLL" at address 0x715CA967 and returned 0x75AF6C1E.
GetProcAddress(0x764C0000 [MSVCRT.DLL], "_set_error_mode") called from "MSVCR80.DLL" at address 0x715B4447 and returned 0x764D4A3D.
GetProcAddress(0x764C0000 [MSVCRT.DLL], "?set_terminate@@YAP6AXXZP6AXXZ@Z") called from "MSVCR80.DLL" at address 0x715B4463 and returned 0x764EEBB7.
GetProcAddress(0x764C0000 [MSVCRT.DLL], "_get_terminate") called from "MSVCR80.DLL" at address 0x715B447F and returned NULL. Error: Die angegebene Prozedur wurde nicht gefunden (127).
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "FindActCtxSectionStringW") called from "MSVCR80.DLL" at address 0x715B1DBE and returned 0x75AFB7D2.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "GetSystemWindowsDirectoryW") called from "MSVCR80.DLL" at address 0x715B1F1A and returned 0x75AEEE93.
DllMain(0x715B0000, DLL_PROCESS_ATTACH, 0x00000000) in "MSVCR80.DLL" returned 1 (0x1).
DllMain(0x10100000, DLL_PROCESS_ATTACH, 0x00000000) in "LGSCROLL.DLL" called.
LoadLibraryW("ntmarta.dll") called from "ADVAPI32.DLL" at address 0x75FF28AC.
Loaded "NTMARTA.DLL" at address 0x73D60000.  Successfully hooked module.
Loaded "WLDAP32.DLL" at address 0x75F90000.  Successfully hooked module.
DllMain(0x75F90000, DLL_PROCESS_ATTACH, 0x00000000) in "WLDAP32.DLL" called.
DllMain(0x75F90000, DLL_PROCESS_ATTACH, 0x00000000) in "WLDAP32.DLL" returned 1 (0x1).
DllMain(0x73D60000, DLL_PROCESS_ATTACH, 0x00000000) in "NTMARTA.DLL" called.
DllMain(0x73D60000, DLL_PROCESS_ATTACH, 0x00000000) in "NTMARTA.DLL" returned 1 (0x1).
LoadLibraryW("ntmarta.dll") returned 0x73D60000.
GetProcAddress(0x73D60000 [NTMARTA.DLL], "GetMartaExtensionInterface") called from "ADVAPI32.DLL" at address 0x75FF28C2 and returned 0x73D621F2.
DllMain(0x10100000, DLL_PROCESS_ATTACH, 0x00000000) in "LGSCROLL.DLL" returned 1 (0x1).
LoadLibraryExW("C:\Program Files\Logitech\SetPoint\lgscroll.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) returned 0x10100000.
LoadLibraryExA("dwmapi.dll", 0x00000000, 0x00000000) called from "UXTHEME.DLL" at address 0x7446C437.
Loaded "DWMAPI.DLL" at address 0x74130000.  Successfully hooked module.
DllMain(0x74130000, DLL_PROCESS_ATTACH, 0x00000000) in "DWMAPI.DLL" called.
DllMain(0x74130000, DLL_PROCESS_ATTACH, 0x00000000) in "DWMAPI.DLL" returned 1 (0x1).
LoadLibraryExA("dwmapi.dll", 0x00000000, 0x00000000) returned 0x74130000.
GetProcAddress(0x74130000 [DWMAPI.DLL], "DwmIsCompositionEnabled") called from "UXTHEME.DLL" at address 0x7446C3DB and returned 0x74131610.
GetProcAddress(0x74130000 [DWMAPI.DLL], "DwmGetWindowAttribute") called from "UXTHEME.DLL" at address 0x7446C3DB and returned 0x74131C76.
GetProcAddress(0x762D0000 [GDI32.DLL], "GetLayout") called from "USP10.DLL" at address 0x76584436 and returned 0x762D7040.
GetProcAddress(0x762D0000 [GDI32.DLL], "GdiRealizationInfo") called from "USP10.DLL" at address 0x76579A02 and returned 0x762D7C22.
GetProcAddress(0x762D0000 [GDI32.DLL], "FontIsLinked") called from "USP10.DLL" at address 0x7657D836 and returned 0x762DBD9A.
LoadLibraryExA("ADVAPI32.dll", 0x00000000, 0x00000000) called from "USP10.DLL" at address 0x765A3A9F.
LoadLibraryExA("ADVAPI32.dll", 0x00000000, 0x00000000) returned 0x75FE0000.
GetProcAddress(0x75FE0000 [ADVAPI32.DLL], "RegOpenKeyExW") called from "USP10.DLL" at address 0x765A3B2F and returned 0x75FF468D.
GetProcAddress(0x75FE0000 [ADVAPI32.DLL], "RegQueryInfoKeyW") called from "USP10.DLL" at address 0x765A3B2F and returned 0x75FF46E7.
GetProcAddress(0x762D0000 [GDI32.DLL], "GetTextFaceAliasW") called from "USP10.DLL" at address 0x7657CDAA and returned 0x762DBDC8.
GetProcAddress(0x75FE0000 [ADVAPI32.DLL], "RegEnumValueW") called from "USP10.DLL" at address 0x765A3B2F and returned 0x75FF48CC.
GetProcAddress(0x75FE0000 [ADVAPI32.DLL], "RegCloseKey") called from "USP10.DLL" at address 0x765A3B2F and returned 0x75FF469D.
GetProcAddress(0x75FE0000 [ADVAPI32.DLL], "RegQueryValueExW") called from "USP10.DLL" at address 0x765A3B2F and returned 0x75FF46AD.
GetProcAddress(0x75FE0000 [ADVAPI32.DLL], "RegQueryValueExW") called from "USP10.DLL" at address 0x765A3B2F and returned 0x75FF46AD.
GetProcAddress(0x762D0000 [GDI32.DLL], "GetFontAssocStatus") called from "USP10.DLL" at address 0x76584476 and returned 0x762DBDAE.
GetProcAddress(0x75FE0000 [ADVAPI32.DLL], "RegQueryValueExA") called from "USP10.DLL" at address 0x765A3B2F and returned 0x75FF48EF.
GetProcAddress(0x75FE0000 [ADVAPI32.DLL], "RegEnumKeyExW") called from "USP10.DLL" at address 0x765A3B2F and returned 0x75FF46C8.
GetProcAddress(0x762D0000 [GDI32.DLL], "GetTextFaceAliasW") called from "USP10.DLL" at address 0x76581A7C and returned 0x762DBDC8.
LoadLibraryW("comctl32.dll") called from "USER32.DLL" at address 0x75E38A4F.
LoadLibraryW("comctl32.dll") returned 0x745E0000.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "RegisterClassNameW") called from "USER32.DLL" at address 0x75E38A67 and returned 0x745F1339.
LoadLibraryExA("UxTheme.dll", 0x00000000, 0x00000000) called from "COMCTL32.DLL" at address 0x7460F347.
LoadLibraryExA("UxTheme.dll", 0x00000000, 0x00000000) returned 0x74460000.
GetProcAddress(0x74460000 [UXTHEME.DLL], "OpenThemeData") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x744673D2.
GetProcAddress(0x74460000 [UXTHEME.DLL], "GetThemeBool") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x74467C1F.
GetProcAddress(0x74460000 [UXTHEME.DLL], "GetThemeBool") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x74467C1F.
LoadLibraryExA("IMM32.dll", 0x00000000, 0x00000000) called from "COMCTL32.DLL" at address 0x7460F347.
LoadLibraryExA("IMM32.dll", 0x00000000, 0x00000000) returned 0x77740000.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmIsIME") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x77742CEB.
LoadLibraryW("comctl32") called from "UXTHEME.DLL" at address 0x74469FC4.
LoadLibraryW("comctl32") returned 0x745E0000.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "HIMAGELIST_QueryInterface") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x7461099D.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "DrawShadowText") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x7460AB99.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "DrawSizeBox") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x7467578D.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "DrawScrollBar") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x7460F954.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "SizeBoxHwnd") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x7466BEAB.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "ScrollBar_MouseMove") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x7462DBA9.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "ScrollBar_Menu") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x746C436E.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "HandleScrollCmd") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x746C433D.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "DetachScrollBars") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x7460BE61.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "AttachScrollBars") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x746301AE.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "CCSetScrollInfo") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x746152B9.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "CCGetScrollInfo") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x7460FB5E.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "CCEnableScrollBar") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x7467B157.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "QuerySystemGestureStatus") called from "UXTHEME.DLL" at address 0x7446A108 and returned 0x746C3793.
GetProcAddress(0x74460000 [UXTHEME.DLL], 0x00000031) called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x74466AE1.
GetProcAddress(0x74460000 [UXTHEME.DLL], "CloseThemeData") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x74466A18.
GetProcAddress(0x74460000 [UXTHEME.DLL], "DrawThemeBackground") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x74463982.
GetProcAddress(0x74460000 [UXTHEME.DLL], "DrawThemeBackground") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x74463982.
LoadLibraryW("comctl32.dll") called from "USER32.DLL" at address 0x75E38A4F.
LoadLibraryW("comctl32.dll") returned 0x745E0000.
GetProcAddress(0x745E0000 [COMCTL32.DLL], "RegisterClassNameW") called from "USER32.DLL" at address 0x75E38A67 and returned 0x745F1339.
GetProcAddress(0x74460000 [UXTHEME.DLL], "GetThemeTextMetrics") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x7446F992.
GetProcAddress(0x74460000 [UXTHEME.DLL], "GetThemePartSize") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x7446CDB1.
GetProcAddress(0x74460000 [UXTHEME.DLL], "GetThemeMargins") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x744686E9.
GetProcAddress(0x762D0000 [GDI32.DLL], "GdiIsMetaPrintDC") called from "USP10.DLL" at address 0x76597B36 and returned 0x762D8D55.
LoadLibraryW("C:\Windows\system32\ole32.dll") called from "IMM32.DLL" at address 0x77743F1B.
LoadLibraryW("C:\Windows\system32\ole32.dll") returned 0x75C30000.
GetProcAddress(0x75C30000 [OLE32.DLL], "CoInitializeEx") called from "IMM32.DLL" at address 0x77743F68 and returned 0x75C709AD.
GetProcAddress(0x75C30000 [OLE32.DLL], "CoUninitialize") called from "IMM32.DLL" at address 0x77743F68 and returned 0x75C786D3.
GetProcAddress(0x75C30000 [OLE32.DLL], "CoRegisterInitializeSpy") called from "IMM32.DLL" at address 0x77743F68 and returned 0x75C77660.
GetProcAddress(0x75C30000 [OLE32.DLL], "CoRevokeInitializeSpy") called from "IMM32.DLL" at address 0x77743F68 and returned 0x75C79784.
LoadLibraryExW("C:\Windows\system32\MSCTF.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) called from "USER32.DLL" at address 0x75E3EFDC.
LoadLibraryExW("C:\Windows\system32\MSCTF.dll", 0x00000000, LOAD_WITH_ALTERED_SEARCH_PATH) returned 0x76720000.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetContext") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x7774299D.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmReleaseContext") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x77742A67.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmLockIMC") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x77742827.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmUnlockIMC") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x777428A8.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSetCompositionFontW") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x777447EF.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmGetCompositionWindow") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x77742D44.
GetProcAddress(0x77740000 [IMM32.DLL], "ImmSetCompositionWindow") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x77744772.
LoadLibraryExA("ole32.dll", 0x00000000, 0x00000000) called from "SHLWAPI.DLL" at address 0x75DA4F0C.
LoadLibraryExA("ole32.dll", 0x00000000, 0x00000000) returned 0x75C30000.
GetProcAddress(0x75C30000 [OLE32.DLL], "CoTaskMemAlloc") called from "SHLWAPI.DLL" at address 0x75DA4F70 and returned 0x75C7EA4C.
LoadLibraryW("comctl32.dll") called from "SHELL32.DLL" at address 0x76862464.
LoadLibraryW("comctl32.dll") returned 0x745E0000.
LoadLibraryW("comctl32.dll") called from "SHELL32.DLL" at address 0x76862464.
LoadLibraryW("comctl32.dll") returned 0x745E0000.
LoadLibraryExA("SHELL32.dll", 0x00000000, 0x00000000) called from "SHLWAPI.DLL" at address 0x75DA4F0C.
LoadLibraryExA("SHELL32.dll", 0x00000000, 0x00000000) returned 0x767F0000.
GetProcAddress(0x767F0000 [SHELL32.DLL], 0x00000066) called from "SHLWAPI.DLL" at address 0x75DA4F70 and returned 0x7688B799.
LoadLibraryExA("ADVAPI32.dll", 0x00000000, 0x00000000) called from "SHLWAPI.DLL" at address 0x75DA4F0C.
LoadLibraryExA("ADVAPI32.dll", 0x00000000, 0x00000000) returned 0x75FE0000.
GetProcAddress(0x75FE0000 [ADVAPI32.DLL], "OpenThreadToken") called from "SHLWAPI.DLL" at address 0x75DA4F70 and returned 0x75FF432C.
GetProcAddress(0x75C30000 [OLE32.DLL], "CoTaskMemFree") called from "SHLWAPI.DLL" at address 0x75DA4F70 and returned 0x75C86F41.
GetProcAddress(0x74460000 [UXTHEME.DLL], "IsThemeBackgroundPartiallyTransparent") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x744660AB.
GetProcAddress(0x74460000 [UXTHEME.DLL], "DrawThemeParentBackgroundEx") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x744651BF.
GetProcAddress(0x74460000 [UXTHEME.DLL], "GetThemeTransitionDuration") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x74471081.
GetProcAddress(0x74460000 [UXTHEME.DLL], "GetThemeBackgroundContentRect") called from "COMCTL32.DLL" at address 0x7460F2FC and returned 0x7446CD2E.
LoadLibraryW("OLEAUT32.DLL") called from "MSCTF.DLL" at address 0x76784DD8.
LoadLibraryW("OLEAUT32.DLL") returned 0x75F00000.
GetProcAddress(0x75F00000 [OLEAUT32.DLL], "SysAllocString") called from "MSCTF.DLL" at address 0x76784DFD and returned 0x75F04642.
GetProcAddress(0x75F00000 [OLEAUT32.DLL], "SysStringLen") called from "MSCTF.DLL" at address 0x76784F25 and returned 0x75F04680.
GetProcAddress(0x75F00000 [OLEAUT32.DLL], "SysFreeString") called from "MSCTF.DLL" at address 0x76784EBE and returned 0x75F03E59.
DllMain(0x74130000, DLL_PROCESS_DETACH, 0x00000001) in "DWMAPI.DLL" called.
DllMain(0x74130000, DLL_PROCESS_DETACH, 0x00000001) in "DWMAPI.DLL" returned 1 (0x1).
DllMain(0x73D60000, DLL_PROCESS_DETACH, 0x00000001) in "NTMARTA.DLL" called.
DllMain(0x73D60000, DLL_PROCESS_DETACH, 0x00000001) in "NTMARTA.DLL" returned 1 (0x1).
DllMain(0x75F90000, DLL_PROCESS_DETACH, 0x00000001) in "WLDAP32.DLL" called.
DllMain(0x75F90000, DLL_PROCESS_DETACH, 0x00000001) in "WLDAP32.DLL" returned 1 (0x1).
DllMain(0x10100000, DLL_PROCESS_DETACH, 0x00000001) in "LGSCROLL.DLL" called.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "EncodePointer") called from "MSVCR80.DLL" at address 0x715B2BBC and returned 0x775BA295.
DllMain(0x10100000, DLL_PROCESS_DETACH, 0x00000001) in "LGSCROLL.DLL" returned 1 (0x1).
DllMain(0x715B0000, DLL_PROCESS_DETACH, 0x00000001) in "MSVCR80.DLL" called.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "EncodePointer") called from "MSVCR80.DLL" at address 0x715B2BBC and returned 0x775BA295.
GetProcAddress(0x75AA0000 [KERNEL32.DLL], "DecodePointer") called from "MSVCR80.DLL" at address 0x715B2C33 and returned 0x775BCD10.
DllMain(0x715B0000, DLL_PROCESS_DETACH, 0x00000001) in "MSVCR80.DLL" returned 1 (0x1).
DllMain(0x00140000, DLL_PROCESS_DETACH, 0x00000001) in "UNLOCKERHOOK.DLL" called.
DllMain(0x00140000, DLL_PROCESS_DETACH, 0x00000001) in "UNLOCKERHOOK.DLL" returned 1 (0x1).
DllMain(0x10000000, DLL_PROCESS_DETACH, 0x00000001) in "MGADAPTERSPROXY.DLL" called.
DllMain(0x10000000, DLL_PROCESS_DETACH, 0x00000001) in "MGADAPTERSPROXY.DLL" returned 1 (0x1).
DllMain(0x7C360000, DLL_PROCESS_DETACH, 0x00000001) in "MSVCR71.DLL" called.
DllMain(0x7C360000, DLL_PROCESS_DETACH, 0x00000001) in "MSVCR71.DLL" returned 1 (0x1).
DllMain(0x74460000, DLL_PROCESS_DETACH, 0x00000001) in "UXTHEME.DLL" called.
DllMain(0x74460000, DLL_PROCESS_DETACH, 0x00000001) in "UXTHEME.DLL" returned 1 (0x1).
DllMain(0x75680000, DLL_PROCESS_DETACH, 0x00000001) in "CRYPTBASE.DLL" called.
DllMain(0x75680000, DLL_PROCESS_DETACH, 0x00000001) in "CRYPTBASE.DLL" returned 1 (0x1).
DllMain(0x77740000, DLL_PROCESS_DETACH, 0x00000001) in "IMM32.DLL" called.
DllMain(0x77740000, DLL_PROCESS_DETACH, 0x00000001) in "IMM32.DLL" returned 1 (0x1).
DllMain(0x76720000, DLL_PROCESS_DETACH, 0x00000001) in "MSCTF.DLL" called.
DllMain(0x76720000, DLL_PROCESS_DETACH, 0x00000001) in "MSCTF.DLL" returned 1 (0x1).
DllMain(0x74B50000, DLL_PROCESS_DETACH, 0x00000001) in "VERSION.DLL" called.
DllMain(0x74B50000, DLL_PROCESS_DETACH, 0x00000001) in "VERSION.DLL" returned 1 (0x1).
DllMain(0x75F00000, DLL_PROCESS_DETACH, 0x00000001) in "OLEAUT32.DLL" called.
DllMain(0x75F00000, DLL_PROCESS_DETACH, 0x00000001) in "OLEAUT32.DLL" returned 1 (0x1).
DllMain(0x75C30000, DLL_PROCESS_DETACH, 0x00000001) in "OLE32.DLL" called.
DllMain(0x75C30000, DLL_PROCESS_DETACH, 0x00000001) in "OLE32.DLL" returned 1 (0x1).
DllMain(0x71550000, DLL_PROCESS_DETACH, 0x00000001) in "WINSPOOL.DRV" called.
DllMain(0x71550000, DLL_PROCESS_DETACH, 0x00000001) in "WINSPOOL.DRV" returned 1 (0x1).
DllMain(0x75A20000, DLL_PROCESS_DETACH, 0x00000001) in "COMDLG32.DLL" called.
DllMain(0x75A20000, DLL_PROCESS_DETACH, 0x00000001) in "COMDLG32.DLL" returned 1 (0x1).
DllMain(0x767F0000, DLL_PROCESS_DETACH, 0x00000001) in "SHELL32.DLL" called.
DllMain(0x767F0000, DLL_PROCESS_DETACH, 0x00000001) in "SHELL32.DLL" returned 1 (0x1).
DllMain(0x745E0000, DLL_PROCESS_DETACH, 0x00000001) in "COMCTL32.DLL" called.
DllMain(0x745E0000, DLL_PROCESS_DETACH, 0x00000001) in "COMCTL32.DLL" returned 1 (0x1).
DllMain(0x75D90000, DLL_PROCESS_DETACH, 0x00000001) in "SHLWAPI.DLL" called.
DllMain(0x75D90000, DLL_PROCESS_DETACH, 0x00000001) in "SHLWAPI.DLL" returned 1 (0x1).
DllMain(0x762D0000, DLL_PROCESS_DETACH, 0x00000001) in "GDI32.DLL" called.
DllMain(0x762D0000, DLL_PROCESS_DETACH, 0x00000001) in "GDI32.DLL" returned 1 (0x1).
DllMain(0x776C0000, DLL_PROCESS_DETACH, 0x00000001) in "LPK.DLL" called.
DllMain(0x776C0000, DLL_PROCESS_DETACH, 0x00000001) in "LPK.DLL" returned 1 (0x1).
DllMain(0x76570000, DLL_PROCESS_DETACH, 0x00000001) in "USP10.DLL" called.
DllMain(0x76570000, DLL_PROCESS_DETACH, 0x00000001) in "USP10.DLL" returned 1 (0x1).
DllMain(0x75E30000, DLL_PROCESS_DETACH, 0x00000001) in "USER32.DLL" called.
DllMain(0x75E30000, DLL_PROCESS_DETACH, 0x00000001) in "USER32.DLL" returned 1 (0x1).
DllMain(0x75FE0000, DLL_PROCESS_DETACH, 0x00000001) in "ADVAPI32.DLL" called.
DllMain(0x75FE0000, DLL_PROCESS_DETACH, 0x00000001) in "ADVAPI32.DLL" returned 1 (0x1).
DllMain(0x77770000, DLL_PROCESS_DETACH, 0x00000001) in "SECHOST.DLL" called.
DllMain(0x77770000, DLL_PROCESS_DETACH, 0x00000001) in "SECHOST.DLL" returned 1 (0x1).
DllMain(0x75B80000, DLL_PROCESS_DETACH, 0x00000001) in "RPCRT4.DLL" called.
DllMain(0x75B80000, DLL_PROCESS_DETACH, 0x00000001) in "RPCRT4.DLL" returned 1 (0x1).
DllMain(0x764C0000, DLL_PROCESS_DETACH, 0x00000001) in "MSVCRT.DLL" called.
DllMain(0x764C0000, DLL_PROCESS_DETACH, 0x00000001) in "MSVCRT.DLL" returned 1 (0x1).
DllMain(0x08370000, DLL_PROCESS_DETACH, 0x00000001) in "DEPENDS.DLL" called.
DllMain(0x08370000, DLL_PROCESS_DETACH, 0x00000001) in "DEPENDS.DLL" returned 1 (0x1).
DllMain(0x75AA0000, DLL_PROCESS_DETACH, 0x00000001) in "KERNEL32.DLL" called.
DllMain(0x75AA0000, DLL_PROCESS_DETACH, 0x00000001) in "KERNEL32.DLL" returned 1 (0x1).
DllMain(0x75770000, DLL_PROCESS_DETACH, 0x00000001) in "KERNELBASE.DLL" called.
DllMain(0x75770000, DLL_PROCESS_DETACH, 0x00000001) in "KERNELBASE.DLL" returned 1 (0x1).
Exited "NOTEPAD.EXE" (process 0x1104) with code 0 (0x0).
