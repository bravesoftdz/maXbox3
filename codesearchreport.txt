
*************** File 1: E:\maxbox3\mXGit39988\maxbox3\Examples\060_pas_datefind_exceptions2.txt
  if Source <> nil then
446:     //SourceName := Source.ClassName else
    //SourceName := 'nil';
    //SourceName := 'nil';
448:   //raise EConvertError.CreateResFmt(@SAssignError, [SourceName, ClassName]);
end;


*************** File 2: E:\maxbox3\mXGit39988\maxbox3\Examples\064_pas_timetest.txt
    //on E:Exception do
49:       //Writeln(E.Classname, ': ', E.Message);
  end;


*************** File 3: E:\maxbox3\mXGit39988\maxbox3\Examples\138_3sort_visual.txt
begin
441: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 4: E:\maxbox3\mXGit39988\maxbox3\Examples\138_3sort_visual_include.txt
begin
482: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 5: E:\maxbox3\mXGit39988\maxbox3\Examples\165_best_of_runtime.txt
      if c is TComponent then
248:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname)
    end;


*************** File 6: E:\maxbox3\mXGit39988\maxbox3\Examples\165_best_of_runtime2.txt
      if c is TComponent then
268:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname)
    end;


*************** File 7: E:\maxbox3\mXGit39988\maxbox3\Examples\165_best_of_runtime3.txt
      if c is TComponent then
268:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname)
    end;


*************** File 8: E:\maxbox3\mXGit39988\maxbox3\Examples\165_best_of_runtimebefore.txt
      if c is TComponent then
248:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname)
    end;


*************** File 9: E:\maxbox3\mXGit39988\maxbox3\Examples\174_mastermind.txt
June 02 2006 3:57PM
321: I've seen this mentioned before but since I just posted about Yahoo's Go for TV I figured what the heck, might was well throw Skype into the mix too. Skype is only slightly harder to recognize as being written in Delphi but only because they've decided to package the whole application up into a single 18MB EXE btw, isn't it nice how Delphi gives you that option. If you search for strings in the Skype.exe you'll see lots of Delphi classnames like TInterfacedObject and friends.



*************** File 10: E:\maxbox3\mXGit39988\maxbox3\Examples\189_newfunctions31.txt
      if c is TComponent then
221:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname)
    end;


*************** File 11: E:\maxbox3\mXGit39988\maxbox3\Examples\189_newfunctions35.txt
      if c is TComponent then
219:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname)
    end;


*************** File 12: E:\maxbox3\mXGit39988\maxbox3\Examples\189_newfunctions38.txt
      if c is TComponent then
222:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname)
    end;


*************** File 13: E:\maxbox3\mXGit39988\maxbox3\Examples\191_componentcount.txt
 * Date  : 16/02/2011  -  14:56
6:  * History  : add classname to TComponent
 *          : show index# in case of no-name
      if c is TComponent then
40:         writeln(inttostr64(j)+ ' '+c.name +' '+ c.classname)
    end;
begin
65:   Result:= ComponentFullName(comp)+': '+comp.Classname;
end;


*************** File 14: E:\maxbox3\mXGit39988\maxbox3\Examples\192_opearatingsystem2.txt
      if c is TComponent then
222:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname)
    end;


*************** File 15: E:\maxbox3\mXGit39988\maxbox3\Examples\222_memoform.txt
begin
249: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 16: E:\maxbox3\mXGit39988\maxbox3\Examples\224_dialogs.txt
     onminimize:= @minimizeclick;
98:      writeln(Classname)
   end;
begin
481: if (Sender.ClassNameIs('TListView')) then begin
  if MouseIsDown and ((Sender as TListView).SelCount>0) then


*************** File 17: E:\maxbox3\mXGit39988\maxbox3\Examples\227_animation.txt
begin
277: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 18: E:\maxbox3\mXGit39988\maxbox3\Examples\227_animation2.txt
begin
296: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 19: E:\maxbox3\mXGit39988\maxbox3\Examples\230_DataSetXMLBackupScholz.txt
     ItemIndex:=2; 
52:      writeln('classname of radio group '+classname);
   writeln(Items.Strings[ItemIndex]); 


*************** File 20: E:\maxbox3\mXGit39988\maxbox3\Examples\232_outline.txt
begin
231: if (Sender.ClassNameIs('TListView')) then begin
  if MouseIsDown and ((Sender as TListView).SelCount>0) then


*************** File 21: E:\maxbox3\mXGit39988\maxbox3\Examples\232_outline_2.txt
begin
215: if (Sender.ClassNameIs('TListView')) then begin
  if MouseIsDown and ((Sender as TListView).SelCount>0) then


*************** File 22: E:\maxbox3\mXGit39988\maxbox3\Examples\233_modular_form.txt
begin
227: if (Sender.ClassNameIs('TListView')) then begin
  if MouseIsDown and ((Sender as TListView).SelCount>0) then


*************** File 23: E:\maxbox3\mXGit39988\maxbox3\Examples\236_componentpower.txt
begin
501: if (Sender.ClassNameIs('TListView')) then begin
  if MouseIsDown and ((Sender as TListView).SelCount>0) then


*************** File 24: E:\maxbox3\mXGit39988\maxbox3\Examples\236_componentpower_back.txt
begin
458: if (Sender.ClassNameIs('TListView')) then begin
  if MouseIsDown and ((Sender as TListView).SelCount>0) then


*************** File 25: E:\maxbox3\mXGit39988\maxbox3\Examples\241_db3_sql_tutorial2.txt
    function ClassType: TClass;
436:     class function ClassName: ShortString;
    class function ClassNameIs(const Name: string): Boolean;
    class function ClassName: ShortString;
437:     class function ClassNameIs(const Name: string): Boolean;
    class function ClassParent: TClass;


*************** File 26: E:\maxbox3\mXGit39988\maxbox3\Examples\241_db3_sql_tutorial2fix.txt
    function ClassType: TClass;
340:     class function ClassName: ShortString;
    class function ClassNameIs(const Name: string): Boolean;
    class function ClassName: ShortString;
341:     class function ClassNameIs(const Name: string): Boolean;
    class function ClassParent: TClass;


*************** File 27: E:\maxbox3\mXGit39988\maxbox3\Examples\241_db3_sql_tutorial3.txt
    function ClassType: TClass;
469:     class function ClassName: ShortString;
    class function ClassNameIs(const Name: string): Boolean;
    class function ClassName: ShortString;
470:     class function ClassNameIs(const Name: string): Boolean;
    class function ClassParent: TClass;


*************** File 28: E:\maxbox3\mXGit39988\maxbox3\Examples\241_db3_sql_tutorial3connect.txt
    function ClassType: TClass;
470:     class function ClassName: ShortString;
    class function ClassNameIs(const Name: string): Boolean;
    class function ClassName: ShortString;
471:     class function ClassNameIs(const Name: string): Boolean;
    class function ClassParent: TClass;


*************** File 29: E:\maxbox3\mXGit39988\maxbox3\Examples\241_db3_sql_tutorial3_fptest.txt
    function ClassType: TClass;
466:     class function ClassName: ShortString;
    class function ClassNameIs(const Name: string): Boolean;
    class function ClassName: ShortString;
467:     class function ClassNameIs(const Name: string): Boolean;
    class function ClassParent: TClass;


*************** File 30: E:\maxbox3\mXGit39988\maxbox3\Examples\241_RTL_SET2.txt
        result:= c;
303:         //writeln('cfinder' +inttostr(j)+ ' '+c.name +' '+ c.classname)
      end;
      if c is TLabel then begin
318:         writeln('cfinder' +inttostr(j)+ ' '+c.name +' '+ c.classname)
      end;


*************** File 31: E:\maxbox3\mXGit39988\maxbox3\Examples\241_RTL_SET2_tester.txt
        result:= c;
305:         //writeln('cfinder' +inttostr(j)+ ' '+c.name +' '+ c.classname)
      end;
      if c is TLabel then begin
320:         writeln('cfinder' +inttostr(j)+ ' '+c.name +' '+ c.classname)
      end;


*************** File 32: E:\maxbox3\mXGit39988\maxbox3\Examples\242_Component_Control.txt
        result:= c;
303:         //writeln('cfinder' +inttostr(j)+ ' '+c.name +' '+ c.classname)
      end;
      if c is TLabel then begin
318:         writeln('cfinder' +inttostr(j)+ ' '+c.name +' '+ c.classname)
      end;


*************** File 33: E:\maxbox3\mXGit39988\maxbox3\Examples\245_formapp2_testerX.txt
  except
145:     //WriteLn(ExceptObject.ClassName, ': ', ExceptObject.ToString);
  end;


*************** File 34: E:\maxbox3\mXGit39988\maxbox3\Examples\250_tipsandtricks2.txt
      //7if c is TComponent then
767:         //writeln(inttostr(j)+ ' '+c.name +' '+ c.classname)
      loglist.Add(inFrm.components[i].name);
        outline1.AddChild(outlineIdx, self.components[cmpnts].name + 
878:           ' [' + self.components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, self.Controls[cmpnts].name + 
883:           ' [' + self.Controls[cmpnts].ClassName + ']');
  end;
  var
1744:     ClassName : array[0..30] of char;
  begin
       begin
1749:        GetClassName(Wnd,ClassName,30);
       if StrIComp(ClassName,'TApplication') = 0 then
       GetClassName(Wnd,ClassName,30);
1750:        if StrIComp(ClassName,'TApplication') = 0 then
          begin

3080:           ' [' + components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, Controls[cmpnts].name + 
3098:           ' [' + Controls[cmpnts].ClassName + ']');
  end;


*************** File 35: E:\maxbox3\mXGit39988\maxbox3\Examples\250_tipsandtricks3.txt
        outline1.AddChild(outlineIdx, self.components[cmpnts].name + 
896:           ' [' + self.components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, self.Controls[cmpnts].name + 
901:           ' [' + self.Controls[cmpnts].ClassName + ']');
  end;
  var
1852:     ClassName : array[0..30] of char;
  begin
       begin
1857:        GetClassName(Wnd,ClassName,30);
       if StrIComp(ClassName,'TApplication') = 0 then
       GetClassName(Wnd,ClassName,30);
1858:        if StrIComp(ClassName,'TApplication') = 0 then
          begin

3188:           ' [' + components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, Controls[cmpnts].name + 
3206:           ' [' + Controls[cmpnts].ClassName + ']');
  end;


*************** File 36: E:\maxbox3\mXGit39988\maxbox3\Examples\250_tipsandtricks3api.txt
      if c is TComponent then
786:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname);
      loglist.Add(inFrm.components[i].name);
        outline1.AddChild(outlineIdx, self.components[cmpnts].name + 
900:           ' [' + self.components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, self.Controls[cmpnts].name + 
905:           ' [' + self.Controls[cmpnts].ClassName + ']');
  end;
  var
1978:     ClassName : array[0..30] of char;
  begin
       begin
1983:        GetClassName(Wnd,ClassName,30);
       if StrIComp(ClassName,'TApplication') = 0 then
       GetClassName(Wnd,ClassName,30);
1984:        if StrIComp(ClassName,'TApplication') = 0 then
          begin

3314:           ' [' + components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, Controls[cmpnts].name + 
3332:           ' [' + Controls[cmpnts].ClassName + ']');
  end;


*************** File 37: E:\maxbox3\mXGit39988\maxbox3\Examples\250_tipsandtricks3_admin_elevation.txt
      if c is TComponent then
782:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname);
      loglist.Add(inFrm.components[i].name);
        outline1.AddChild(outlineIdx, self.components[cmpnts].name + 
896:           ' [' + self.components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, self.Controls[cmpnts].name + 
901:           ' [' + self.Controls[cmpnts].ClassName + ']');
  end;
  var
1866:     ClassName : array[0..30] of char;
  begin
       begin
1871:        GetClassName(Wnd,ClassName,30);
       if StrIComp(ClassName,'TApplication') = 0 then
       GetClassName(Wnd,ClassName,30);
1872:        if StrIComp(ClassName,'TApplication') = 0 then
          begin

3202:           ' [' + components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, Controls[cmpnts].name + 
3220:           ' [' + Controls[cmpnts].ClassName + ']');
  end;


*************** File 38: E:\maxbox3\mXGit39988\maxbox3\Examples\250_tipsandtricks3_tester.txt
      if c is TComponent then
803:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname);
      loglist.Add(inFrm.components[i].name);
        outline1.AddChild(outlineIdx, self.components[cmpnts].name + 
917:           ' [' + self.components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, self.Controls[cmpnts].name + 
922:           ' [' + self.Controls[cmpnts].ClassName + ']');
  end;
  var
2140:     ClassName : array[0..30] of char;
  begin
       begin
2145:        GetClassName(Wnd,ClassName,30);
       if StrIComp(ClassName,'TApplication') = 0 then
       GetClassName(Wnd,ClassName,30);
2146:        if StrIComp(ClassName,'TApplication') = 0 then
          begin

3476:           ' [' + components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, Controls[cmpnts].name + 
3494:           ' [' + Controls[cmpnts].ClassName + ']');
  end;


*************** File 39: E:\maxbox3\mXGit39988\maxbox3\Examples\250_tipsandtricks4_tester.txt
      if c is TComponent then
786:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname);
      loglist.Add(inFrm.components[i].name);
        outline1.AddChild(outlineIdx, self.components[cmpnts].name + 
900:           ' [' + self.components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, self.Controls[cmpnts].name + 
905:           ' [' + self.Controls[cmpnts].ClassName + ']');
  end;
  var
2046:     ClassName : array[0..30] of char;
  begin
       begin
2051:        GetClassName(Wnd,ClassName,30);
       if StrIComp(ClassName,'TApplication') = 0 then
       GetClassName(Wnd,ClassName,30);
2052:        if StrIComp(ClassName,'TApplication') = 0 then
          begin

3382:           ' [' + components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, Controls[cmpnts].name + 
3400:           ' [' + Controls[cmpnts].ClassName + ']');
  end;


*************** File 40: E:\maxbox3\mXGit39988\maxbox3\Examples\250_tipsandtricks4_tester2.txt
      if c is TComponent then
804:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname);
      loglist.Add(inFrm.components[i].name);
        outline1.AddChild(outlineIdx, self.components[cmpnts].name + 
918:           ' [' + self.components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, self.Controls[cmpnts].name + 
923:           ' [' + self.Controls[cmpnts].ClassName + ']');
  end;
  var
2554:     ClassName : array[0..30] of char;
  begin
       begin
2559:        GetClassName(Wnd,ClassName,30);
       if StrIComp(ClassName,'TApplication') = 0 then
       GetClassName(Wnd,ClassName,30);
2560:        if StrIComp(ClassName,'TApplication') = 0 then
          begin

3890:           ' [' + components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, Controls[cmpnts].name + 
3908:           ' [' + Controls[cmpnts].ClassName + ']');
  end;


*************** File 41: E:\maxbox3\mXGit39988\maxbox3\Examples\253_opearatingsystem3.txt
      if c is TComponent then
223:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname)
    end;


*************** File 42: E:\maxbox3\mXGit39988\maxbox3\Examples\269_record_grid.TXT
  //Writeln(GetASCII)  
406:   //windowclassname
  //screenworkarea


*************** File 43: E:\maxbox3\mXGit39988\maxbox3\Examples\270_Jedi_FunctionPower.txt
 //FindFormByClass(FormClass: TFormClass): TForm;
626:  //FindFormByClassName(FormClassName: string): TForm;
{ FindByTag returns the control with specified class,


*************** File 44: E:\maxbox3\mXGit39988\maxbox3\Examples\270_Jedi_FunctionPowertester.txt
 //FindFormByClass(FormClass: TFormClass): TForm;
734:  //FindFormByClassName(FormClassName: string): TForm;
{ FindByTag returns the control with specified class,


*************** File 45: E:\maxbox3\mXGit39988\maxbox3\Examples\277_functionsfor39.txt
 //FirstInstance(const ATitle: string): Boolean;
876: // restores a window based on it's classname and Caption. Either can be left empty
// to widen the search
// to widen the search
878:  //RestoreOtherInstance(const MainFormClassName, MainFormCaption: string);

 //DropT(const S: string): string;
1011:   ///WindowClassName(Wnd: THandle): string;
  //SwitchToWindow(Wnd: THandle; Restore: Boolean);
begin
1520: if (Sender.ClassNameIs('TListView')) then
begin
function FirstInstance(const ATitle: string): Boolean;
2383: // restores a window based on it's classname and Caption. Either can be left empty
// to widen the search
// to widen the search
2385: procedure RestoreOtherInstance(const MainFormClassName, MainFormCaption: string);


2545: function WindowClassName(Wnd: THandle): string;



*************** File 46: E:\maxbox3\mXGit39988\maxbox3\Examples\277_functionsfor39998.TXT
    Sleep(Stack.GetInt(PStart));
364:   end else if Proc.Name = 'FINDWINDOWBYCLASSNAME' then begin
    Stack.SetInt(PStart, FindWindow(PChar(Stack.GetString(PStart-1)), nil));


*************** File 47: E:\maxbox3\mXGit39988\maxbox3\Examples\280_UML_process.txt
begin
769: if (Sender.ClassNameIs('TListView')) then
begin
function FirstInstance(const ATitle: string): Boolean;
1632: // restores a window based on it's classname and Caption. Either can be left empty
// to widen the search
// to widen the search
1634: procedure RestoreOtherInstance(const MainFormClassName, MainFormCaption: string);


1794: function WindowClassName(Wnd: THandle): string;



*************** File 48: E:\maxbox3\mXGit39988\maxbox3\Examples\280_UML_process_knabe2.txt
begin
986: if (Sender.ClassNameIs('TListView')) then
begin
function FirstInstance(const ATitle: string): Boolean;
1849: // restores a window based on it's classname and Caption. Either can be left empty
// to widen the search
// to widen the search
1851: procedure RestoreOtherInstance(const MainFormClassName, MainFormCaption: string);


2011: function WindowClassName(Wnd: THandle): string;



*************** File 49: E:\maxbox3\mXGit39988\maxbox3\Examples\280_UML_process_TIM_Botzenhardt.txt
begin
1032: if (Sender.ClassNameIs('TListView')) then
begin
function FirstInstance(const ATitle: string): Boolean;
1895: // restores a window based on it's classname and Caption. Either can be left empty
// to widen the search
// to widen the search
1897: procedure RestoreOtherInstance(const MainFormClassName, MainFormCaption: string);


2057: function WindowClassName(Wnd: THandle): string;



*************** File 50: E:\maxbox3\mXGit39988\maxbox3\Examples\285_Patterns_process.txt
begin
855: if (Sender.ClassNameIs('TListView')) then
begin
function FirstInstance(const ATitle: string): Boolean;
1718: // restores a window based on it's classname and Caption. Either can be left empty
// to widen the search
// to widen the search
1720: procedure RestoreOtherInstance(const MainFormClassName, MainFormCaption: string);


1880: function WindowClassName(Wnd: THandle): string;



*************** File 51: E:\maxbox3\mXGit39988\maxbox3\Examples\286_colormixer_jpeg_charcounter.txt
    //on E: Exception do
882:       //Writeln('Exc.ClassName '+ Exc2.message);
      Exc2.message;    //raise
    //on E: Exception do
974:       Writeln('Exc.ClassName '+ Exc.message);
      Exc.message;


*************** File 52: E:\maxbox3\mXGit39988\maxbox3\Examples\286_colormixer_jpeg_charcounter2.txt
    //on E: Exception do
899:       //Writeln('Exc.ClassName '+ Exc2.message);
      Exc2.message;    //raise
    //on E: Exception do
991:       Writeln('Exc.ClassName '+ Exc.message);
      Exc.message;


*************** File 53: E:\maxbox3\mXGit39988\maxbox3\Examples\287_eventhandling.txt
    //on E: Exception do
1261:       //Writeln('Exc.ClassName '+ Exc2.message);
      writeln('variant '+vsomme(5,6));
    //on E: Exception do
1357:       Writeln('Exc.ClassName '+ Exc.message);
      Exc.message;


*************** File 54: E:\maxbox3\mXGit39988\maxbox3\Examples\287_eventhandling2.txt
    //on E: Exception do
498:       //Writeln('Exc.ClassName '+ Exc2.message);
      Exc2.message;    //raise
    //on E: Exception do
579:       Writeln('Exc.ClassName '+ Exc.message);
      Exc.message;


*************** File 55: E:\maxbox3\mXGit39988\maxbox3\Examples\287_eventhandling2_negpower.txt
    //on E: Exception do
1261:       //Writeln('Exc.ClassName '+ Exc2.message);
      writeln('variant '+vsomme(5,6));
    //on E: Exception do
1357:       Writeln('Exc.ClassName '+ Exc.message);
      Exc.message;


*************** File 56: E:\maxbox3\mXGit39988\maxbox3\Examples\288_bitblt.txt
    //on E: Exception do
1153:       //Writeln('Exc.ClassName '+ Exc2.message);
      Exc2.message;    //raise
    //on E: Exception do
1245:       Writeln('Exc.ClassName '+ Exc.message);
      Exc.message;


*************** File 57: E:\maxbox3\mXGit39988\maxbox3\Examples\288_bitblt_resize.txt
    //on E: Exception do
1168:       //Writeln('Exc.ClassName '+ Exc2.message);
      Exc2.message;    //raise
    //on E: Exception do
1256:       Writeln('Exc.ClassName '+ Exc.message);
      Exc.message;


*************** File 58: E:\maxbox3\mXGit39988\maxbox3\Examples\291_3sort_visual_thread.txt
begin
485: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 59: E:\maxbox3\mXGit39988\maxbox3\Examples\293_bold_utils.txt
begin
1033: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 60: E:\maxbox3\mXGit39988\maxbox3\Examples\293_ib_utils.txt
begin
448: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 61: E:\maxbox3\mXGit39988\maxbox3\Examples\293_ib_utils_timetest.txt
begin
520: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 62: E:\maxbox3\mXGit39988\maxbox3\Examples\295_easter_calendar.txt
begin
403: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 63: E:\maxbox3\mXGit39988\maxbox3\Examples\295_easter_calendar2.txt
begin
483: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 64: E:\maxbox3\mXGit39988\maxbox3\Examples\295_easter_combobox.txt
begin
453: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 65: E:\maxbox3\mXGit39988\maxbox3\Examples\300_treeview_test.txt
      //cleanupinstance;
562:       //classname
    end;
      //cleanupinstance;
567:       //classname
      writeln(getnamepath);
      //cleanupinstance;
573:       //classname
      open;


*************** File 66: E:\maxbox3\mXGit39988\maxbox3\Examples\300_treeview_test2.txt
      //cleanupinstance;
641:       //classname
    end;
      //cleanupinstance;
646:       //classname
      writeln(getnamepath);
      //cleanupinstance;
652:       //classname
      open;


*************** File 67: E:\maxbox3\mXGit39988\maxbox3\Examples\300_treeview_test3.txt

1168:  //FindWindowByClassName(const ClassName: String): HWND;
 //FindWindowByWindowName(const WindowName: String): HWND;

1408:  //CreateOleObject(const ClassName: string): Variant;
 //GetActiveOleObject(const ClassName: string): Variant;
 //CreateOleObject(const ClassName: string): Variant;
1409:  //GetActiveOleObject(const ClassName: string): Variant;
 //IDispatchInvoke(Self: IDispatch; PropertySet: Boolean; const Name: String; Par: array of Variant): Variant;
      //cleanupinstance;
1659:       //classname
      writeln(getnamepath);
      //cleanupinstance;
1666:       //classname
      try


*************** File 68: E:\maxbox3\mXGit39988\maxbox3\Examples\300_treeview_test3video.txt

1058:  //FindWindowByClassName(const ClassName: String): HWND;
 //FindWindowByWindowName(const WindowName: String): HWND;

1298:  //CreateOleObject(const ClassName: string): Variant;
 //GetActiveOleObject(const ClassName: string): Variant;
 //CreateOleObject(const ClassName: string): Variant;
1299:  //GetActiveOleObject(const ClassName: string): Variant;
 //IDispatchInvoke(Self: IDispatch; PropertySet: Boolean; const Name: String; Par: array of Variant): Variant;
      //cleanupinstance;
1861:       //classname
      writeln(getnamepath);
      //cleanupinstance;
1868:       //classname
      try


*************** File 69: E:\maxbox3\mXGit39988\maxbox3\Examples\301_log_arduino.txt
      //cleanupinstance;
986:       //classname
      writeln(getnamepath);
      //cleanupinstance;
991:       //classname
      open;


*************** File 70: E:\maxbox3\mXGit39988\maxbox3\Examples\301_log_arduino2.txt
      //cleanupinstance;
630:       //classname
      open;


*************** File 71: E:\maxbox3\mXGit39988\maxbox3\Examples\305_indy_elizahttpserver4file.TXT
    begin
559:       Raise Exception.Create(e.ClassName+' : '+e.Message);
    end;


*************** File 72: E:\maxbox3\mXGit39988\maxbox3\Examples\309_regex_powertester2.txt
    //on E: Exception do
513:      Writeln('E.ClassName'+ ': '+ E.Message);
  end;


*************** File 73: E:\maxbox3\mXGit39988\maxbox3\Examples\309_regex_powertester3.txt
    //on E: Exception do
510:      Writeln('E.ClassName'+ ': '+ E.Message);
  end;


*************** File 74: E:\maxbox3\mXGit39988\maxbox3\Examples\312_ListView.txt
     ItemIndex:= 2; 
53:      writeln('classname of radio group '+classname);
   writeln(Items.Strings[ItemIndex]); 


*************** File 75: E:\maxbox3\mXGit39988\maxbox3\Examples\315_funcplot_dmath.TXT
     //writeln(items[1])
331:      //writeln('classname of radio group '+classname);
     //writeln(Items.Strings[ItemIndex]); 
     SetBounds(30,80,300,300)
340:      //writeln('classname of radio group '+classname);
     //writeln(Items.Strings[ItemIndex]); 


*************** File 76: E:\maxbox3\mXGit39988\maxbox3\Examples\336_digiclock2test.txt
 //EmptyRect: TRect;
801:  //IsClassByName(Obj: TObject; ClassName: string): Boolean;
end;


*************** File 77: E:\maxbox3\mXGit39988\maxbox3\Examples\345_velocity.txt
      //cleanupinstance;
567:       //classname
      writeln(getnamepath);
      //cleanupinstance;
573:       //classname
      open;


*************** File 78: E:\maxbox3\mXGit39988\maxbox3\Examples\359_charsetrules.TXT
     ItemIndex:= 1; 
156:      //writeln('classname of radio group '+classname);
     //writeln(Items.Strings[ItemIndex]); 
     SetBounds(30,80,150,300)
163:      //writeln('classname of radio group '+classname);
     //writeln(Items.Strings[ItemIndex]); 


*************** File 79: E:\maxbox3\mXGit39988\maxbox3\Examples\360_JvPaintFX.TXT
     onClick:=  @TFrm1_RGroupClick;
225:      //writeln('classname of radio group '+classname);
     //writeln(Items.Strings[ItemIndex]); 
     SetBounds(30,80,150,300)
232:      //writeln('classname of radio group '+classname);
     //writeln(Items.Strings[ItemIndex]); 


*************** File 80: E:\maxbox3\mXGit39988\maxbox3\Examples\370_richedit.txt
begin
430: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 81: E:\maxbox3\mXGit39988\maxbox3\Examples\370_richedit_highlight.txt
begin
487: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 82: E:\maxbox3\mXGit39988\maxbox3\Examples\370_synedit.txt
begin
295: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 83: E:\maxbox3\mXGit39988\maxbox3\Examples\370_synedit2.txt
begin
408: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 84: E:\maxbox3\mXGit39988\maxbox3\Examples\370_synedit2_mxtester.txt
begin
853: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 85: E:\maxbox3\mXGit39988\maxbox3\Examples\370_synedit2_mxtester2.txt
begin
1201: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 86: E:\maxbox3\mXGit39988\maxbox3\Examples\370_synedittester.txt
begin
1248: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 87: E:\maxbox3\mXGit39988\maxbox3\Examples\372_synedit_export.txt
begin
410: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 88: E:\maxbox3\mXGit39988\maxbox3\Examples\377_simpleXML.txt
begin
425: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 89: E:\maxbox3\mXGit39988\maxbox3\Examples\377_smartXML.txt
begin
713: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 90: E:\maxbox3\mXGit39988\maxbox3\Examples\377_smartXMLWorkshop.txt
begin
804: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 91: E:\maxbox3\mXGit39988\maxbox3\Examples\377_smartXMLWorkshop2.txt
begin
786: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 92: E:\maxbox3\mXGit39988\maxbox3\Examples\378_REST1.txt
begin
699: if (Sender.ClassNameIs('TListView')) then
begin
    on E: Exception do
862:       Writeln(E.ClassName, ': ', E.Message);
  end;


*************** File 93: E:\maxbox3\mXGit39988\maxbox3\Examples\378_REST2.txt
begin
199: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 94: E:\maxbox3\mXGit39988\maxbox3\Examples\383_MDAC_DCOM.txt
      if c is TComponent then
907:         writeln(inttostr(j)+ ' '+c.name +' '+ c.classname);
      loglist.Add(inFrm.components[i].name);
        outline1.AddChild(outlineIdx, self.components[cmpnts].name + 
1021:           ' [' + self.components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, self.Controls[cmpnts].name + 
1026:           ' [' + self.Controls[cmpnts].ClassName + ']');
  end;
  var
2211:     ClassName : array[0..30] of char;
  begin
       begin
2216:        GetClassName(Wnd,ClassName,30);
       if StrIComp(ClassName,'TApplication') = 0 then
       GetClassName(Wnd,ClassName,30);
2217:        if StrIComp(ClassName,'TApplication') = 0 then
          begin

3547:           ' [' + components[cmpnts].ClassName + ']');
  end;
        outline1.AddChild(outlineIdx, Controls[cmpnts].name + 
3565:           ' [' + Controls[cmpnts].ClassName + ']');
  end;


*************** File 95: E:\maxbox3\mXGit39988\maxbox3\Examples\430_fileoperation_tester.txt
  CreateDialogParam( hInstance : HINST; lpTemplateName : PKOLChar; hWndParent : HWND; lpDialogFunc : TFNDlgProc; dwInitParam : LPARAM) : HWND');
557:   CreateMDIWindow( lpClassName, lpWindowName : PKOLChar; dwStyle : DWORD; X, Y, nWidth, nHeight : Integer; hWndParent : HWND; hInstance : HINST; lParam : LPARAM) : HWND');
  CreateWindowEx( dwExStyle : DWORD; lpClassName : PKOLChar; lpWindowName : PKOLChar; dwStyle : DWORD; X, Y, nWidth, nHeight : Integer; hWndParent : HWND; hMenu : HMENU; hInstance : HINST; lpParam : Pointer) : HWND');
  CreateMDIWindow( lpClassName, lpWindowName : PKOLChar; dwStyle : DWORD; X, Y, nWidth, nHeight : Integer; hWndParent : HWND; hInstance : HINST; lParam : LPARAM) : HWND');
558:   CreateWindowEx( dwExStyle : DWORD; lpClassName : PKOLChar; lpWindowName : PKOLChar; dwStyle : DWORD; X, Y, nWidth, nHeight : Integer; hWndParent : HWND; hMenu : HMENU; hInstance : HINST; lpParam : Pointer) : HWND');
  CreateWindowStation( lpwinsta : PKOLChar; dwReserved, dwDesiredAccess : DWORD; lpsa : PSecurityAttributes) : HWINSTA');
  EnumWindowStations( lpEnumFunc : TFNWinStaEnumProc; lParam : LPARAM) : BOOL');
580:   FindWindow( lpClassName, lpWindowName : PKOLChar) : HWND');
  FindWindowEx( Parent, Child : HWND; ClassName, WindowName : PKOLChar) : HWND');
  FindWindow( lpClassName, lpWindowName : PKOLChar) : HWND');
581:   FindWindowEx( Parent, Child : HWND; ClassName, WindowName : PKOLChar) : HWND');
  GetAltTabInfo( hwnd : HWND; iItem : Integer; var pati : TAltTabInfo; pszItemText : PKOLChar; cchItemText : UINT) : BOOL');
  GetAltTabInfo( hwnd : HWND; iItem : Integer; var pati : TAltTabInfo; pszItemText : PKOLChar; cchItemText : UINT) : BOOL');
583:   GetClassInfo( hInstance : HINST; lpClassName : PKOLChar; var lpWndClass : TWndClass) : BOOL');
  GetClassInfoEx( Instance : HINST; Classname : PKOLChar; var WndClass : TWndClassEx) : BOOL');
  GetClassInfo( hInstance : HINST; lpClassName : PKOLChar; var lpWndClass : TWndClass) : BOOL');
584:   GetClassInfoEx( Instance : HINST; Classname : PKOLChar; var WndClass : TWndClassEx) : BOOL');
  GetClassLong( hWnd : HWND; nIndex : Integer) : DWORD');
  GetClassLong( hWnd : HWND; nIndex : Integer) : DWORD');
586:   GetClassName( hWnd : HWND; lpClassName : PKOLChar; nMaxCount : Integer) : Integer');
  GetClipboardFormatName( format : UINT; lpszFormatName : PKOLChar; cchMaxCount : Integer) : Integer');
  TranslateAccelerator( hWnd : HWND; hAccTable : HACCEL; var lpMsg : TMsg) : Integer');
658:   UnregisterClass( lpClassName : PKOLChar; hInstance : HINST) : BOOL');
  VkKeyScan( ch : KOLChar) : SHORT');


*************** File 96: E:\maxbox3\mXGit39988\maxbox3\Examples\441_make_app.txt

251: //function SetWinClass(const ClassName: String; pMessFunc: Pointer;
  //                wcStyle: Integer = CS_PARENTDC or CS_BYTEALIGNCLIENT): Word;
  //                wcStyle: Integer = CS_PARENTDC or CS_BYTEALIGNCLIENT): Word;
253:   {the SetWinClass function will get the ClassName and Message Function
   address, so it can register a new Window System Class for the Form here.
  CL.AddTypeS('TFontLooks', 'set of TFontLook');
488:  CL.AddDelphiFunction('Function SetWinClass( const ClassName : String; pMessFunc : TObject; wcStyle : Integer) : Word');
 CL.AddDelphiFunction('Function MakeForm( Left, Top, Width, Height : Integer; const Caption : String; WinStyle : Integer) : Integer');


*************** File 97: E:\maxbox3\mXGit39988\maxbox3\Examples\442_arduino_rgb_led.txt
    //on E: Exception do
905:       //Writeln('Exc.ClassName '+ Exc2.message);
      Exc2.message;    //raise
    //on E: Exception do
992:       Writeln('Exc.ClassName '+ Exc.message);
      Exc.message;


*************** File 98: E:\maxbox3\mXGit39988\maxbox3\Examples\461_sqlform_calwin.txt
  repeat
537:     //getClassName(messi, pchar('text'), 80);
      //if strpas(text) = 'TMessageForm' then found:= true;


*************** File 99: E:\maxbox3\mXGit39988\maxbox3\Examples\462_caesarcipher.txt
  //findwindow
159:    // getclassname
     //EnumWindowsProc


*************** File 100: E:\maxbox3\mXGit39988\maxbox3\Examples\469_formarrow.txt
  repeat
309:     //getClassName(messi, pchar('text'), 80);
      //if strpas(text) = 'TMessageForm' then found:= true;


*************** File 101: E:\maxbox3\mXGit39988\maxbox3\Examples\472_allcardstest.TXT
    Sleep(Stack.GetInt(PStart));
309:   end else if Proc.Name = 'FINDWINDOWBYCLASSNAME' then begin
    Stack.SetInt(PStart, FindWindow(PChar(Stack.GetString(PStart-1)), nil));


*************** File 102: E:\maxbox3\mXGit39988\maxbox3\Examples\478_regex_scan.txt
begin
613: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 103: E:\maxbox3\mXGit39988\maxbox3\Examples\480_regex_pathfinder.txt
begin
397: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 104: E:\maxbox3\mXGit39988\maxbox3\Examples\480_regex_pathfinder2.txt
begin
408: if (Sender.ClassNameIs('TListView')) then
begin


*************** File 105: E:\maxbox3\mXGit39988\maxbox3\Examples\485_innofunc.txt

1013:  //FindWindowByClassName(const ClassName: String): HWND;
 //FindWindowByWindowName(const WindowName: String): HWND;

1249:  //CreateOleObject(const ClassName: string): Variant;
 //GetActiveOleObject(const ClassName: string): Variant;
 //CreateOleObject(const ClassName: string): Variant;
1250:  //GetActiveOleObject(const ClassName: string): Variant;
 //IDispatchInvoke(Self: IDispatch; PropertySet: Boolean; const Name: String; Par: array of Variant): Variant;
      //cleanupinstance;
1498:       //classname
      writeln(getnamepath);
      //cleanupinstance;
1504:       //classname
      try


*************** File 106: E:\maxbox3\mXGit39988\maxbox3\Examples\upsi_allfunctionslist.txt
Procedure GetApplicationsRunning(Strings: TStrings);
1712: Function IsApplicationRunning(const AClassName, ApplName: string): Boolean;
Function IsDelphiRunning: boolean;
 Function FirstInstance(const ATitle: string): Boolean;
1776:  Procedure RestoreOtherInstance(MainFormClassName, MainFormCaption: string);
 Procedure HideTraybar;
 Function SetClipboard(NewClipboard: TClipboard): TClipboard;
1954:  Function CreateOleObject(const ClassName: String): IDispatch;
 Function GetActiveOleObject(const ClassName: String): IDispatch;
 Function CreateOleObject(const ClassName: String): IDispatch;
1955:  Function GetActiveOleObject(const ClassName: String): IDispatch;
 Procedure ProcessPath(const EditText: string; var Drive: Char; var DirPart: string; var
 Function IsAccel(VK: Word; const Str: string): Boolean;
3703:  Function IsApplicationRunning(const AClassName, ApplName: string): Boolean;
 Function IsConsole: Boolean);
 Procedure ReplaceTime(var DateTime: TDateTime; const NewTime: TDateTime);
4303:  Procedure RestoreOtherInstance(MainFormClassName, MainFormCaption: string);
 Procedure RmDir(const S: string);
 CL.AddConstantN('vmtDynamicTable','LongInt.SetInt(- 48);
4691:  CL.AddConstantN('vmtClassName','LongInt.SetInt(- 44);
 CL.AddConstantN('vmtInstanceSize','LongInt.SetInt(- 40);


*************** File 107: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\W3Application.pas
  end else
440:   raise EW3Screen.CreateFmt(CNT_ERR_METHOD,['PositionFormInView',ClassName,CNT_ERR_FORM_PARAM_WAS_NIL]);
end;
  if not Assigned(modalForm) then
590:     raise EW3Application.CreateFmt(CNT_ERR_METHOD,[{$I %FUNCTION%},ClassName,Format('Form [%s] not found',[formName])]);
  var modalPanel := modalForm.ChildByName(panelName);
  if not Assigned(modalPanel) then
593:     raise EW3Application.CreateFmt(CNT_ERR_METHOD,[{$I %FUNCTION%},ClassName,Format('Component [%s] not found',[panelName])]);
  if not (modalPanel is TW3CustomControl) then
  if not (modalPanel is TW3CustomControl) then
595:     raise EW3Application.CreateFmt(CNT_ERR_METHOD,[{$I %FUNCTION%},ClassName,Format('Component [%s] is not a TW3CustomControl',[panelName])]);
  if focusControlName = '' then focusControl := nil
    if not Assigned(focusControl) then
600:       raise EW3Application.CreateFmt(CNT_ERR_METHOD,[{$I %FUNCTION%},ClassName,Format('Component [%s] not found',[focusControlName])]);
    if not (focusControl is TW3CustomControl) then
    if not (focusControl is TW3CustomControl) then
602:       raise EW3Application.CreateFmt(CNT_ERR_METHOD,[{$I %FUNCTION%},ClassName,Format('Component [%s] is not a TW3CustomControl',[focusControlName])]);
  end;
          raise EW3Exception.CreateFmt(CNT_ERR_METHOD,
810:           [{$I %FUNCTION%},ClassName,e.Message]);
        end;
      end else
830:       raise EW3Application.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Form already registered']);
    end else
    end else
832:     raise EW3Application.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Form parameter is NIL error']);
  end;
              raise EW3Application.CreateFmt(CNT_ERR_METHOD,
863:               [{$I %FUNCTION%},ClassName,e.Message]);
            end;
        raise EW3Application.CreateFmt(CNT_ERR_METHOD,
869:         [{$I %FUNCTION%},ClassName,
        'Main form cannot be removed error']);
      raise EW3Application.CreateFmt(CNT_ERR_METHOD,
873:       [{$I %FUNCTION%},ClassName,'Form is not registered']);
    end else
    raise EW3Application.CreateFmt(CNT_ERR_METHOD,
876:     [{$I %FUNCTION%},ClassName,'Form parameter is NIL error']);
  end;
        end else
1021:         raise EW3Application.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Form not registered error']);
      end else
      end else
1023:       raise EW3Application.CreateFmt(CNT_ERR_METHOD,[{$I %FUNCTION%},ClassName,'Form parameter is NIL error']);
    end else
    end else
1025:     raise EW3Application.CreateFmt(CNT_ERR_METHOD,[{$I %FUNCTION%},ClassName,'A form transition is already active error']);
  end;
  if aName='' then
1032:     raise EW3Application.CreateFmt(CNT_ERR_METHOD,[{$I %FUNCTION%},ClassName,'Invalid form name error']);


1042:   raise EW3Application.CreateFmt(CNT_ERR_METHOD,[{$I %FUNCTION%},ClassName,Format('Form [%s] not found error',[aName])]);
end;


*************** File 108: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\W3Borders.pas
  end else
225:   raise EW3TagObj.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%}, ClassName, 
    'invalid owner handle error']);
  raise EW3TagObj.CreateFmt(CNT_ERR_METHOD,
255:   [{$I %FUNCTION%},ClassName,'invalid owner handle error']);
end;
  end else
283:   raise EW3TagObj.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid owner handle error']);
end;
  end else
322:     raise EW3TagObj.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%}, ClassName,
      'invalid owner handle error']);
  end else
353:   raise EW3TagObj.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid owner handle error']);
end;


*************** File 109: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\w3c.DOM.pas
      function  getElementsByTagNameNS(namespace : String; localName : String) : JHTMLCollection;
297:       function  getElementsByClassName(classNames : String) : JHTMLCollection;
      function  getElementById(elementId : String) : Element;
      id : String; // Read Only
361:       className : String; // Read Only
      classList : JDOMTokenList; // Read Only
      function  getElementsByTagNameNS(namespace : String; localName : String) : HTMLCollection;
376:       function  getElementsByClassName(classNames : String) : HTMLCollection;



*************** File 110: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\W3ComboBox.pas
      on E: Exception do
50:         raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName, E.Message]);
    end;
  end else
53:   raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Invalid handle error']);
end;
      on E: Exception do
64:         raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName, E.Message]);
    end;
  end else
67:     raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Invalid handle error']);
end;
  end else
87:   raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Invalid error']);
end;
      raise EW3Exception.CreateFmt(CNT_ERR_METHOD,
99:       [{$I %FUNCTION%},ClassName, E.Message]);
    end;
  end else
102:   raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid handle error']);
end;
      on E: Exception do
113:         raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName, E.Message]);
    end;
  end else
116:   raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid handle error']);
end;
      raise EW3Exception.CreateFmt(CNT_ERR_METHOD,
128:       [{$I %FUNCTION%},ClassName, E.Message]);
    end;
  end else
131:   raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid handle error']);
end;
      on E: Exception do
142:       raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName, E.Message]);
    end;
  end else
145:   raise EW3OwnedObject.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid handle error']);
end;
      on E: Exception do
157:       raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName, E.Message]);
    end;
  end else
160:   raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid handle error']);
end;
      on E: Exception do
187:       raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName, E.Message]);
    end;
  end else
190:   raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid handle error']);
end;


*************** File 111: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\w3components.pas
    FScrollInfo: TW3ScrollInfo;
367:     FClassNames: TW3CSSClassStyleNames;
    FFont: TW3ControlFont;
    FGestureData: TW3GestureData;
371:     function getClassNames: TW3CSSClassStyleNames;
    function getScrollInfo: TW3ScrollInfo;
  public
474:     property CSSClasses: TW3CSSClassStyleNames read getClassNames;
    property ScrollInfo: TW3ScrollInfo read getScrollInfo;
                             [methName,
580:                               if instance<>nil then instance.ClassName else 'nil',
                              msg]);
  {$IFDEF DEBUG}
851:   writeln(ClassName + ' destroying');
  {$ENDIF}

1981:   if Assigned(FClassNames) then
  FClassNames.Free;
  if Assigned(FClassNames) then
1982:   FClassNames.Free;

  inherited;
2009:   setStyleClass(ClassName);
  Visible$1 := True;

2030: function TW3CustomControl.getClassNames: TW3CSSClassStyleNames;
begin
begin
2032:   if FClassNames=nil then
  FClassNames := TW3CSSClassStyleNames.Create$7(Self);
  if FClassNames=nil then
2033:   FClassNames := TW3CSSClassStyleNames.Create$7(Self);
  Result := FClassNames;
  FClassNames := TW3CSSClassStyleNames.Create$7(Self);
2034:   Result := FClassNames;
end;


*************** File 112: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\W3CssNames.pas
    property Items[index: Integer]: String read getItem write setItem;
39:     function Add(aCSSClassName: String): Integer;
    function Remove(index: Integer): String;
    function Remove(index: Integer): String;
41:     function RemoveByName(aCSSClassName: String): String;
    function IndexOf(aCSSClassName: String): Integer;
    function RemoveByName(aCSSClassName: String): String;
42:     function IndexOf(aCSSClassName: String): Integer;
    function toString: String;
    else
92:       raise EW3TagObj.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},  ClassName,
        'invalid owner handle error']);
    raise EW3CSSClassStyleNames.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},
96:       ClassName, CNT_ERR_TAGREF_OWNER_ISNIL]);
end;
    mRef.setAttribute(FToken,mText) else
157:     raise EW3TagObj.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid owner handle error']);
  end else
  end else
159:   raise EW3CSSClassStyleNames.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,CNT_ERR_TAGREF_OWNER_ISNIL]);
end;
  end else
181:   raise EW3CSSClassStyleNames.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,CNT_ERR_TAGREF_OWNER_ISNIL]);
end;
  begin
191:     (* get classname string *)
    mRef := TW3TagObj(Owner$1).Handle;
    end else
199:     raise EW3TagObj.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid owner handle error']);
  end else
  end else
201:   raise EW3CSSClassStyleNames.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,CNT_ERR_TAGREF_OWNER_ISNIL]);
end;

204: function TW3CSSClassStyleNames.IndexOf(aCSSClassName: String): Integer;
var
  begin
211:     aCSSClassName := LowerCase(Trim$_String_(aCSSClassName));
    if Length(aCSSClassName)>0 then
    aCSSClassName := LowerCase(Trim$_String_(aCSSClassName));
212:     if Length(aCSSClassName)>0 then
    begin
      begin
216:         if LowerCase(FCache[x])=aCSSClassName then
        begin
  end else
224:   raise EW3CSSClassStyleNames.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,CNT_ERR_TAGREF_OWNER_ISNIL]);
end;

257: function TW3CSSClassStyleNames.Add(aCSSClassName: String): Integer;
var
    begin
267:       w3_AddClass(mRef,aCSSClassName);
      FCache.add(aCSSClassName);
      w3_AddClass(mRef,aCSSClassName);
268:       FCache.add(aCSSClassName);
      Result := FCache.Length-1;
    end else
271:     raise EW3TagObj.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid owner handle error']);
  end else
  end else
273:   raise EW3CSSClassStyleNames.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,CNT_ERR_TAGREF_OWNER_ISNIL]);
end;
    end else
290:     raise EW3TagObj.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid owner handle error']);
  end else
  end else
292:   raise EW3CSSClassStyleNames.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,CNT_ERR_TAGREF_OWNER_ISNIL]);
end;

295: function TW3CSSClassStyleNames.RemoveByName(aCSSClassName: String): String;
var
    begin
306:       w3_RemoveClass(mRef,aCSSClassName);
      mIndex := IndexOf(aCSSClassName);
      w3_RemoveClass(mRef,aCSSClassName);
307:       mIndex := IndexOf(aCSSClassName);
      if mIndex>=0 then
      FCache.Delete(mIndex,1);
310:       Result := aCSSClassName;
    end;
    end;
312:     raise EW3TagObj.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'invalid owner handle error']);
  end else
  end else
314:   raise EW3CSSClassStyleNames.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,CNT_ERR_TAGREF_OWNER_ISNIL]);
end;


*************** File 113: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\W3Dictionaries.pas
  raise EW3Exception.CreateFmt(CNT_ERR_METHOD,
130:   ['setItem',ClassName,'Invalid key']);
end;
  raise EW3Exception.CreateFmt(CNT_ERR_METHOD,
142:   ['setItem',ClassName,'Invalid key']);
end;


*************** File 114: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\W3Editbox.pas
  raise EW3Exception.CreateFmt
106:   (CNT_ERR_METHOD,[{$I %FUNCTION%},ClassName,'Invalid handle error']);
end;
  raise EW3Exception.CreateFmt
114:   (CNT_ERR_METHOD,[{$I %FUNCTION%},ClassName,'Invalid handle error']);
end;
  raise EW3Exception.CreateFmt(CNT_ERR_METHOD,
122:   [{$I %FUNCTION%},ClassName,'Invalid handle error']);
end;
  raise EW3Exception.CreateFmt(CNT_ERR_METHOD,
130:   [{$I %FUNCTION%},ClassName,'Invalid handle error']);
end;
  raise EW3Exception.CreateFmt(CNT_ERR_METHOD,
138:   [{$I %FUNCTION%},ClassName,'Invalid handle error']);
end;
  raise EW3Exception.CreateFmt(CNT_ERR_METHOD,
146:   [{$I %FUNCTION%},ClassName,'Invalid handle error']);
end;
  raise EW3Exception.CreateFmt(CNT_ERR_METHOD,
154:   [{$I %FUNCTION%},ClassName,'Invalid handle error']);
end;
  raise EW3Exception.CreateFmt(CNT_ERR_METHOD,
205:   [{$I %FUNCTION%},ClassName,'Invalid handle error']);
end;
  raise EW3Exception.CreateFmt(CNT_ERR_METHOD,
218:   [{$I %FUNCTION%},ClassName,'Invalid handle error']);
end;
  else
241:     raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Invalid handle error']);
end;
  end else
263:   raise EW3Exception.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName, 'Invalid handle error']);
end;


*************** File 115: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\W3Effects.pas

155:    var css := 'keyframes '+ClassName+' {'+KeyFramesCSS+'}';


184:   FAnimationCmd := ClassName+' '+FloatToStr(Duration)+'s '+cW3AnimationTiming[Timing];
  style.webkitAnimation := FAnimationCmd;


*************** File 116: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\W3Fonts.pas
  Result := w3_getStyleAsStr(mHandle,'fontFamily') else
71:   raise EW3FontError.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Invalid tag handle error']);
end;
  end else
85:   raise EW3FontError.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Invalid tag handle error']);
end;
  Result := w3_getStyleAsInt(mRef$7,'fontSize') else
96:   raise EW3FontError.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Invalid tag handle error']);
end;
  end else
110:   raise EW3FontError.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Invalid tag handle error']);
end;
  end else
124:   raise EW3FontError.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Invalid tag handle error']);
end;
  end else
138:   raise EW3FontError.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Invalid tag handle error']);
end;
  else
149:   raise EW3FontError.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Invalid tag handle error']);
end;
  end else
163:   raise EW3FontError.CreateFmt(CNT_ERR_METHOD, [{$I %FUNCTION%},ClassName,'Invalid tag handle error']);
end;


*************** File 117: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\w3game.pas
        raise EW3GameException.CreateFmt(CNT_ERR_METHOD, ['StartSession', 
95:           ClassName, E$2.Message]);
      end;
          raise EW3GameException.CreateFmt(CNT_ERR_METHOD, ['StartSession',
111:             ClassName, E$3.Message]);
        end;
  end else
118:     raise EW3GameException.CreateFmt(CNT_ERR_METHOD, ['StartSession', ClassName,
      'A session is active error']);
  end else
138:     raise EW3GameException.CreateFmt(CNT_ERR_METHOD, ['EndSession', ClassName,
      'A session is not active error']);
    else
149:       raise EW3GameException.CreateFmt(CNT_ERR_METHOD, ['setDelay', ClassName,
        'Property cannot be altered while active error']);


*************** File 118: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\W3Header.pas

48:   FLabel.Caption$2 := ClassName;
  FLabel.AlignText := taLeft;


*************** File 119: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\W3System.pas
{ CSS management }
343: function w3_HasClass(tagRef$4: THandle; aClassName$1: String): Boolean;
procedure w3_AddClass(tagRef$14: THandle; aClassName$2: String);
function w3_HasClass(tagRef$4: THandle; aClassName$1: String): Boolean;
344: procedure w3_AddClass(tagRef$14: THandle; aClassName$2: String);
procedure w3_RemoveClass(tagRef$3: THandle; aClassName: String);
procedure w3_AddClass(tagRef$14: THandle; aClassName$2: String);
345: procedure w3_RemoveClass(tagRef$3: THandle; aClassName: String);


1660: function w3_HasClass(tagRef$4:THandle;aClassName$1: String): Boolean;
begin
  asm
1663:     @Result = (@tagRef$4).className.match(new RegExp("(\\s|^)"+@aClassName$1+"(\\s|$)"));
  end;

1667: procedure w3_AddClass(tagRef$14:THandle;aClassName$2: String);
begin
begin
1669:   if not w3_HasClass(tagRef$14,aClassName$2) then
  begin
    asm
1672:       (@tagRef$14).className += " " + @aClassName$2;
    end;

1677: procedure w3_RemoveClass(tagRef$3:THandle;aClassName: String);
var
begin
1681:   if w3_HasClass(tagRef$3,aClassName) then
  begin
    asm
1684:       @reg = new RegExp("(\\s|^)" + @aClassName + "(\\s|$)");
      (@tagRef$3).className=(@tagRef$3).className.replace(@reg," ");
      @reg = new RegExp("(\\s|^)" + @aClassName + "(\\s|$)");
1685:       (@tagRef$3).className=(@tagRef$3).className.replace(@reg," ");
    end;
  else
1703:     raise EW3OwnedObject.CreateFmt(CNT_ERR_METHOD, ['constructor', ClassName,
      'Unsuitable owner object-type error']);


*************** File 120: E:\maxbox3\mXGit39988\maxbox3\Examples\archimedes_spiral\bin\debug\W3time.pas
      raise EW3CustomRepeater.Create(Format(CNT_ERR_METHOD,['AllocTimer',
254:         ClassName, E.Message]));
  end;
          raise EW3CustomRepeater.Create(Format(CNT_ERR_METHOD,['ReleaseTimer',
271:             ClassName, E$1.Message]));
      end;


*************** File 121: E:\maxbox3\mXGit39988\maxbox3\Examples\units\advapi32.pas
      hWndParent: HWND; lpDialogFunc: TFNDlgProc; dwInitParam: LPARAM): HWND; stdcall;
594:     function CreateMDIWindow(lpClassName, lpWindowName: PKOLChar;
      dwStyle: DWORD; X, Y, nWidth, nHeight: Integer;
      hWndParent: HWND; hInstance: HINST; lParam: LPARAM): HWND; stdcall;
597:     function CreateWindowEx(dwExStyle: DWORD; lpClassName: PKOLChar;
      lpWindowName: PKOLChar; dwStyle: DWORD; X, Y, nWidth, nHeight: Integer;
    function EnumWindowStations(lpEnumFunc: TFNWinStaEnumProc; lParam: LPARAM): BOOL; stdcall;
632:     function FindWindow(lpClassName, lpWindowName: PKOLChar): HWND; stdcall;
    function FindWindowEx(Parent, Child: HWND; ClassName, WindowName: PKOLChar): HWND; stdcall;
    function FindWindow(lpClassName, lpWindowName: PKOLChar): HWND; stdcall;
633:     function FindWindowEx(Parent, Child: HWND; ClassName, WindowName: PKOLChar): HWND; stdcall;
    function GetAltTabInfo(hwnd: HWND; iItem: Integer; var pati: TAltTabInfo;
      pszItemText: PKOLChar; cchItemText: UINT): BOOL; stdcall;
636:     function GetClassInfo(hInstance: HINST; lpClassName: PKOLChar;
      var lpWndClass: TWndClass): BOOL; stdcall;
      var lpWndClass: TWndClass): BOOL; stdcall;
638:     function GetClassInfoEx(Instance: HINST; Classname: PKOLChar; var WndClass: TWndClassEx): BOOL; stdcall;
    function GetClassLong(hWnd: HWND; nIndex: Integer): DWORD; stdcall;
    function GetClassLong(hWnd: HWND; nIndex: Integer): DWORD; stdcall;
640:     function GetClassName(hWnd: HWND; lpClassName: PKOLChar; nMaxCount: Integer): Integer; stdcall;
    function GetClipboardFormatName(format: UINT; lpszFormatName: PKOLChar;
    function TranslateAccelerator(hWnd: HWND; hAccTable: HACCEL; var lpMsg: TMsg): Integer; stdcall;
732:     function UnregisterClass(lpClassName: PKOLChar; hInstance: HINST): BOOL; stdcall;
    function VkKeyScan(ch: KOLChar): SHORT; stdcall;
    function GetClassLong; external user32 name 'GetClassLongW';
1080:     function GetClassName; external user32 name 'GetClassNameW';
    function GetClipboardFormatName; external user32 name 'GetClipboardFormatNameW';


*************** File 122: E:\maxbox3\mXGit39988\maxbox3\Examples\units\advapi32mX.pas
      hWndParent: HWND; lpDialogFunc: TFNDlgProc; dwInitParam: LPARAM): HWND; stdcall;
594:     function CreateMDIWindow(lpClassName, lpWindowName: PKOLChar;
      dwStyle: DWORD; X, Y, nWidth, nHeight: Integer;
      hWndParent: HWND; hInstance: HINST; lParam: LPARAM): HWND; stdcall;
597:     function CreateWindowEx(dwExStyle: DWORD; lpClassName: PKOLChar;
      lpWindowName: PKOLChar; dwStyle: DWORD; X, Y, nWidth, nHeight: Integer;
    function EnumWindowStations(lpEnumFunc: TFNWinStaEnumProc; lParam: LPARAM): BOOL; stdcall;
632:     function FindWindow(lpClassName, lpWindowName: PKOLChar): HWND; stdcall;
    function FindWindowEx(Parent, Child: HWND; ClassName, WindowName: PKOLChar): HWND; stdcall;
    function FindWindow(lpClassName, lpWindowName: PKOLChar): HWND; stdcall;
633:     function FindWindowEx(Parent, Child: HWND; ClassName, WindowName: PKOLChar): HWND; stdcall;
    function GetAltTabInfo(hwnd: HWND; iItem: Integer; var pati: TAltTabInfo;
      pszItemText: PKOLChar; cchItemText: UINT): BOOL; stdcall;
636:     function GetClassInfo(hInstance: HINST; lpClassName: PKOLChar;
      var lpWndClass: TWndClass): BOOL; stdcall;
      var lpWndClass: TWndClass): BOOL; stdcall;
638:     function GetClassInfoEx(Instance: HINST; Classname: PKOLChar; var WndClass: TWndClassEx): BOOL; stdcall;
    function GetClassLong(hWnd: HWND; nIndex: Integer): DWORD; stdcall;
    function GetClassLong(hWnd: HWND; nIndex: Integer): DWORD; stdcall;
640:     function GetClassName(hWnd: HWND; lpClassName: PKOLChar; nMaxCount: Integer): Integer; stdcall;
    function GetClipboardFormatName(format: UINT; lpszFormatName: PKOLChar;
    function TranslateAccelerator(hWnd: HWND; hAccTable: HACCEL; var lpMsg: TMsg): Integer; stdcall;
732:     function UnregisterClass(lpClassName: PKOLChar; hInstance: HINST): BOOL; stdcall;
    function VkKeyScan(ch: KOLChar): SHORT; stdcall;
    function GetClassLong; external user32 name 'GetClassLongW';
1080:     function GetClassName; external user32 name 'GetClassNameW';
    function GetClipboardFormatName; external user32 name 'GetClipboardFormatNameW';

Found 122 Finder files of: 14:03:2015
"Search and Found for classname
0 h run time is: 00:07:888
